Changes in 1.5.9 (22 October 2016)
* Fixed resource leak when reading character data from HDF5 MAT file
* Fixed bug writing struct to HDF5 MAT file: Mat_VarWrite never returned 0 on success
* Fixed bug writing sparse logical array to HDF5 MAT file
* Fixed bug calculating array sizes of structs, cells, complex and sparse arrays in Mat_VarGetSize
* Fixed bug duplicating sparse array with empty data in Mat_VarDuplicate
* Fixed segmentation fault when reading compressed v5 MAT file with opaque class
* Updated support of HDF5 v1.10.x: No longer depend on deprecated v1.8.x symbols

Changes in 1.5.8 (30 June 2016)
* Fixed bug writing array to v4 MAT file on big endian architecture (broken by v1.5.7)

Changes in 1.5.7 (22 June 2016)
* Added support for MAT_T_UTF16 when reading character array from v5 MAT file
* Added support of HDF5 v1.10.x (with deprecated v1.8.x symbols exported)
* Added warning on unsupported character data types when reading v5 MAT file
* Added error check if variable already exists when writing to MAT file
* Fixed support of custom log functions: Moved log levels to the public interface
* Fixed bug creating v4 and v5 MAT file: Open in write+update mode
* Fixed bug creating v5 and HDF5 MAT file: Set BOF marker to 128
* Fixed bug in Mat_VarDelete: Rewind file before looping over variables
* Fixed bug writing cell array with empty struct fields to compressed v5 MAT file
* Fixed bug reading empty character array from HDF5 MAT file
* Fixed bug iterating through links in a group of HDF5 MAT file
* Fixed bug iterating on #subsystem# group of HDF5 MAT file
* Fixed compilation out of source directory
* Fixed C++ compilation on MinGW
* Restructured testsuite
* Fixed testsuite if hdf5 dependency is missing
* Increased testsuite coverage
* Various fixes for variable scopes that cause compilers to issue diagnostics

Changes in 1.5.6 (23 February 2016)
* Fixed bug writing array to v4 MAT file on big endian architecture
* Fixed bug writing header with more than 127 characters to v5 or HDF5 MAT file

Changes in 1.5.5 (19 February 2016)
* Added support of reading sparse array from v4 MAT file
* Added support of writing sparse array to v4 MAT file
* Added support of writing character array to v4 MAT file
* Added support of autogen.sh on Darwin
* Added missing Visual Studio project files for test_mat
* Added missing Visual Studio resource file
* Enabled C++ compilation
* Updated snprintf.c to C99 snprintf v1.1
* Increased testsuite coverage
* Fixed bug writing complex array to v4 MAT file
* Fixed bug writing cell containing a struct with fields but empty array to compressed v5 MAT file
* Fixed bug reading hyperslabs of cells and struct fields from compressed v5 MAT file (broken by v1.5.3)
* Fixed bug writing empty character array to uncompressed v5 MAT file
* Fixed bug reading cells and struct fields from HDF5 MAT file
* Fixed bug printing array dimensions in Mat_VarPrint on MinGW
* Fixed bug calculating array sizes of structs in Mat_VarGetSize
* Fixed bug duplicating sparse array in Mat_VarDuplicate
* Fixed testsuite if zlib/hdf5 dependencies are missing
* Several other fixes, especially for memory leaks

Changes in 1.5.3 (11 January 2016)
* Added support for writing numeric arrays to v4 MAT file
* Added Visual Studio project for test_mat
* Added new API functions Mat_CalcSingleSubscript2 and Mat_CalcSubscripts2 that
  work on size_t type
* Fixed memory consumption reading compressed v5 MAT file
* Fixed bug writing compressed v5 MAT file
* Fixed bug in Mat_VarReadNextInfo5 where freed variable was not set to NULL
* Fixed several bugs in Mat_VarDelete
* Fixed bug writing empty struct to HDF5 MAT file
* Fixed bug writing character array to HDF5 MAT file
* Fixed bug writing character array to compressed v5 MAT file
* Updated Visual Studio solution and project files to work with newer HDF5 and
  Visual Studio versions
* Various fixes for unused variables, unnecessary initializations, etc. that
  cause compilers to issue diagnostics
* Several other fixes, especially for memory leaks

Changes in 1.5.2 (31 July 2013)
* Added support for linear data read for v4 and HDF5 MAT file
* Fixed bug reading slices of variables in matdump
* Fixed feof calls so they compile on platforms that dereference the argument in a macro
* More robust checking that file is MAT file and eliminates some segmentation faults
* Various fixes for unused variables, unnecessary initializations, etc. that
  cause compilers to issue diagnostics
* Several other fixes

Changes in 1.5.1 (10 March 2013)
* Fixed bug writing compressed HDF5 file
* Fixed bug reading cell array elements written with a non-empty variable name
* Fixed bug writing complex sparse matrices as struct fields or cell elements to
  uncompressed v5 MAT file
* Fixed a number of potential issues identified via static analysis
* Fixed uninitialized pointers when creating structures through
  Mat_VarCreateStruct, and fix a bug in the struct API testsuite
* Fixed extended sparse support in v7.3 MAT file
* Added 64-bit integer support for v5 MAT file
* Added missing support for reading hyperslabs from HDF5 MAT file
* Added variable indexing notation support to matdump to display subsets of
  variables
* Added tests for extended sparse support in testsuite
* Added missing enumerations or default case in switch statements

Changes in 1.5.0 (15 April 2012)
* Changed licensing from the GNU Lesser General Public License to the BSD-2-Clause License
* Added support for reading/writing HDF5 MAT file
* Bug fixes for compressed variables that caused issues with matio reading them
* Upgraded dimensions in matvar_t structure to size_t enabling support for large arrays
* Added a testsuite

Changes in 1.3.2 (28 October 2006)
* Added support for writing compressed character classes, structures, cell arrays, and sparse arrays
* Added some tests to the test_mat program: write_compressed_cell, write_compressed_sparse
* Added 64-bit signed/unsigned integer support
* Fixed bugs in Reading slabs of N-dimensional data

Changes in 1.3.1 (7 September 2006)
* Added some internal documentation to the library
* Defined two documentation groups public and internal
* Disabled the building of test programs by default and added a configure option to build them
* Fixed installation path of data and documentation
* Fixed bugs where file pointers were left open if allocating memory failed in Mat_Open and Mat_Create

Changes in 1.3.0 (30 June 2006)
* Cleaned out matio.h and made most preprocessor define's into enum's
* Moved complex arrays from single pointer with real part followed by imaginary
  part to a struct with a pointer to the real part and a pointer to the
  imaginary part (Previous implementation was just plain ignorant)
* Changed v4 MAT file code from MAT_V4 to MAT_FT_MAT4 to match the v5 identifier
* Added function Mat_VarCalloc to allocate and initialize all fields of the
  matvar_t structure
Bug Fixes in 1.3.0 (30 June 2006)
* WriteCompressedData did not initialize the data tag (data_tag variable)
* WriteStructField wrote the array name tag as a 2 byte integer followed by 2
  padding bytes. Correct implementation writes the array name tag as a 4 byte
  integer.
* Write5 wrote the array name tag as a 2 byte integer followed by 2
  padding bytes when the name was more than 4 characters. Correct
  implementation writes the array name tag as a 4 byte integer.
* Write5 had a hard-coded uncompressed variable size of 448 when writing
  compressed data.
* WriteInfo5 wrote the array name tag as a 2 byte integer followed by 2
  padding bytes when the name was more than 4 characters. Correct
  implementation writes the array name tag as a 4 byte integer.
* Mat_Create wrote the endian sequence incorrectly.
* Mat_VarCreate set the number of bytes incorrectly for structures.
* Mat_VarCreate fixed the data size of the character class to 1. That didn't
  allow for multi-byte characters.

Changes in 1.1.6 (20 March 2006)
* Added sparse class to compressed variable
Bug Fixes in 1.1.6 (20 March 2006)
* Fixed release bug in reading double class data
* Fixed various compressed variable writing bugs
* Fixed a bug in Mat_VarCreate for sparse variables

Changes in 1.1.4 (9 February 2006)
* Changed licensing from the GNU General Public License to the GNU Lesser
  General Public License
* Added support for reading numeric v4 MAT file
* Added support for sparse datatypes other than double. Although MATLAB does
  not support these types, other free software does.
* Writing compressed variables is supported for numeric arrays. Future versions
  will implement character, sparse, cell, and structure arrays.
* A Fortran 90/95 interface has been incorporated. Not all functions are
  implemented yet, but more will come and it is at least functional now.
  Hopefully feedback will help guide the Fortran interface development.
* Replaced preprocessor defines for types, classes, etc. with enum's.
Bug Fixes in 1.1.4 (9 January 2006)
* Mat_VarReadData did not handle complex data.
