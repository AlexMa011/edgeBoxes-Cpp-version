.\" Copyright (c) 2012-2016 Christopher C. Hulbert
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY CHRISTOPHER C. HULBERT ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL CHRISTOPHER C. HULBERT OR CONTRIBUTORS
.\" BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd March 14, 2012
.Dt MAT_VARGETSTRUCTSLINEAR 3
.Os
.Sh NAME
.Nm Mat_VarGetStructsLinear
.Nd Linearly index a structure variable
.Sh SYNOPSIS
.Fd #include <matio.h>
.Ft matvar_t *
.Fo Mat_VarGetStructsLinear
.Fa "const matvar_t *matvar"
.Fa "int start"
.Fa "int stride"
.Fa "int edge"
.Fa "int copy_fields"
.Fc
.Sh DESCRIPTION
The
.Fn Mat_VarGetStructsLinear
function selects a subarray from a structure array
.Fa matvar.
Each of the elements in the subarray contains all of the fields of the
structure. The indexing starts at the
.Fa start
element in the array (0 being the first element), and reads every
.Fa stride
values (1 being every element, 2 every other element, etc.). The total number
of elements in the subarray is specified as
.Fa edge.
The original array must have at least
.Fa start+(stride-1)*edge+1
elements. The
.Fa copy_fields
option specifies whether the fields of the original structure are copied for
the new subarray. If set to 0, the returned structure array's fields have the
same pointer as the original array, and the
.Dv data
field of the subarray structure. The subarray is marked with the conserve
memory flag indicating that the fields should not be free'd. They are free'd
when the original structure is free'd.
.Sh RETURN VALUES
A subarray of the original structure array, or NULL if there is an error.
.Sh SEE ALSO
.Xr Mat_VarGetStructs 3 ,
