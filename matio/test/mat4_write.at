# Copyright (C) 2010-2016   Christopher C. Hulbert
#
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#    1. Redistributions of source code must retain the above copyright notice,
#       this list of conditions and the following disclaimer.
#
#    2. Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY CHRISTOPHER C. HULBERT ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL CHRISTOPHER C. HULBERT OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

AT_SETUP([Write 2D double array])
AT_CHECK([$builddir/test_mat -v 4 -c double write_2d_numeric],[0],[],[])
AT_CHECK([cp $srcdir/results/write_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a],[0],[expout],[])
AT_SKIP_IF([test -z "$MATLABEXE"])
AT_CHECK([cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_2d_numeric" | $GREP PASSED],[0],[PASSED],[])
AT_CLEANUP

AT_SETUP([Write 2D single array])
AT_CHECK([$builddir/test_mat -v 4 -c single write_2d_numeric],[0],[],[])
AT_CHECK([cp $srcdir/results/write_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a],[0],[expout],[])
AT_SKIP_IF([test -z "$MATLABEXE"])
AT_CHECK([cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_2d_numeric" | $GREP PASSED],[0],[PASSED],[])
AT_CLEANUP

AT_SETUP([Write 2D int32 array])
AT_CHECK([$builddir/test_mat -v 4 -c int32 write_2d_numeric],[0],[],[])
AT_CHECK([cp $srcdir/results/write_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a],[0],[expout],[])
AT_SKIP_IF([test -z "$MATLABEXE"])
AT_CHECK([cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_2d_numeric" | $GREP PASSED],[0],[PASSED],[])
AT_CLEANUP

AT_SETUP([Write 2D int16 array])
AT_CHECK([$builddir/test_mat -v 4 -c int16 write_2d_numeric],[0],[],[])
AT_CHECK([cp $srcdir/results/write_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a],[0],[expout],[])
AT_SKIP_IF([test -z "$MATLABEXE"])
AT_CHECK([cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_2d_numeric" | $GREP PASSED],[0],[PASSED],[])
AT_CLEANUP

AT_SETUP([Write 2D uint16 array])
AT_CHECK([$builddir/test_mat -v 4 -c uint16 write_2d_numeric],[0],[],[])
AT_CHECK([cp $srcdir/results/write_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a],[0],[expout],[])
AT_SKIP_IF([test -z "$MATLABEXE"])
AT_CHECK([cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_2d_numeric" | $GREP PASSED],[0],[PASSED],[])
AT_CLEANUP

AT_SETUP([Write 2D uint8 array])
AT_CHECK([$builddir/test_mat -v 4 -c uint8 write_2d_numeric],[0],[],[])
AT_CHECK([cp $srcdir/results/write_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a],[0],[expout],[])
AT_SKIP_IF([test -z "$MATLABEXE"])
AT_CHECK([cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_2d_numeric" | $GREP PASSED],[0],[PASSED],[])
AT_CLEANUP

AT_SETUP([Write 2D complex double array])
AT_CHECK([$builddir/test_mat -v 4 -c double write_complex_2d_numeric],[0],[],[])
AT_CHECK([cp $srcdir/results/write_complex_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a],[0],[expout],[])
AT_SKIP_IF([test -z "$MATLABEXE"])
AT_CHECK([cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_complex_2d_numeric" | $GREP PASSED],[0],[PASSED],[])
AT_CLEANUP

AT_SETUP([Write 2D complex single array])
AT_CHECK([$builddir/test_mat -v 4 -c single write_complex_2d_numeric],[0],[],[])
AT_CHECK([cp $srcdir/results/write_complex_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a],[0],[expout],[])
AT_SKIP_IF([test -z "$MATLABEXE"])
AT_CHECK([cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_complex_2d_numeric" | $GREP PASSED],[0],[PASSED],[])
AT_CLEANUP

AT_SETUP([Write 2D complex int32 array])
AT_CHECK([$builddir/test_mat -v 4 -c int32 write_complex_2d_numeric],[0],[],[])
AT_CHECK([cp $srcdir/results/write_complex_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a],[0],[expout],[])
AT_SKIP_IF([test -z "$MATLABEXE"])
AT_CHECK([cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_complex_2d_numeric" | $GREP PASSED],[0],[PASSED],[])
AT_CLEANUP

AT_SETUP([Write 2D complex int16 array])
AT_CHECK([$builddir/test_mat -v 4 -c int16 write_complex_2d_numeric],[0],[],[])
AT_CHECK([cp $srcdir/results/write_complex_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a],[0],[expout],[])
AT_SKIP_IF([test -z "$MATLABEXE"])
AT_CHECK([cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_complex_2d_numeric" | $GREP PASSED],[0],[PASSED],[])
AT_CLEANUP

AT_SETUP([Write 2D complex uint16 array])
AT_CHECK([$builddir/test_mat -v 4 -c uint16 write_complex_2d_numeric],[0],[],[])
AT_CHECK([cp $srcdir/results/write_complex_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a],[0],[expout],[])
AT_SKIP_IF([test -z "$MATLABEXE"])
AT_CHECK([cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_complex_2d_numeric" | $GREP PASSED],[0],[PASSED],[])
AT_CLEANUP

AT_SETUP([Write 2D complex uint8 array])
AT_CHECK([$builddir/test_mat -v 4 -c uint8 write_complex_2d_numeric],[0],[],[])
AT_CHECK([cp $srcdir/results/write_complex_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a],[0],[expout],[])
AT_SKIP_IF([test -z "$MATLABEXE"])
AT_CHECK([cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_complex_2d_numeric" | $GREP PASSED],[0],[PASSED],[])
AT_CLEANUP

AT_SETUP([Write 2D sparse double array])
AT_CHECK([$builddir/test_mat -v 4 -c double write_sparse],[0],[],[])
AT_CHECK([cp $srcdir/results/readvar-write_sparse-sparse_matrix-double.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix],[0],[expout],[])
AT_SKIP_IF([test -z "$MATLABEXE"])
AT_CHECK([cp $srcdir/matlab/test_write_sparse.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_sparse" | $GREP PASSED],[0],[PASSED],[])
AT_CLEANUP

AT_SETUP([Write 2D sparse complex double array])
AT_CHECK([$builddir/test_mat -v 4 -c double write_complex_sparse],[0],[],[])
AT_CHECK([cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-double.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix],[0],[expout],[])
AT_SKIP_IF([test -z "$MATLABEXE"])
AT_CHECK([cp $srcdir/matlab/test_write_sparse_complex.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_sparse_complex" | $GREP PASSED],[0],[PASSED],[])
AT_CLEANUP

AT_SETUP([Write 2D empty array])
AT_KEYWORDS([empty])
AT_CHECK([$builddir/test_mat -v 4 -c double write_empty_2d_numeric],[0],[],[])
AT_CHECK([cp $srcdir/results/readvar-write_empty_2d_numeric-empty.out expout
          $builddir/test_mat readvar test_write_empty_2d_numeric.mat empty],[0],[expout],[])
AT_SKIP_IF([test -z "$MATLABEXE"])
AT_CHECK([cp $srcdir/matlab/test_write_empty.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_empty" | $GREP PASSED],[0],[PASSED],[])
AT_CLEANUP

AT_SETUP([Write character array])
AT_CHECK([$builddir/test_mat -v 4 write_char],[0],[],[])
AT_CHECK([cp $srcdir/results/readvar-write_char-a.out expout
          $builddir/test_mat readvar test_write_char.mat a],[0],[expout],[])
AT_SKIP_IF([test -z "$MATLABEXE"])
AT_CHECK([cp $srcdir/matlab/test_write_char.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_char" | $GREP PASSED],[0],[PASSED],[])
AT_CLEANUP
