#! /bin/sh
# Generated from testsuite.at by GNU Autoconf 2.69.
#
# Copyright (C) 2009-2012 Free Software Foundation, Inc.
#
# This test suite is free software; the Free Software Foundation gives
# unlimited permission to copy, distribute and modify it.
#
# Copyright (C) 2010-2016 Christopher C. Hulbert
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else
  case `(set -o) 2>/dev/null` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi


as_nl='
'
export as_nl
# Printing a long string crashes Solaris 7 /usr/bin/printf.
as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
# Prefer a ksh shell builtin over an external printf program on Solaris,
# but without wasting forks for bash or zsh.
if test -z "$BASH_VERSION$ZSH_VERSION" \
    && (test "X`print -r -- $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='print -r --'
  as_echo_n='print -rn --'
elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='printf %s\n'
  as_echo_n='printf %s'
else
  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
    as_echo_n='/usr/ucb/echo -n'
  else
    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
    as_echo_n_body='eval
      arg=$1;
      case $arg in #(
      *"$as_nl"*)
	expr "X$arg" : "X\\(.*\\)$as_nl";
	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
      esac;
      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
    '
    export as_echo_n_body
    as_echo_n='sh -c $as_echo_n_body as_echo'
  fi
  export as_echo_body
  as_echo='sh -c $as_echo_body as_echo'
fi

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# IFS
# We need space, tab and new line, in precisely that order.  Quoting is
# there to prevent editors from complaining about space-tab.
# (If _AS_PATH_WALK were called with IFS unset, it would disable word
# splitting by setting IFS to empty value.)
IFS=" ""	$as_nl"

# Find who we are.  Look in the path if we contain no directory separator.
as_myself=
case $0 in #((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi

# Unset variables that we do not need and which cause bugs (e.g. in
# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the "|| exit 1"
# suppresses any "Segmentation fault" message there.  '((' could
# trigger a bug in pdksh 5.2.14.
for as_var in BASH_ENV ENV MAIL MAILPATH
do eval test x\${$as_var+set} = xset \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# CDPATH.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH

if test "x$CONFIG_SHELL" = x; then
  as_bourne_compatible="if test -n \"\${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on \${1+\"\$@\"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '\${1+\"\$@\"}'='\"\$@\"'
  setopt NO_GLOB_SUBST
else
  case \`(set -o) 2>/dev/null\` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi
"
  as_required="as_fn_return () { (exit \$1); }
as_fn_success () { as_fn_return 0; }
as_fn_failure () { as_fn_return 1; }
as_fn_ret_success () { return 0; }
as_fn_ret_failure () { return 1; }

exitcode=0
as_fn_success || { exitcode=1; echo as_fn_success failed.; }
as_fn_failure && { exitcode=1; echo as_fn_failure succeeded.; }
as_fn_ret_success || { exitcode=1; echo as_fn_ret_success failed.; }
as_fn_ret_failure && { exitcode=1; echo as_fn_ret_failure succeeded.; }
if ( set x; as_fn_ret_success y && test x = \"\$1\" ); then :

else
  exitcode=1; echo positional parameters were not saved.
fi
test x\$exitcode = x0 || exit 1
test -x / || exit 1"
  as_suggested="  as_lineno_1=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_1a=\$LINENO
  as_lineno_2=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_2a=\$LINENO
  eval 'test \"x\$as_lineno_1'\$as_run'\" != \"x\$as_lineno_2'\$as_run'\" &&
  test \"x\`expr \$as_lineno_1'\$as_run' + 1\`\" = \"x\$as_lineno_2'\$as_run'\"' || exit 1
test \$(( 1 + 1 )) = 2 || exit 1"
  if (eval "$as_required") 2>/dev/null; then :
  as_have_required=yes
else
  as_have_required=no
fi
  if test x$as_have_required = xyes && (eval "$as_suggested") 2>/dev/null; then :

else
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_found=false
for as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  as_found=:
  case $as_dir in #(
	 /*)
	   for as_base in sh bash ksh sh5; do
	     # Try only shells that exist, to save several forks.
	     as_shell=$as_dir/$as_base
	     if { test -f "$as_shell" || test -f "$as_shell.exe"; } &&
		    { $as_echo "$as_bourne_compatible""$as_required" | as_run=a "$as_shell"; } 2>/dev/null; then :
  CONFIG_SHELL=$as_shell as_have_required=yes
		   if { $as_echo "$as_bourne_compatible""$as_suggested" | as_run=a "$as_shell"; } 2>/dev/null; then :
  break 2
fi
fi
	   done;;
       esac
  as_found=false
done
$as_found || { if { test -f "$SHELL" || test -f "$SHELL.exe"; } &&
	      { $as_echo "$as_bourne_compatible""$as_required" | as_run=a "$SHELL"; } 2>/dev/null; then :
  CONFIG_SHELL=$SHELL as_have_required=yes
fi; }
IFS=$as_save_IFS


      if test "x$CONFIG_SHELL" != x; then :
  export CONFIG_SHELL
             # We cannot yet assume a decent shell, so we have to provide a
# neutralization value for shells without unset; and this also
# works around shells that cannot unset nonexistent variables.
# Preserve -v and -x to the replacement shell.
BASH_ENV=/dev/null
ENV=/dev/null
(unset BASH_ENV) >/dev/null 2>&1 && unset BASH_ENV ENV
case $- in # ((((
  *v*x* | *x*v* ) as_opts=-vx ;;
  *v* ) as_opts=-v ;;
  *x* ) as_opts=-x ;;
  * ) as_opts= ;;
esac
exec $CONFIG_SHELL $as_opts "$as_myself" ${1+"$@"}
# Admittedly, this is quite paranoid, since all the known shells bail
# out after a failed `exec'.
$as_echo "$0: could not re-execute with $CONFIG_SHELL" >&2
exit 255
fi

    if test x$as_have_required = xno; then :
  $as_echo "$0: This script requires a shell more modern than all"
  $as_echo "$0: the shells that I found on your system."
  if test x${ZSH_VERSION+set} = xset ; then
    $as_echo "$0: In particular, zsh $ZSH_VERSION has bugs and should"
    $as_echo "$0: be upgraded to zsh 4.3.4 or later."
  else
    $as_echo "$0: Please tell bug-autoconf@gnu.org about your system,
$0: including any error possibly output before this
$0: message. Then install a modern shell, or manually run
$0: the script under such a shell if you do have one."
  fi
  exit 1
fi
fi
fi
SHELL=${CONFIG_SHELL-/bin/sh}
export SHELL
# Unset more variables known to interfere with behavior of common tools.
CLICOLOR_FORCE= GREP_OPTIONS=
unset CLICOLOR_FORCE GREP_OPTIONS

## --------------------- ##
## M4sh Shell Functions. ##
## --------------------- ##
# as_fn_unset VAR
# ---------------
# Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset

# as_fn_set_status STATUS
# -----------------------
# Set $? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} # as_fn_set_status

# as_fn_exit STATUS
# -----------------
# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} # as_fn_exit

# as_fn_mkdir_p
# -------------
# Create "$as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error $? "cannot create directory $as_dir"


} # as_fn_mkdir_p

# as_fn_executable_p FILE
# -----------------------
# Test if FILE is an executable regular file.
as_fn_executable_p ()
{
  test -f "$1" && test -x "$1"
} # as_fn_executable_p
# as_fn_append VAR VALUE
# ----------------------
# Append the text in VALUE to the end of the definition contained in VAR. Take
# advantage of any shell optimizations that allow amortized linear growth over
# repeated appends, instead of the typical quadratic growth present in naive
# implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else
  as_fn_append ()
  {
    eval $1=\$$1\$2
  }
fi # as_fn_append

# as_fn_arith ARG...
# ------------------
# Perform arithmetic evaluation on the ARGs, and store the result in the
# global $as_val. Take advantage of shells that can avoid forks. The arguments
# must be portable across $(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else
  as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  }
fi # as_fn_arith


# as_fn_error STATUS ERROR [LINENO LOG_FD]
# ----------------------------------------
# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
# script with STATUS, using 1 if that was 0.
as_fn_error ()
{
  as_status=$1; test $as_status -eq 0 && as_status=1
  if test "$4"; then
    as_lineno=${as_lineno-"$3"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    $as_echo "$as_me:${as_lineno-$LINENO}: error: $2" >&$4
  fi
  $as_echo "$as_me: error: $2" >&2
  as_fn_exit $as_status
} # as_fn_error

if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits


  as_lineno_1=$LINENO as_lineno_1a=$LINENO
  as_lineno_2=$LINENO as_lineno_2a=$LINENO
  eval 'test "x$as_lineno_1'$as_run'" != "x$as_lineno_2'$as_run'" &&
  test "x`expr $as_lineno_1'$as_run' + 1`" = "x$as_lineno_2'$as_run'"' || {
  # Blame Lee E. McMahon (1931-1989) for sed's syntax.  :-)
  sed -n '
    p
    /[$]LINENO/=
  ' <$as_myself |
    sed '
      s/[$]LINENO.*/&-/
      t lineno
      b
      :lineno
      N
      :loop
      s/[$]LINENO\([^'$as_cr_alnum'_].*\n\)\(.*\)/\2\1\2/
      t loop
      s/-\n.*//
    ' >$as_me.lineno &&
  chmod +x "$as_me.lineno" ||
    { $as_echo "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2; as_fn_exit 1; }

  # If we had to re-execute with $CONFIG_SHELL, we're ensured to have
  # already done that, so ensure we don't try to do so again and fall
  # in an infinite loop.  This has already happened in practice.
  _as_can_reexec=no; export _as_can_reexec
  # Don't try to exec as it changes $[0], causing all sort of problems
  # (the dirname of $[0] is not the place where we might find the
  # original and so on.  Autoconf is especially sensitive to this).
  . "./$as_me.lineno"
  # Exit status is that of the last command.
  exit
}

ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in #(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -pR'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -pR'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -pR'
  fi
else
  as_ln_s='cp -pR'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null

if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi

as_test_x='test -x'
as_executable_p=as_fn_executable_p

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"





SHELL=${CONFIG_SHELL-/bin/sh}

# How were we run?
at_cli_args="$@"


# Not all shells have the 'times' builtin; the subshell is needed to make
# sure we discard the 'times: not found' message from the shell.
at_times_p=false
(times) >/dev/null 2>&1 && at_times_p=:

# CLI Arguments to pass to the debugging scripts.
at_debug_args=
# -e sets to true
at_errexit_p=false
# Shall we be verbose?  ':' means no, empty means yes.
at_verbose=:
at_quiet=
# Running several jobs in parallel, 0 means as many as test groups.
at_jobs=1
at_traceon=:
at_trace_echo=:
at_check_filter_trace=:

# Shall we keep the debug scripts?  Must be `:' when the suite is
# run by a debug script, so that the script doesn't remove itself.
at_debug_p=false
# Display help message?
at_help_p=false
# Display the version message?
at_version_p=false
# List test groups?
at_list_p=false
# --clean
at_clean=false
# Test groups to run
at_groups=
# Whether to rerun failed tests.
at_recheck=
# Whether a write failure occurred
at_write_fail=0

# The directory we run the suite in.  Default to . if no -C option.
at_dir=`pwd`
# An absolute reference to this testsuite script.
case $as_myself in
  [\\/]* | ?:[\\/]* ) at_myself=$as_myself ;;
  * ) at_myself=$at_dir/$as_myself ;;
esac
# Whether -C is in effect.
at_change_dir=false

# Whether to enable colored test results.
at_color=auto
# List of the tested programs.
at_tested='test_mat'
# As many question marks as there are digits in the last test group number.
# Used to normalize the test group numbers so that `ls' lists them in
# numerical order.
at_format='????'
# Description of all the test groups.
at_help_all="1;mat4_read_le.at:29;Read 2d double array;mat4_read_le;
2;mat4_read_le.at:37;Read 2d complex double array;mat4_read_le;
3;mat4_read_le.at:45;Read sparse double array;;
4;mat4_read_le.at:50;Read sparse complex double array;;
5;mat4_read_le.at:55;Read 2D character array;mat4_read_le;
6;mat4_read_le.at:61;Read small v4 file;mat4_read_le;
7;mat4_readslab_le.at:29;Read linear slab of double array;mat4_readslab readslab read_data_linear;
8;mat4_readslab_le.at:35;Read linear slab of complex double array;mat4_readslab readslab read_data_linear;
9;mat4_readslab_le.at:41;Read slab of double array;mat4_readslab readslab;
10;mat4_readslab_le.at:47;Read slab of complex double array;mat4_readslab readslab;
11;mat4_read_be.at:29;Read 2d double array;mat4_read_be;
12;mat4_read_be.at:37;Read 2d complex double array;mat4_read_be;
13;mat4_read_be.at:45;Read sparse double array;;
14;mat4_read_be.at:50;Read sparse complex double array;;
15;mat4_read_be.at:55;Read 2D character array;mat4_read_be;
16;mat4_read_be.at:61;Read small v4 file;mat4_read_be;
17;mat4_readslab_be.at:29;Read linear slab of double array;mat4_readslab readslab read_data_linear;
18;mat4_readslab_be.at:35;Read linear slab of complex double array;mat4_readslab readslab read_data_linear;
19;mat4_readslab_be.at:41;Read slab of double array;mat4_readslab readslab;
20;mat4_readslab_be.at:47;Read slab of complex double array;mat4_readslab readslab;
21;mat5_uncompressed_read_le.at:27;Read 2D double array;;
22;mat5_uncompressed_read_le.at:34;Read 2D single array;;
23;mat5_uncompressed_read_le.at:39;Read 2D int64 array;;
24;mat5_uncompressed_read_le.at:44;Read 2D uint64 array;;
25;mat5_uncompressed_read_le.at:49;Read 2D int32 array;;
26;mat5_uncompressed_read_le.at:54;Read 2D uint32 array;;
27;mat5_uncompressed_read_le.at:59;Read 2D int16 array;;
28;mat5_uncompressed_read_le.at:64;Read 2D uint16 array;;
29;mat5_uncompressed_read_le.at:69;Read 2D int8 array;;
30;mat5_uncompressed_read_le.at:74;Read 2D uint8 array;;
31;mat5_uncompressed_read_le.at:79;Read 2D complex double array;;
32;mat5_uncompressed_read_le.at:86;Read 2D complex single array;;
33;mat5_uncompressed_read_le.at:91;Read 2D complex int64 array;;
34;mat5_uncompressed_read_le.at:96;Read 2D complex uint64 array;;
35;mat5_uncompressed_read_le.at:101;Read 2D complex int32 array;;
36;mat5_uncompressed_read_le.at:106;Read 2D complex uint32 array;;
37;mat5_uncompressed_read_le.at:111;Read 2D complex int16 array;;
38;mat5_uncompressed_read_le.at:116;Read 2D complex uint16 array;;
39;mat5_uncompressed_read_le.at:121;Read 2D complex int8 array;;
40;mat5_uncompressed_read_le.at:126;Read 2D complex uint8 array;;
41;mat5_uncompressed_read_le.at:131;Read 2D logical array;;
42;mat5_uncompressed_read_le.at:136;Read sparse double array;;
43;mat5_uncompressed_read_le.at:141;Read sparse complex double array;;
44;mat5_uncompressed_read_le.at:146;Read empty array;empty;
45;mat5_uncompressed_read_le.at:152;Read 2D character array;;
46;mat5_uncompressed_read_le.at:157;Read empty struct;empty;
47;mat5_uncompressed_read_le.at:163;Read empty struct with fields;empty;
48;mat5_uncompressed_read_le.at:169;Read struct with empty fields;empty;
49;mat5_uncompressed_read_le.at:175;Read struct with double fields;;
50;mat5_uncompressed_read_le.at:180;Read struct with single fields;;
51;mat5_uncompressed_read_le.at:185;Read struct with int64 fields;;
52;mat5_uncompressed_read_le.at:190;Read struct with uint64 fields;;
53;mat5_uncompressed_read_le.at:195;Read struct with int32 fields;;
54;mat5_uncompressed_read_le.at:200;Read struct with uint32 fields;;
55;mat5_uncompressed_read_le.at:205;Read struct with int16 fields;;
56;mat5_uncompressed_read_le.at:210;Read struct with uint16 fields;;
57;mat5_uncompressed_read_le.at:215;Read struct with int8 fields;;
58;mat5_uncompressed_read_le.at:220;Read struct with uint8 fields;;
59;mat5_uncompressed_read_le.at:225;Read struct with complex double fields;;
60;mat5_uncompressed_read_le.at:230;Read struct with complex single fields;;
61;mat5_uncompressed_read_le.at:235;Read struct with complex int64 fields;;
62;mat5_uncompressed_read_le.at:240;Read struct with complex uint64 fields;;
63;mat5_uncompressed_read_le.at:245;Read struct with complex int32 fields;;
64;mat5_uncompressed_read_le.at:250;Read struct with complex uint32 fields;;
65;mat5_uncompressed_read_le.at:255;Read struct with complex int16 fields;;
66;mat5_uncompressed_read_le.at:260;Read struct with complex uint16 fields;;
67;mat5_uncompressed_read_le.at:265;Read struct with complex int8 fields;;
68;mat5_uncompressed_read_le.at:270;Read struct with complex uint8 fields;;
69;mat5_uncompressed_read_le.at:275;Read struct with logical fields;;
70;mat5_uncompressed_read_le.at:280;Read struct with sparse double fields;;
71;mat5_uncompressed_read_le.at:285;Read struct with sparse complex double fields;;
72;mat5_uncompressed_read_le.at:290;Read struct with character fields;;
73;mat5_uncompressed_read_le.at:295;Read empty cell array;empty;
74;mat5_uncompressed_read_le.at:301;Read cell array with empty arrays;empty;
75;mat5_uncompressed_read_le.at:307;Read cell array with double arrays;;
76;mat5_uncompressed_read_le.at:312;Read cell array with single arrays;;
77;mat5_uncompressed_read_le.at:317;Read cell array with int64 arrays;;
78;mat5_uncompressed_read_le.at:322;Read cell array with uint64 arrays;;
79;mat5_uncompressed_read_le.at:327;Read cell array with int32 arrays;;
80;mat5_uncompressed_read_le.at:332;Read cell array with uint32 arrays;;
81;mat5_uncompressed_read_le.at:337;Read cell array with int16 arrays;;
82;mat5_uncompressed_read_le.at:342;Read cell array with uint16 arrays;;
83;mat5_uncompressed_read_le.at:347;Read cell array with int8 arrays;;
84;mat5_uncompressed_read_le.at:352;Read cell array with uint8 arrays;;
85;mat5_uncompressed_read_le.at:357;Read cell array with logical arrays;;
86;mat5_uncompressed_read_le.at:362;Read cell array with sparse double arrays;;
87;mat5_uncompressed_read_le.at:367;Read cell array with sparse complex double arrays;;
88;mat5_uncompressed_read_le.at:372;Read cell array with character arrays;;
89;mat5_uncompressed_read_le.at:377;Read cell array with empty structs;empty;
90;mat5_uncompressed_read_le.at:383;Read cell array with structs (numeric fields);;
91;mat5_uncompressed_read_le.at:388;Read cell array with structs (sparse fields);;
92;mat5_uncompressed_read_le.at:393;Read cell array with structs (character fields);;
93;mat5_uncompressed_readslab_le.at:27;Read slab of double array;mat5_uncompressed_readslab readslab;
94;mat5_uncompressed_readslab_le.at:35;Read slab of single array;mat5_uncompressed_readslab readslab;
95;mat5_uncompressed_readslab_le.at:43;Read slab of int64 array;mat5_uncompressed_readslab readslab;
96;mat5_uncompressed_readslab_le.at:51;Read slab of uint64 array;mat5_uncompressed_readslab readslab;
97;mat5_uncompressed_readslab_le.at:59;Read slab of int32 array;mat5_uncompressed_readslab readslab;
98;mat5_uncompressed_readslab_le.at:67;Read slab of uint32 array;mat5_uncompressed_readslab readslab;
99;mat5_uncompressed_readslab_le.at:75;Read slab of int16 array;mat5_uncompressed_readslab readslab;
100;mat5_uncompressed_readslab_le.at:83;Read slab of uint16 array;mat5_uncompressed_readslab readslab;
101;mat5_uncompressed_readslab_le.at:91;Read slab of int8 array;mat5_uncompressed_readslab readslab;
102;mat5_uncompressed_readslab_le.at:99;Read slab of uint8 array;mat5_uncompressed_readslab readslab;
103;mat5_uncompressed_readslab_le.at:107;Read slab of complex double array;mat5_uncompressed_readslab readslab;
104;mat5_uncompressed_readslab_le.at:115;Read slab of complex single array;mat5_uncompressed_readslab readslab;
105;mat5_uncompressed_readslab_le.at:123;Read slab of complex int64 array;mat5_uncompressed_readslab readslab;
106;mat5_uncompressed_readslab_le.at:131;Read slab of complex uint64 array;mat5_uncompressed_readslab readslab;
107;mat5_uncompressed_readslab_le.at:139;Read slab of complex int32 array;mat5_uncompressed_readslab readslab;
108;mat5_uncompressed_readslab_le.at:147;Read slab of complex uint32 array;mat5_uncompressed_readslab readslab;
109;mat5_uncompressed_readslab_le.at:155;Read slab of complex int16 array;mat5_uncompressed_readslab readslab;
110;mat5_uncompressed_readslab_le.at:163;Read slab of complex uint16 array;mat5_uncompressed_readslab readslab;
111;mat5_uncompressed_readslab_le.at:171;Read slab of complex int8 array;mat5_uncompressed_readslab readslab;
112;mat5_uncompressed_readslab_le.at:179;Read slab of complex uint8 array;mat5_uncompressed_readslab readslab;
113;mat5_uncompressed_readslab_le.at:187;Read linear slab of double array;mat5_uncompressed_readslab readslab read_data_linear;
114;mat5_uncompressed_readslab_le.at:193;Read linear slab of single array;mat5_uncompressed_readslab readslab read_data_linear;
115;mat5_uncompressed_readslab_le.at:199;Read linear slab of int64 array;mat5_uncompressed_readslab readslab read_data_linear;
116;mat5_uncompressed_readslab_le.at:205;Read linear slab of uint64 array;mat5_uncompressed_readslab readslab read_data_linear;
117;mat5_uncompressed_readslab_le.at:211;Read linear slab of int32 array;mat5_uncompressed_readslab readslab read_data_linear;
118;mat5_uncompressed_readslab_le.at:217;Read linear slab of uint32 array;mat5_uncompressed_readslab readslab read_data_linear;
119;mat5_uncompressed_readslab_le.at:223;Read linear slab of int16 array;mat5_uncompressed_readslab readslab read_data_linear;
120;mat5_uncompressed_readslab_le.at:229;Read linear slab of uint16 array;mat5_uncompressed_readslab readslab read_data_linear;
121;mat5_uncompressed_readslab_le.at:235;Read linear slab of int8 array;mat5_uncompressed_readslab readslab read_data_linear;
122;mat5_uncompressed_readslab_le.at:241;Read linear slab of uint8 array;mat5_uncompressed_readslab readslab read_data_linear;
123;mat5_uncompressed_readslab_le.at:247;Read linear slab of complex double array;mat5_uncompressed_readslab readslab read_data_linear;
124;mat5_uncompressed_readslab_le.at:253;Read linear slab of complex single array;mat5_uncompressed_readslab readslab read_data_linear;
125;mat5_uncompressed_readslab_le.at:259;Read linear slab of complex int64 array;mat5_uncompressed_readslab readslab read_data_linear;
126;mat5_uncompressed_readslab_le.at:265;Read linear slab of complex uint64 array;mat5_uncompressed_readslab readslab read_data_linear;
127;mat5_uncompressed_readslab_le.at:271;Read linear slab of complex int32 array;mat5_uncompressed_readslab readslab read_data_linear;
128;mat5_uncompressed_readslab_le.at:277;Read linear slab of complex uint32 array;mat5_uncompressed_readslab readslab read_data_linear;
129;mat5_uncompressed_readslab_le.at:283;Read linear slab of complex int16 array;mat5_uncompressed_readslab readslab read_data_linear;
130;mat5_uncompressed_readslab_le.at:289;Read linear slab of complex uint16 array;mat5_uncompressed_readslab readslab read_data_linear;
131;mat5_uncompressed_readslab_le.at:295;Read linear slab of complex int8 array;mat5_uncompressed_readslab readslab read_data_linear;
132;mat5_uncompressed_readslab_le.at:301;Read linear slab of complex uint8 array;mat5_uncompressed_readslab readslab read_data_linear;
133;mat5_uncompressed_readslab_le.at:307;Read slab of double array from struct;mat5_uncompressed_readslab readslab structure;
134;mat5_uncompressed_readslab_le.at:317;Read slab of single array from struct;mat5_uncompressed_readslab readslab structure;
135;mat5_uncompressed_readslab_le.at:327;Read slab of int64 array from struct;mat5_uncompressed_readslab readslab structure;
136;mat5_uncompressed_readslab_le.at:337;Read slab of uint64 array from struct;mat5_uncompressed_readslab readslab structure;
137;mat5_uncompressed_readslab_le.at:347;Read slab of int32 array from struct;mat5_uncompressed_readslab readslab structure;
138;mat5_uncompressed_readslab_le.at:357;Read slab of uint32 array from struct;mat5_uncompressed_readslab readslab structure;
139;mat5_uncompressed_readslab_le.at:367;Read slab of int16 array from struct;mat5_uncompressed_readslab readslab structure;
140;mat5_uncompressed_readslab_le.at:377;Read slab of uint16 array from struct;mat5_uncompressed_readslab readslab structure;
141;mat5_uncompressed_readslab_le.at:387;Read slab of int8 array from struct;mat5_uncompressed_readslab readslab structure;
142;mat5_uncompressed_readslab_le.at:397;Read slab of uint8 array from struct;mat5_uncompressed_readslab readslab structure;
143;mat5_uncompressed_readslab_le.at:407;Read slab of complex double array from struct;mat5_uncompressed_readslab readslab structure;
144;mat5_uncompressed_readslab_le.at:417;Read slab of complex single array from struct;mat5_uncompressed_readslab readslab structure;
145;mat5_uncompressed_readslab_le.at:427;Read slab of complex int64 array from struct;mat5_uncompressed_readslab readslab structure;
146;mat5_uncompressed_readslab_le.at:437;Read slab of complex uint64 array from struct;mat5_uncompressed_readslab readslab structure;
147;mat5_uncompressed_readslab_le.at:447;Read slab of complex int32 array from struct;mat5_uncompressed_readslab readslab structure;
148;mat5_uncompressed_readslab_le.at:457;Read slab of complex uint32 array from struct;mat5_uncompressed_readslab readslab structure;
149;mat5_uncompressed_readslab_le.at:467;Read slab of complex int16 array from struct;mat5_uncompressed_readslab readslab structure;
150;mat5_uncompressed_readslab_le.at:477;Read slab of complex uint16 array from struct;mat5_uncompressed_readslab readslab structure;
151;mat5_uncompressed_readslab_le.at:487;Read slab of complex int8 array from struct;mat5_uncompressed_readslab readslab structure;
152;mat5_uncompressed_readslab_le.at:497;Read slab of complex uint8 array from struct;mat5_uncompressed_readslab readslab structure;
153;mat5_compressed_read_le.at:27;Read 2D double array;;
154;mat5_compressed_read_le.at:35;Read 2D single array;;
155;mat5_compressed_read_le.at:41;Read 2D int64 array;;
156;mat5_compressed_read_le.at:47;Read 2D uint64 array;;
157;mat5_compressed_read_le.at:53;Read 2D int32 array;;
158;mat5_compressed_read_le.at:59;Read 2D uint32 array;;
159;mat5_compressed_read_le.at:65;Read 2D int16 array;;
160;mat5_compressed_read_le.at:71;Read 2D uint16 array;;
161;mat5_compressed_read_le.at:77;Read 2D int8 array;;
162;mat5_compressed_read_le.at:83;Read 2D uint8 array;;
163;mat5_compressed_read_le.at:89;Read 2D complex double array;;
164;mat5_compressed_read_le.at:97;Read 2D complex single array;;
165;mat5_compressed_read_le.at:103;Read 2D complex int64 array;;
166;mat5_compressed_read_le.at:109;Read 2D complex uint64 array;;
167;mat5_compressed_read_le.at:115;Read 2D complex int32 array;;
168;mat5_compressed_read_le.at:121;Read 2D complex uint32 array;;
169;mat5_compressed_read_le.at:127;Read 2D complex int16 array;;
170;mat5_compressed_read_le.at:133;Read 2D complex uint16 array;;
171;mat5_compressed_read_le.at:139;Read 2D complex int8 array;;
172;mat5_compressed_read_le.at:145;Read 2D complex uint8 array;;
173;mat5_compressed_read_le.at:151;Read 2D logical array;;
174;mat5_compressed_read_le.at:157;Read sparse double array;;
175;mat5_compressed_read_le.at:163;Read sparse complex double array;;
176;mat5_compressed_read_le.at:169;Read empty array;empty;
177;mat5_compressed_read_le.at:176;Read 2D character array;;
178;mat5_compressed_read_le.at:182;Read empty struct;empty;
179;mat5_compressed_read_le.at:189;Read empty struct with fields;empty;
180;mat5_compressed_read_le.at:196;Read struct with empty fields;empty;
181;mat5_compressed_read_le.at:203;Read struct with double fields;;
182;mat5_compressed_read_le.at:209;Read struct with single fields;;
183;mat5_compressed_read_le.at:215;Read struct with int64 fields;;
184;mat5_compressed_read_le.at:221;Read struct with uint64 fields;;
185;mat5_compressed_read_le.at:227;Read struct with int32 fields;;
186;mat5_compressed_read_le.at:233;Read struct with uint32 fields;;
187;mat5_compressed_read_le.at:239;Read struct with int16 fields;;
188;mat5_compressed_read_le.at:245;Read struct with uint16 fields;;
189;mat5_compressed_read_le.at:251;Read struct with int8 fields;;
190;mat5_compressed_read_le.at:257;Read struct with uint8 fields;;
191;mat5_compressed_read_le.at:263;Read struct with complex double fields;;
192;mat5_compressed_read_le.at:269;Read struct with complex single fields;;
193;mat5_compressed_read_le.at:275;Read struct with complex int64 fields;;
194;mat5_compressed_read_le.at:281;Read struct with complex uint64 fields;;
195;mat5_compressed_read_le.at:287;Read struct with complex int32 fields;;
196;mat5_compressed_read_le.at:293;Read struct with complex uint32 fields;;
197;mat5_compressed_read_le.at:299;Read struct with complex int16 fields;;
198;mat5_compressed_read_le.at:305;Read struct with complex uint16 fields;;
199;mat5_compressed_read_le.at:311;Read struct with complex int8 fields;;
200;mat5_compressed_read_le.at:317;Read struct with complex uint8 fields;;
201;mat5_compressed_read_le.at:323;Read struct with logical fields;;
202;mat5_compressed_read_le.at:329;Read struct with sparse double fields;;
203;mat5_compressed_read_le.at:335;Read struct with sparse complex double fields;;
204;mat5_compressed_read_le.at:341;Read struct with character fields;;
205;mat5_compressed_read_le.at:347;Read empty cell array;empty;
206;mat5_compressed_read_le.at:354;Read cell array with empty arrays;empty;
207;mat5_compressed_read_le.at:361;Read cell array with double arrays;;
208;mat5_compressed_read_le.at:367;Read cell array with single arrays;;
209;mat5_compressed_read_le.at:373;Read cell array with int64 arrays;;
210;mat5_compressed_read_le.at:379;Read cell array with uint64 arrays;;
211;mat5_compressed_read_le.at:385;Read cell array with int32 arrays;;
212;mat5_compressed_read_le.at:391;Read cell array with uint32 arrays;;
213;mat5_compressed_read_le.at:397;Read cell array with int16 arrays;;
214;mat5_compressed_read_le.at:403;Read cell array with uint16 arrays;;
215;mat5_compressed_read_le.at:409;Read cell array with int8 arrays;;
216;mat5_compressed_read_le.at:415;Read cell array with uint8 arrays;;
217;mat5_compressed_read_le.at:421;Read cell array with logical arrays;;
218;mat5_compressed_read_le.at:427;Read cell array with sparse double arrays;;
219;mat5_compressed_read_le.at:433;Read cell array with sparse complex double arrays;;
220;mat5_compressed_read_le.at:439;Read cell array with character arrays;;
221;mat5_compressed_read_le.at:445;Read cell array with empty structs;empty;
222;mat5_compressed_read_le.at:452;Read cell array with structs (numeric fields);;
223;mat5_compressed_read_le.at:458;Read cell array with structs (sparse fields);;
224;mat5_compressed_read_le.at:464;Read cell array with structs (character fields);;
225;mat5_compressed_read_le.at:470;Read large struct;large_struct;
226;mat5_compressed_readslab_le.at:27;Read slab of double array;mat5_compressed_readslab readslab;
227;mat5_compressed_readslab_le.at:39;Read slab of single array;mat5_compressed_readslab readslab;
228;mat5_compressed_readslab_le.at:51;Read slab of int64 array;mat5_compressed_readslab readslab;
229;mat5_compressed_readslab_le.at:63;Read slab of uint64 array;mat5_compressed_readslab readslab;
230;mat5_compressed_readslab_le.at:75;Read slab of int32 array;mat5_compressed_readslab readslab;
231;mat5_compressed_readslab_le.at:87;Read slab of uint32 array;mat5_compressed_readslab readslab;
232;mat5_compressed_readslab_le.at:99;Read slab of int16 array;mat5_compressed_readslab readslab;
233;mat5_compressed_readslab_le.at:111;Read slab of uint16 array;mat5_compressed_readslab readslab;
234;mat5_compressed_readslab_le.at:123;Read slab of int8 array;mat5_compressed_readslab readslab;
235;mat5_compressed_readslab_le.at:135;Read slab of uint8 array;mat5_compressed_readslab readslab;
236;mat5_compressed_readslab_le.at:147;Read slab of complex double array;mat5_compressed_readslab readslab;
237;mat5_compressed_readslab_le.at:159;Read slab of complex single array;mat5_compressed_readslab readslab;
238;mat5_compressed_readslab_le.at:171;Read slab of complex int64 array;mat5_compressed_readslab readslab;
239;mat5_compressed_readslab_le.at:183;Read slab of complex uint64 array;mat5_compressed_readslab readslab;
240;mat5_compressed_readslab_le.at:195;Read slab of complex int32 array;mat5_compressed_readslab readslab;
241;mat5_compressed_readslab_le.at:207;Read slab of complex uint32 array;mat5_compressed_readslab readslab;
242;mat5_compressed_readslab_le.at:219;Read slab of complex int16 array;mat5_compressed_readslab readslab;
243;mat5_compressed_readslab_le.at:231;Read slab of complex uint16 array;mat5_compressed_readslab readslab;
244;mat5_compressed_readslab_le.at:243;Read slab of complex int8 array;mat5_compressed_readslab readslab;
245;mat5_compressed_readslab_le.at:255;Read slab of complex uint8 array;mat5_compressed_readslab readslab;
246;mat5_compressed_readslab_le.at:267;Read linear slab of double array;mat5_compressed_readslab readslab read_data_linear;
247;mat5_compressed_readslab_le.at:274;Read linear slab of single array;mat5_compressed_readslab readslab read_data_linear;
248;mat5_compressed_readslab_le.at:281;Read linear slab of int64 array;mat5_compressed_readslab readslab read_data_linear;
249;mat5_compressed_readslab_le.at:288;Read linear slab of uint64 array;mat5_compressed_readslab readslab read_data_linear;
250;mat5_compressed_readslab_le.at:295;Read linear slab of int32 array;mat5_compressed_readslab readslab read_data_linear;
251;mat5_compressed_readslab_le.at:302;Read linear slab of uint32 array;mat5_compressed_readslab readslab read_data_linear;
252;mat5_compressed_readslab_le.at:309;Read linear slab of int16 array;mat5_compressed_readslab readslab read_data_linear;
253;mat5_compressed_readslab_le.at:316;Read linear slab of uint16 array;mat5_compressed_readslab readslab read_data_linear;
254;mat5_compressed_readslab_le.at:323;Read linear slab of int8 array;mat5_compressed_readslab readslab read_data_linear;
255;mat5_compressed_readslab_le.at:330;Read linear slab of uint8 array;mat5_compressed_readslab readslab read_data_linear;
256;mat5_compressed_readslab_le.at:337;Read linear slab of complex double array;mat5_compressed_readslab readslab read_data_linear;
257;mat5_compressed_readslab_le.at:344;Read linear slab of complex single array;mat5_compressed_readslab readslab read_data_linear;
258;mat5_compressed_readslab_le.at:351;Read linear slab of complex int64 array;mat5_compressed_readslab readslab read_data_linear;
259;mat5_compressed_readslab_le.at:358;Read linear slab of complex uint64 array;mat5_compressed_readslab readslab read_data_linear;
260;mat5_compressed_readslab_le.at:365;Read linear slab of complex int32 array;mat5_compressed_readslab readslab read_data_linear;
261;mat5_compressed_readslab_le.at:372;Read linear slab of complex uint32 array;mat5_compressed_readslab readslab read_data_linear;
262;mat5_compressed_readslab_le.at:379;Read linear slab of complex int16 array;mat5_compressed_readslab readslab read_data_linear;
263;mat5_compressed_readslab_le.at:386;Read linear slab of complex uint16 array;mat5_compressed_readslab readslab read_data_linear;
264;mat5_compressed_readslab_le.at:393;Read linear slab of complex int8 array;mat5_compressed_readslab readslab read_data_linear;
265;mat5_compressed_readslab_le.at:400;Read linear slab of complex uint8 array;mat5_compressed_readslab readslab read_data_linear;
266;mat5_compressed_readslab_le.at:407;Read slab of double array from struct;mat5_compressed_readslab readslab structure;
267;mat5_compressed_readslab_le.at:418;Read slab of single array from struct;mat5_compressed_readslab readslab structure;
268;mat5_compressed_readslab_le.at:429;Read slab of int64 array from struct;mat5_compressed_readslab readslab structure;
269;mat5_compressed_readslab_le.at:440;Read slab of uint64 array from struct;mat5_compressed_readslab readslab structure;
270;mat5_compressed_readslab_le.at:451;Read slab of int32 array from struct;mat5_compressed_readslab readslab structure;
271;mat5_compressed_readslab_le.at:462;Read slab of uint32 array from struct;mat5_compressed_readslab readslab structure;
272;mat5_compressed_readslab_le.at:473;Read slab of int16 array from struct;mat5_compressed_readslab readslab structure;
273;mat5_compressed_readslab_le.at:484;Read slab of uint16 array from struct;mat5_compressed_readslab readslab structure;
274;mat5_compressed_readslab_le.at:495;Read slab of int8 array from struct;mat5_compressed_readslab readslab structure;
275;mat5_compressed_readslab_le.at:506;Read slab of uint8 array from struct;mat5_compressed_readslab readslab structure;
276;mat5_compressed_readslab_le.at:517;Read slab of complex double array from struct;mat5_compressed_readslab readslab structure;
277;mat5_compressed_readslab_le.at:528;Read slab of complex single array from struct;mat5_compressed_readslab readslab structure;
278;mat5_compressed_readslab_le.at:539;Read slab of complex int64 array from struct;mat5_compressed_readslab readslab structure;
279;mat5_compressed_readslab_le.at:550;Read slab of complex uint64 array from struct;mat5_compressed_readslab readslab structure;
280;mat5_compressed_readslab_le.at:561;Read slab of complex int32 array from struct;mat5_compressed_readslab readslab structure;
281;mat5_compressed_readslab_le.at:572;Read slab of complex uint32 array from struct;mat5_compressed_readslab readslab structure;
282;mat5_compressed_readslab_le.at:583;Read slab of complex int16 array from struct;mat5_compressed_readslab readslab structure;
283;mat5_compressed_readslab_le.at:594;Read slab of complex uint16 array from struct;mat5_compressed_readslab readslab structure;
284;mat5_compressed_readslab_le.at:605;Read slab of complex int8 array from struct;mat5_compressed_readslab readslab structure;
285;mat5_compressed_readslab_le.at:616;Read slab of complex uint8 array from struct;mat5_compressed_readslab readslab structure;
286;mat5_uncompressed_read_be.at:27;Read 2D double array;;
287;mat5_uncompressed_read_be.at:34;Read 2D single array;;
288;mat5_uncompressed_read_be.at:39;Read 2D int64 array;;
289;mat5_uncompressed_read_be.at:44;Read 2D uint64 array;;
290;mat5_uncompressed_read_be.at:49;Read 2D int32 array;;
291;mat5_uncompressed_read_be.at:54;Read 2D uint32 array;;
292;mat5_uncompressed_read_be.at:59;Read 2D int16 array;;
293;mat5_uncompressed_read_be.at:64;Read 2D uint16 array;;
294;mat5_uncompressed_read_be.at:69;Read 2D int8 array;;
295;mat5_uncompressed_read_be.at:74;Read 2D uint8 array;;
296;mat5_uncompressed_read_be.at:79;Read 2D complex double array;;
297;mat5_uncompressed_read_be.at:86;Read 2D complex single array;;
298;mat5_uncompressed_read_be.at:91;Read 2D complex int64 array;;
299;mat5_uncompressed_read_be.at:96;Read 2D complex uint64 array;;
300;mat5_uncompressed_read_be.at:101;Read 2D complex int32 array;;
301;mat5_uncompressed_read_be.at:106;Read 2D complex uint32 array;;
302;mat5_uncompressed_read_be.at:111;Read 2D complex int16 array;;
303;mat5_uncompressed_read_be.at:116;Read 2D complex uint16 array;;
304;mat5_uncompressed_read_be.at:121;Read 2D complex int8 array;;
305;mat5_uncompressed_read_be.at:126;Read 2D complex uint8 array;;
306;mat5_uncompressed_read_be.at:131;Read 2D logical array;;
307;mat5_uncompressed_read_be.at:136;Read sparse double array;;
308;mat5_uncompressed_read_be.at:141;Read sparse complex double array;;
309;mat5_uncompressed_read_be.at:146;Read empty array;empty;
310;mat5_uncompressed_read_be.at:152;Read 2D character array;;
311;mat5_uncompressed_read_be.at:157;Read empty struct;empty;
312;mat5_uncompressed_read_be.at:163;Read empty struct with fields;empty;
313;mat5_uncompressed_read_be.at:169;Read struct with empty fields;empty;
314;mat5_uncompressed_read_be.at:175;Read struct with double fields;;
315;mat5_uncompressed_read_be.at:180;Read struct with single fields;;
316;mat5_uncompressed_read_be.at:185;Read struct with int64 fields;;
317;mat5_uncompressed_read_be.at:190;Read struct with uint64 fields;;
318;mat5_uncompressed_read_be.at:195;Read struct with int32 fields;;
319;mat5_uncompressed_read_be.at:200;Read struct with uint32 fields;;
320;mat5_uncompressed_read_be.at:205;Read struct with int16 fields;;
321;mat5_uncompressed_read_be.at:210;Read struct with uint16 fields;;
322;mat5_uncompressed_read_be.at:215;Read struct with int8 fields;;
323;mat5_uncompressed_read_be.at:220;Read struct with uint8 fields;;
324;mat5_uncompressed_read_be.at:225;Read struct with complex double fields;;
325;mat5_uncompressed_read_be.at:230;Read struct with complex single fields;;
326;mat5_uncompressed_read_be.at:235;Read struct with complex int64 fields;;
327;mat5_uncompressed_read_be.at:240;Read struct with complex uint64 fields;;
328;mat5_uncompressed_read_be.at:245;Read struct with complex int32 fields;;
329;mat5_uncompressed_read_be.at:250;Read struct with complex uint32 fields;;
330;mat5_uncompressed_read_be.at:255;Read struct with complex int16 fields;;
331;mat5_uncompressed_read_be.at:260;Read struct with complex uint16 fields;;
332;mat5_uncompressed_read_be.at:265;Read struct with complex int8 fields;;
333;mat5_uncompressed_read_be.at:270;Read struct with complex uint8 fields;;
334;mat5_uncompressed_read_be.at:275;Read struct with logical fields;;
335;mat5_uncompressed_read_be.at:280;Read struct with sparse double fields;;
336;mat5_uncompressed_read_be.at:285;Read struct with sparse complex double fields;;
337;mat5_uncompressed_read_be.at:290;Read struct with character fields;;
338;mat5_uncompressed_read_be.at:295;Read empty cell array;empty;
339;mat5_uncompressed_read_be.at:301;Read cell array with empty arrays;empty;
340;mat5_uncompressed_read_be.at:307;Read cell array with double arrays;;
341;mat5_uncompressed_read_be.at:312;Read cell array with single arrays;;
342;mat5_uncompressed_read_be.at:317;Read cell array with int64 arrays;;
343;mat5_uncompressed_read_be.at:322;Read cell array with uint64 arrays;;
344;mat5_uncompressed_read_be.at:327;Read cell array with int32 arrays;;
345;mat5_uncompressed_read_be.at:332;Read cell array with uint32 arrays;;
346;mat5_uncompressed_read_be.at:337;Read cell array with int16 arrays;;
347;mat5_uncompressed_read_be.at:342;Read cell array with uint16 arrays;;
348;mat5_uncompressed_read_be.at:347;Read cell array with int8 arrays;;
349;mat5_uncompressed_read_be.at:352;Read cell array with uint8 arrays;;
350;mat5_uncompressed_read_be.at:357;Read cell array with logical arrays;;
351;mat5_uncompressed_read_be.at:362;Read cell array with sparse double arrays;;
352;mat5_uncompressed_read_be.at:367;Read cell array with sparse complex double arrays;;
353;mat5_uncompressed_read_be.at:372;Read cell array with character arrays;;
354;mat5_uncompressed_read_be.at:377;Read cell array with empty structs;empty;
355;mat5_uncompressed_read_be.at:383;Read cell array with structs (numeric fields);;
356;mat5_uncompressed_read_be.at:388;Read cell array with structs (sparse fields);;
357;mat5_uncompressed_read_be.at:393;Read cell array with structs (character fields);;
358;mat5_uncompressed_readslab_be.at:27;Read slab of double array;mat5_uncompressed_readslab readslab;
359;mat5_uncompressed_readslab_be.at:35;Read slab of single array;mat5_uncompressed_readslab readslab;
360;mat5_uncompressed_readslab_be.at:43;Read slab of int64 array;mat5_uncompressed_readslab readslab;
361;mat5_uncompressed_readslab_be.at:51;Read slab of uint64 array;mat5_uncompressed_readslab readslab;
362;mat5_uncompressed_readslab_be.at:59;Read slab of int32 array;mat5_uncompressed_readslab readslab;
363;mat5_uncompressed_readslab_be.at:67;Read slab of uint32 array;mat5_uncompressed_readslab readslab;
364;mat5_uncompressed_readslab_be.at:75;Read slab of int16 array;mat5_uncompressed_readslab readslab;
365;mat5_uncompressed_readslab_be.at:83;Read slab of uint16 array;mat5_uncompressed_readslab readslab;
366;mat5_uncompressed_readslab_be.at:91;Read slab of int8 array;mat5_uncompressed_readslab readslab;
367;mat5_uncompressed_readslab_be.at:99;Read slab of uint8 array;mat5_uncompressed_readslab readslab;
368;mat5_uncompressed_readslab_be.at:107;Read slab of complex double array;mat5_uncompressed_readslab readslab;
369;mat5_uncompressed_readslab_be.at:115;Read slab of complex single array;mat5_uncompressed_readslab readslab;
370;mat5_uncompressed_readslab_be.at:123;Read slab of complex int64 array;mat5_uncompressed_readslab readslab;
371;mat5_uncompressed_readslab_be.at:131;Read slab of complex uint64 array;mat5_uncompressed_readslab readslab;
372;mat5_uncompressed_readslab_be.at:139;Read slab of complex int32 array;mat5_uncompressed_readslab readslab;
373;mat5_uncompressed_readslab_be.at:147;Read slab of complex uint32 array;mat5_uncompressed_readslab readslab;
374;mat5_uncompressed_readslab_be.at:155;Read slab of complex int16 array;mat5_uncompressed_readslab readslab;
375;mat5_uncompressed_readslab_be.at:163;Read slab of complex uint16 array;mat5_uncompressed_readslab readslab;
376;mat5_uncompressed_readslab_be.at:171;Read slab of complex int8 array;mat5_uncompressed_readslab readslab;
377;mat5_uncompressed_readslab_be.at:179;Read slab of complex uint8 array;mat5_uncompressed_readslab readslab;
378;mat5_uncompressed_readslab_be.at:187;Read linear slab of double array;mat5_uncompressed_readslab readslab read_data_linear;
379;mat5_uncompressed_readslab_be.at:193;Read linear slab of single array;mat5_uncompressed_readslab readslab read_data_linear;
380;mat5_uncompressed_readslab_be.at:199;Read linear slab of int64 array;mat5_uncompressed_readslab readslab read_data_linear;
381;mat5_uncompressed_readslab_be.at:205;Read linear slab of uint64 array;mat5_uncompressed_readslab readslab read_data_linear;
382;mat5_uncompressed_readslab_be.at:211;Read linear slab of int32 array;mat5_uncompressed_readslab readslab read_data_linear;
383;mat5_uncompressed_readslab_be.at:217;Read linear slab of uint32 array;mat5_uncompressed_readslab readslab read_data_linear;
384;mat5_uncompressed_readslab_be.at:223;Read linear slab of int16 array;mat5_uncompressed_readslab readslab read_data_linear;
385;mat5_uncompressed_readslab_be.at:229;Read linear slab of uint16 array;mat5_uncompressed_readslab readslab read_data_linear;
386;mat5_uncompressed_readslab_be.at:235;Read linear slab of int8 array;mat5_uncompressed_readslab readslab read_data_linear;
387;mat5_uncompressed_readslab_be.at:241;Read linear slab of uint8 array;mat5_uncompressed_readslab readslab read_data_linear;
388;mat5_uncompressed_readslab_be.at:247;Read linear slab of complex double array;mat5_uncompressed_readslab readslab read_data_linear;
389;mat5_uncompressed_readslab_be.at:253;Read linear slab of complex single array;mat5_uncompressed_readslab readslab read_data_linear;
390;mat5_uncompressed_readslab_be.at:259;Read linear slab of complex int64 array;mat5_uncompressed_readslab readslab read_data_linear;
391;mat5_uncompressed_readslab_be.at:265;Read linear slab of complex uint64 array;mat5_uncompressed_readslab readslab read_data_linear;
392;mat5_uncompressed_readslab_be.at:271;Read linear slab of complex int32 array;mat5_uncompressed_readslab readslab read_data_linear;
393;mat5_uncompressed_readslab_be.at:277;Read linear slab of complex uint32 array;mat5_uncompressed_readslab readslab read_data_linear;
394;mat5_uncompressed_readslab_be.at:283;Read linear slab of complex int16 array;mat5_uncompressed_readslab readslab read_data_linear;
395;mat5_uncompressed_readslab_be.at:289;Read linear slab of complex uint16 array;mat5_uncompressed_readslab readslab read_data_linear;
396;mat5_uncompressed_readslab_be.at:295;Read linear slab of complex int8 array;mat5_uncompressed_readslab readslab read_data_linear;
397;mat5_uncompressed_readslab_be.at:301;Read linear slab of complex uint8 array;mat5_uncompressed_readslab readslab read_data_linear;
398;mat5_uncompressed_readslab_be.at:307;Read slab of double array from struct;mat5_uncompressed_readslab readslab structure;
399;mat5_uncompressed_readslab_be.at:317;Read slab of single array from struct;mat5_uncompressed_readslab readslab structure;
400;mat5_uncompressed_readslab_be.at:327;Read slab of int64 array from struct;mat5_uncompressed_readslab readslab structure;
401;mat5_uncompressed_readslab_be.at:337;Read slab of uint64 array from struct;mat5_uncompressed_readslab readslab structure;
402;mat5_uncompressed_readslab_be.at:347;Read slab of int32 array from struct;mat5_uncompressed_readslab readslab structure;
403;mat5_uncompressed_readslab_be.at:357;Read slab of uint32 array from struct;mat5_uncompressed_readslab readslab structure;
404;mat5_uncompressed_readslab_be.at:367;Read slab of int16 array from struct;mat5_uncompressed_readslab readslab structure;
405;mat5_uncompressed_readslab_be.at:377;Read slab of uint16 array from struct;mat5_uncompressed_readslab readslab structure;
406;mat5_uncompressed_readslab_be.at:387;Read slab of int8 array from struct;mat5_uncompressed_readslab readslab structure;
407;mat5_uncompressed_readslab_be.at:397;Read slab of uint8 array from struct;mat5_uncompressed_readslab readslab structure;
408;mat5_uncompressed_readslab_be.at:407;Read slab of complex double array from struct;mat5_uncompressed_readslab readslab structure;
409;mat5_uncompressed_readslab_be.at:417;Read slab of complex single array from struct;mat5_uncompressed_readslab readslab structure;
410;mat5_uncompressed_readslab_be.at:427;Read slab of complex int64 array from struct;mat5_uncompressed_readslab readslab structure;
411;mat5_uncompressed_readslab_be.at:437;Read slab of complex uint64 array from struct;mat5_uncompressed_readslab readslab structure;
412;mat5_uncompressed_readslab_be.at:447;Read slab of complex int32 array from struct;mat5_uncompressed_readslab readslab structure;
413;mat5_uncompressed_readslab_be.at:457;Read slab of complex uint32 array from struct;mat5_uncompressed_readslab readslab structure;
414;mat5_uncompressed_readslab_be.at:467;Read slab of complex int16 array from struct;mat5_uncompressed_readslab readslab structure;
415;mat5_uncompressed_readslab_be.at:477;Read slab of complex uint16 array from struct;mat5_uncompressed_readslab readslab structure;
416;mat5_uncompressed_readslab_be.at:487;Read slab of complex int8 array from struct;mat5_uncompressed_readslab readslab structure;
417;mat5_uncompressed_readslab_be.at:497;Read slab of complex uint8 array from struct;mat5_uncompressed_readslab readslab structure;
418;mat5_compressed_read_be.at:27;Read 2D double array;;
419;mat5_compressed_read_be.at:35;Read 2D single array;;
420;mat5_compressed_read_be.at:41;Read 2D int64 array;;
421;mat5_compressed_read_be.at:47;Read 2D uint64 array;;
422;mat5_compressed_read_be.at:53;Read 2D int32 array;;
423;mat5_compressed_read_be.at:59;Read 2D uint32 array;;
424;mat5_compressed_read_be.at:65;Read 2D int16 array;;
425;mat5_compressed_read_be.at:71;Read 2D uint16 array;;
426;mat5_compressed_read_be.at:77;Read 2D int8 array;;
427;mat5_compressed_read_be.at:83;Read 2D uint8 array;;
428;mat5_compressed_read_be.at:89;Read 2D complex double array;;
429;mat5_compressed_read_be.at:97;Read 2D complex single array;;
430;mat5_compressed_read_be.at:103;Read 2D complex int64 array;;
431;mat5_compressed_read_be.at:109;Read 2D complex uint64 array;;
432;mat5_compressed_read_be.at:115;Read 2D complex int32 array;;
433;mat5_compressed_read_be.at:121;Read 2D complex uint32 array;;
434;mat5_compressed_read_be.at:127;Read 2D complex int16 array;;
435;mat5_compressed_read_be.at:133;Read 2D complex uint16 array;;
436;mat5_compressed_read_be.at:139;Read 2D complex int8 array;;
437;mat5_compressed_read_be.at:145;Read 2D complex uint8 array;;
438;mat5_compressed_read_be.at:151;Read 2D logical array;;
439;mat5_compressed_read_be.at:157;Read sparse double array;;
440;mat5_compressed_read_be.at:163;Read sparse complex double array;;
441;mat5_compressed_read_be.at:169;Read empty array;empty;
442;mat5_compressed_read_be.at:176;Read 2D character array;;
443;mat5_compressed_read_be.at:182;Read empty struct;empty;
444;mat5_compressed_read_be.at:189;Read empty struct with fields;empty;
445;mat5_compressed_read_be.at:196;Read struct with empty fields;empty;
446;mat5_compressed_read_be.at:203;Read struct with double fields;;
447;mat5_compressed_read_be.at:209;Read struct with single fields;;
448;mat5_compressed_read_be.at:215;Read struct with int64 fields;;
449;mat5_compressed_read_be.at:221;Read struct with uint64 fields;;
450;mat5_compressed_read_be.at:227;Read struct with int32 fields;;
451;mat5_compressed_read_be.at:233;Read struct with uint32 fields;;
452;mat5_compressed_read_be.at:239;Read struct with int16 fields;;
453;mat5_compressed_read_be.at:245;Read struct with uint16 fields;;
454;mat5_compressed_read_be.at:251;Read struct with int8 fields;;
455;mat5_compressed_read_be.at:257;Read struct with uint8 fields;;
456;mat5_compressed_read_be.at:263;Read struct with complex double fields;;
457;mat5_compressed_read_be.at:269;Read struct with complex single fields;;
458;mat5_compressed_read_be.at:275;Read struct with complex int64 fields;;
459;mat5_compressed_read_be.at:281;Read struct with complex uint64 fields;;
460;mat5_compressed_read_be.at:287;Read struct with complex int32 fields;;
461;mat5_compressed_read_be.at:293;Read struct with complex uint32 fields;;
462;mat5_compressed_read_be.at:299;Read struct with complex int16 fields;;
463;mat5_compressed_read_be.at:305;Read struct with complex uint16 fields;;
464;mat5_compressed_read_be.at:311;Read struct with complex int8 fields;;
465;mat5_compressed_read_be.at:317;Read struct with complex uint8 fields;;
466;mat5_compressed_read_be.at:323;Read struct with logical fields;;
467;mat5_compressed_read_be.at:329;Read struct with sparse double fields;;
468;mat5_compressed_read_be.at:335;Read struct with sparse complex double fields;;
469;mat5_compressed_read_be.at:341;Read struct with character fields;;
470;mat5_compressed_read_be.at:347;Read empty cell array;empty;
471;mat5_compressed_read_be.at:354;Read cell array with empty arrays;empty;
472;mat5_compressed_read_be.at:361;Read cell array with double arrays;;
473;mat5_compressed_read_be.at:367;Read cell array with single arrays;;
474;mat5_compressed_read_be.at:373;Read cell array with int64 arrays;;
475;mat5_compressed_read_be.at:379;Read cell array with uint64 arrays;;
476;mat5_compressed_read_be.at:385;Read cell array with int32 arrays;;
477;mat5_compressed_read_be.at:391;Read cell array with uint32 arrays;;
478;mat5_compressed_read_be.at:397;Read cell array with int16 arrays;;
479;mat5_compressed_read_be.at:403;Read cell array with uint16 arrays;;
480;mat5_compressed_read_be.at:409;Read cell array with int8 arrays;;
481;mat5_compressed_read_be.at:415;Read cell array with uint8 arrays;;
482;mat5_compressed_read_be.at:421;Read cell array with logical arrays;;
483;mat5_compressed_read_be.at:427;Read cell array with sparse double arrays;;
484;mat5_compressed_read_be.at:433;Read cell array with sparse complex double arrays;;
485;mat5_compressed_read_be.at:439;Read cell array with character arrays;;
486;mat5_compressed_read_be.at:445;Read cell array with empty structs;empty;
487;mat5_compressed_read_be.at:452;Read cell array with structs (numeric fields);;
488;mat5_compressed_read_be.at:458;Read cell array with structs (sparse fields);;
489;mat5_compressed_read_be.at:464;Read cell array with structs (character fields);;
490;mat5_compressed_readslab_be.at:27;Read slab of double array;mat5_compressed_readslab readslab;
491;mat5_compressed_readslab_be.at:39;Read slab of single array;mat5_compressed_readslab readslab;
492;mat5_compressed_readslab_be.at:51;Read slab of int64 array;mat5_compressed_readslab readslab;
493;mat5_compressed_readslab_be.at:63;Read slab of uint64 array;mat5_compressed_readslab readslab;
494;mat5_compressed_readslab_be.at:75;Read slab of int32 array;mat5_compressed_readslab readslab;
495;mat5_compressed_readslab_be.at:87;Read slab of uint32 array;mat5_compressed_readslab readslab;
496;mat5_compressed_readslab_be.at:99;Read slab of int16 array;mat5_compressed_readslab readslab;
497;mat5_compressed_readslab_be.at:111;Read slab of uint16 array;mat5_compressed_readslab readslab;
498;mat5_compressed_readslab_be.at:123;Read slab of int8 array;mat5_compressed_readslab readslab;
499;mat5_compressed_readslab_be.at:135;Read slab of uint8 array;mat5_compressed_readslab readslab;
500;mat5_compressed_readslab_be.at:147;Read slab of complex double array;mat5_compressed_readslab readslab;
501;mat5_compressed_readslab_be.at:159;Read slab of complex single array;mat5_compressed_readslab readslab;
502;mat5_compressed_readslab_be.at:171;Read slab of complex int64 array;mat5_compressed_readslab readslab;
503;mat5_compressed_readslab_be.at:183;Read slab of complex uint64 array;mat5_compressed_readslab readslab;
504;mat5_compressed_readslab_be.at:195;Read slab of complex int32 array;mat5_compressed_readslab readslab;
505;mat5_compressed_readslab_be.at:207;Read slab of complex uint32 array;mat5_compressed_readslab readslab;
506;mat5_compressed_readslab_be.at:219;Read slab of complex int16 array;mat5_compressed_readslab readslab;
507;mat5_compressed_readslab_be.at:231;Read slab of complex uint16 array;mat5_compressed_readslab readslab;
508;mat5_compressed_readslab_be.at:243;Read slab of complex int8 array;mat5_compressed_readslab readslab;
509;mat5_compressed_readslab_be.at:255;Read slab of complex uint8 array;mat5_compressed_readslab readslab;
510;mat5_compressed_readslab_be.at:267;Read linear slab of double array;mat5_compressed_readslab readslab read_data_linear;
511;mat5_compressed_readslab_be.at:274;Read linear slab of single array;mat5_compressed_readslab readslab read_data_linear;
512;mat5_compressed_readslab_be.at:281;Read linear slab of int64 array;mat5_compressed_readslab readslab read_data_linear;
513;mat5_compressed_readslab_be.at:288;Read linear slab of uint64 array;mat5_compressed_readslab readslab read_data_linear;
514;mat5_compressed_readslab_be.at:295;Read linear slab of int32 array;mat5_compressed_readslab readslab read_data_linear;
515;mat5_compressed_readslab_be.at:302;Read linear slab of uint32 array;mat5_compressed_readslab readslab read_data_linear;
516;mat5_compressed_readslab_be.at:309;Read linear slab of int16 array;mat5_compressed_readslab readslab read_data_linear;
517;mat5_compressed_readslab_be.at:316;Read linear slab of uint16 array;mat5_compressed_readslab readslab read_data_linear;
518;mat5_compressed_readslab_be.at:323;Read linear slab of int8 array;mat5_compressed_readslab readslab read_data_linear;
519;mat5_compressed_readslab_be.at:330;Read linear slab of uint8 array;mat5_compressed_readslab readslab read_data_linear;
520;mat5_compressed_readslab_be.at:337;Read linear slab of complex double array;mat5_compressed_readslab readslab read_data_linear;
521;mat5_compressed_readslab_be.at:344;Read linear slab of complex single array;mat5_compressed_readslab readslab read_data_linear;
522;mat5_compressed_readslab_be.at:351;Read linear slab of complex int64 array;mat5_compressed_readslab readslab read_data_linear;
523;mat5_compressed_readslab_be.at:358;Read linear slab of complex uint64 array;mat5_compressed_readslab readslab read_data_linear;
524;mat5_compressed_readslab_be.at:365;Read linear slab of complex int32 array;mat5_compressed_readslab readslab read_data_linear;
525;mat5_compressed_readslab_be.at:372;Read linear slab of complex uint32 array;mat5_compressed_readslab readslab read_data_linear;
526;mat5_compressed_readslab_be.at:379;Read linear slab of complex int16 array;mat5_compressed_readslab readslab read_data_linear;
527;mat5_compressed_readslab_be.at:386;Read linear slab of complex uint16 array;mat5_compressed_readslab readslab read_data_linear;
528;mat5_compressed_readslab_be.at:393;Read linear slab of complex int8 array;mat5_compressed_readslab readslab read_data_linear;
529;mat5_compressed_readslab_be.at:400;Read linear slab of complex uint8 array;mat5_compressed_readslab readslab read_data_linear;
530;mat5_compressed_readslab_be.at:407;Read slab of double array from struct;mat5_compressed_readslab readslab structure;
531;mat5_compressed_readslab_be.at:418;Read slab of single array from struct;mat5_compressed_readslab readslab structure;
532;mat5_compressed_readslab_be.at:429;Read slab of int64 array from struct;mat5_compressed_readslab readslab structure;
533;mat5_compressed_readslab_be.at:440;Read slab of uint64 array from struct;mat5_compressed_readslab readslab structure;
534;mat5_compressed_readslab_be.at:451;Read slab of int32 array from struct;mat5_compressed_readslab readslab structure;
535;mat5_compressed_readslab_be.at:462;Read slab of uint32 array from struct;mat5_compressed_readslab readslab structure;
536;mat5_compressed_readslab_be.at:473;Read slab of int16 array from struct;mat5_compressed_readslab readslab structure;
537;mat5_compressed_readslab_be.at:484;Read slab of uint16 array from struct;mat5_compressed_readslab readslab structure;
538;mat5_compressed_readslab_be.at:495;Read slab of int8 array from struct;mat5_compressed_readslab readslab structure;
539;mat5_compressed_readslab_be.at:506;Read slab of uint8 array from struct;mat5_compressed_readslab readslab structure;
540;mat5_compressed_readslab_be.at:517;Read slab of complex double array from struct;mat5_compressed_readslab readslab structure;
541;mat5_compressed_readslab_be.at:528;Read slab of complex single array from struct;mat5_compressed_readslab readslab structure;
542;mat5_compressed_readslab_be.at:539;Read slab of complex int64 array from struct;mat5_compressed_readslab readslab structure;
543;mat5_compressed_readslab_be.at:550;Read slab of complex uint64 array from struct;mat5_compressed_readslab readslab structure;
544;mat5_compressed_readslab_be.at:561;Read slab of complex int32 array from struct;mat5_compressed_readslab readslab structure;
545;mat5_compressed_readslab_be.at:572;Read slab of complex uint32 array from struct;mat5_compressed_readslab readslab structure;
546;mat5_compressed_readslab_be.at:583;Read slab of complex int16 array from struct;mat5_compressed_readslab readslab structure;
547;mat5_compressed_readslab_be.at:594;Read slab of complex uint16 array from struct;mat5_compressed_readslab readslab structure;
548;mat5_compressed_readslab_be.at:605;Read slab of complex int8 array from struct;mat5_compressed_readslab readslab structure;
549;mat5_compressed_readslab_be.at:616;Read slab of complex uint8 array from struct;mat5_compressed_readslab readslab structure;
550;mat73_read_le.at:27;Read 2D double array;;
551;mat73_read_le.at:35;Read 2D single array;;
552;mat73_read_le.at:41;Read 2D int64 array;;
553;mat73_read_le.at:47;Read 2D uint64 array;;
554;mat73_read_le.at:53;Read 2D int32 array;;
555;mat73_read_le.at:59;Read 2D uint32 array;;
556;mat73_read_le.at:65;Read 2D int16 array;;
557;mat73_read_le.at:71;Read 2D uint16 array;;
558;mat73_read_le.at:77;Read 2D int8 array;;
559;mat73_read_le.at:83;Read 2D uint8 array;;
560;mat73_read_le.at:89;Read 2D complex double array;;
561;mat73_read_le.at:97;Read 2D complex single array;;
562;mat73_read_le.at:103;Read 2D complex int64 array;;
563;mat73_read_le.at:109;Read 2D complex uint64 array;;
564;mat73_read_le.at:115;Read 2D complex int32 array;;
565;mat73_read_le.at:121;Read 2D complex uint32 array;;
566;mat73_read_le.at:127;Read 2D complex int16 array;;
567;mat73_read_le.at:133;Read 2D complex uint16 array;;
568;mat73_read_le.at:139;Read 2D complex int8 array;;
569;mat73_read_le.at:145;Read 2D complex uint8 array;;
570;mat73_read_le.at:151;Read 2D logical array;;
571;mat73_read_le.at:157;Read 2D logical array;;
572;mat73_read_le.at:164;Read sparse double array;;
573;mat73_read_le.at:170;Read sparse complex double array;;
574;mat73_read_le.at:176;Read empty array;empty;
575;mat73_read_le.at:183;Read 2D character array;;
576;mat73_read_le.at:189;Read empty struct;empty;
577;mat73_read_le.at:196;Read empty struct with fields;empty;
578;mat73_read_le.at:203;Read struct with empty fields;empty;
579;mat73_read_le.at:210;Read struct with double fields;;
580;mat73_read_le.at:216;Read struct with single fields;;
581;mat73_read_le.at:222;Read struct with int64 fields;;
582;mat73_read_le.at:228;Read struct with uint64 fields;;
583;mat73_read_le.at:234;Read struct with int32 fields;;
584;mat73_read_le.at:240;Read struct with uint32 fields;;
585;mat73_read_le.at:246;Read struct with int16 fields;;
586;mat73_read_le.at:252;Read struct with uint16 fields;;
587;mat73_read_le.at:258;Read struct with int8 fields;;
588;mat73_read_le.at:264;Read struct with uint8 fields;;
589;mat73_read_le.at:270;Read struct with complex double fields;;
590;mat73_read_le.at:276;Read struct with complex single fields;;
591;mat73_read_le.at:282;Read struct with complex int64 fields;;
592;mat73_read_le.at:288;Read struct with complex uint64 fields;;
593;mat73_read_le.at:294;Read struct with complex int32 fields;;
594;mat73_read_le.at:300;Read struct with complex uint32 fields;;
595;mat73_read_le.at:306;Read struct with complex int16 fields;;
596;mat73_read_le.at:312;Read struct with complex uint16 fields;;
597;mat73_read_le.at:318;Read struct with complex int8 fields;;
598;mat73_read_le.at:324;Read struct with complex uint8 fields;;
599;mat73_read_le.at:330;Read struct with logical fields;;
600;mat73_read_le.at:336;Read struct with logical fields;;
601;mat73_read_le.at:343;Read struct with sparse double fields;;
602;mat73_read_le.at:349;Read struct with sparse complex double fields;;
603;mat73_read_le.at:355;Read struct with character fields;;
604;mat73_read_le.at:361;Read empty cell array;empty;
605;mat73_read_le.at:368;Read cell array with empty arrays;empty;
606;mat73_read_le.at:375;Read cell array with double arrays;;
607;mat73_read_le.at:381;Read cell array with single arrays;;
608;mat73_read_le.at:387;Read cell array with int64 arrays;;
609;mat73_read_le.at:393;Read cell array with uint64 arrays;;
610;mat73_read_le.at:399;Read cell array with int32 arrays;;
611;mat73_read_le.at:405;Read cell array with uint32 arrays;;
612;mat73_read_le.at:411;Read cell array with int16 arrays;;
613;mat73_read_le.at:417;Read cell array with uint16 arrays;;
614;mat73_read_le.at:423;Read cell array with int8 arrays;;
615;mat73_read_le.at:429;Read cell array with uint8 arrays;;
616;mat73_read_le.at:435;Read cell array with logical arrays;;
617;mat73_read_le.at:441;Read cell array with logical arrays;;
618;mat73_read_le.at:448;Read cell array with sparse double arrays;;
619;mat73_read_le.at:454;Read cell array with sparse complex double arrays;;
620;mat73_read_le.at:460;Read cell array with character arrays;;
621;mat73_read_le.at:466;Read cell array with empty structs;empty;
622;mat73_read_le.at:473;Read cell array with structs (numeric fields);;
623;mat73_read_le.at:479;Read cell array with structs (sparse fields);;
624;mat73_read_le.at:485;Read cell array with structs (character fields);;
625;mat73_readslab_le.at:27;Read slab of double array;mat73_readslab readslab;
626;mat73_readslab_le.at:36;Read slab of single array;mat73_readslab readslab;
627;mat73_readslab_le.at:45;Read slab of int64 array;mat73_readslab readslab;
628;mat73_readslab_le.at:54;Read slab of uint64 array;mat73_readslab readslab;
629;mat73_readslab_le.at:63;Read slab of int32 array;mat73_readslab readslab;
630;mat73_readslab_le.at:72;Read slab of uint32 array;mat73_readslab readslab;
631;mat73_readslab_le.at:81;Read slab of int16 array;mat73_readslab readslab;
632;mat73_readslab_le.at:90;Read slab of uint16 array;mat73_readslab readslab;
633;mat73_readslab_le.at:99;Read slab of int8 array;mat73_readslab readslab;
634;mat73_readslab_le.at:108;Read slab of uint8 array;mat73_readslab readslab;
635;mat73_readslab_le.at:117;Read slab of complex double array;mat73_readslab readslab;
636;mat73_readslab_le.at:126;Read slab of complex single array;mat73_readslab readslab;
637;mat73_readslab_le.at:135;Read slab of complex int64 array;mat73_readslab readslab;
638;mat73_readslab_le.at:144;Read slab of complex uint64 array;mat73_readslab readslab;
639;mat73_readslab_le.at:153;Read slab of complex int32 array;mat73_readslab readslab;
640;mat73_readslab_le.at:162;Read slab of complex uint32 array;mat73_readslab readslab;
641;mat73_readslab_le.at:171;Read slab of complex int16 array;mat73_readslab readslab;
642;mat73_readslab_le.at:180;Read slab of complex uint16 array;mat73_readslab readslab;
643;mat73_readslab_le.at:189;Read slab of complex int8 array;mat73_readslab readslab;
644;mat73_readslab_le.at:198;Read slab of complex uint8 array;mat73_readslab readslab;
645;mat73_readslab_le.at:207;Read linear slab of double array;mat73_readslab readslab read_data_linear;
646;mat73_readslab_le.at:214;Read linear slab of single array;mat73_readslab readslab read_data_linear;
647;mat73_readslab_le.at:221;Read linear slab of int64 array;mat73_readslab readslab read_data_linear;
648;mat73_readslab_le.at:228;Read linear slab of uint64 array;mat73_readslab readslab read_data_linear;
649;mat73_readslab_le.at:235;Read linear slab of int32 array;mat73_readslab readslab read_data_linear;
650;mat73_readslab_le.at:242;Read linear slab of uint32 array;mat73_readslab readslab read_data_linear;
651;mat73_readslab_le.at:249;Read linear slab of int16 array;mat73_readslab readslab read_data_linear;
652;mat73_readslab_le.at:256;Read linear slab of uint16 array;mat73_readslab readslab read_data_linear;
653;mat73_readslab_le.at:263;Read linear slab of int8 array;mat73_readslab readslab read_data_linear;
654;mat73_readslab_le.at:270;Read linear slab of uint8 array;mat73_readslab readslab read_data_linear;
655;mat73_readslab_le.at:277;Read linear slab of complex double array;mat73_readslab readslab read_data_linear;
656;mat73_readslab_le.at:284;Read linear slab of complex single array;mat73_readslab readslab read_data_linear;
657;mat73_readslab_le.at:291;Read linear slab of complex int64 array;mat73_readslab readslab read_data_linear;
658;mat73_readslab_le.at:298;Read linear slab of complex uint64 array;mat73_readslab readslab read_data_linear;
659;mat73_readslab_le.at:305;Read linear slab of complex int32 array;mat73_readslab readslab read_data_linear;
660;mat73_readslab_le.at:312;Read linear slab of complex uint32 array;mat73_readslab readslab read_data_linear;
661;mat73_readslab_le.at:319;Read linear slab of complex int16 array;mat73_readslab readslab read_data_linear;
662;mat73_readslab_le.at:326;Read linear slab of complex uint16 array;mat73_readslab readslab read_data_linear;
663;mat73_readslab_le.at:333;Read linear slab of complex int8 array;mat73_readslab readslab read_data_linear;
664;mat73_readslab_le.at:340;Read linear slab of complex uint8 array;mat73_readslab readslab read_data_linear;
665;mat73_readslab_le.at:347;Read slab of double array from struct;mat73_readslab readslab structure;
666;mat73_readslab_le.at:354;Read slab of single array from struct;mat73_readslab readslab structure;
667;mat73_readslab_le.at:361;Read slab of int64 array from struct;mat73_readslab readslab structure;
668;mat73_readslab_le.at:368;Read slab of uint64 array from struct;mat73_readslab readslab structure;
669;mat73_readslab_le.at:375;Read slab of int32 array from struct;mat73_readslab readslab structure;
670;mat73_readslab_le.at:382;Read slab of uint32 array from struct;mat73_readslab readslab structure;
671;mat73_readslab_le.at:389;Read slab of int16 array from struct;mat73_readslab readslab structure;
672;mat73_readslab_le.at:396;Read slab of uint16 array from struct;mat73_readslab readslab structure;
673;mat73_readslab_le.at:403;Read slab of int8 array from struct;mat73_readslab readslab structure;
674;mat73_readslab_le.at:410;Read slab of uint8 array from struct;mat73_readslab readslab structure;
675;mat73_readslab_le.at:417;Read slab of complex double array from struct;mat73_readslab readslab structure;
676;mat73_readslab_le.at:424;Read slab of complex single array from struct;mat73_readslab readslab structure;
677;mat73_readslab_le.at:431;Read slab of complex int64 array from struct;mat73_readslab readslab structure;
678;mat73_readslab_le.at:438;Read slab of complex uint64 array from struct;mat73_readslab readslab structure;
679;mat73_readslab_le.at:445;Read slab of complex int32 array from struct;mat73_readslab readslab structure;
680;mat73_readslab_le.at:452;Read slab of complex uint32 array from struct;mat73_readslab readslab structure;
681;mat73_readslab_le.at:459;Read slab of complex int16 array from struct;mat73_readslab readslab structure;
682;mat73_readslab_le.at:466;Read slab of complex uint16 array from struct;mat73_readslab readslab structure;
683;mat73_readslab_le.at:473;Read slab of complex int8 array from struct;mat73_readslab readslab structure;
684;mat73_readslab_le.at:480;Read slab of complex uint8 array from struct;mat73_readslab readslab structure;
685;mat73_read_be.at:27;Read 2D double array;;
686;mat73_read_be.at:35;Read 2D single array;;
687;mat73_read_be.at:41;Read 2D int64 array;;
688;mat73_read_be.at:47;Read 2D uint64 array;;
689;mat73_read_be.at:53;Read 2D int32 array;;
690;mat73_read_be.at:59;Read 2D uint32 array;;
691;mat73_read_be.at:65;Read 2D int16 array;;
692;mat73_read_be.at:71;Read 2D uint16 array;;
693;mat73_read_be.at:77;Read 2D int8 array;;
694;mat73_read_be.at:83;Read 2D uint8 array;;
695;mat73_read_be.at:89;Read 2D complex double array;;
696;mat73_read_be.at:97;Read 2D complex single array;;
697;mat73_read_be.at:103;Read 2D complex int64 array;;
698;mat73_read_be.at:109;Read 2D complex uint64 array;;
699;mat73_read_be.at:115;Read 2D complex int32 array;;
700;mat73_read_be.at:121;Read 2D complex uint32 array;;
701;mat73_read_be.at:127;Read 2D complex int16 array;;
702;mat73_read_be.at:133;Read 2D complex uint16 array;;
703;mat73_read_be.at:139;Read 2D complex int8 array;;
704;mat73_read_be.at:145;Read 2D complex uint8 array;;
705;mat73_read_be.at:151;Read 2D logical array;;
706;mat73_read_be.at:157;Read 2D logical array;;
707;mat73_read_be.at:164;Read sparse double array;;
708;mat73_read_be.at:170;Read sparse complex double array;;
709;mat73_read_be.at:176;Read empty array;empty;
710;mat73_read_be.at:183;Read 2D character array;;
711;mat73_read_be.at:189;Read empty struct;empty;
712;mat73_read_be.at:196;Read empty struct with fields;empty;
713;mat73_read_be.at:203;Read struct with empty fields;empty;
714;mat73_read_be.at:210;Read struct with double fields;;
715;mat73_read_be.at:216;Read struct with single fields;;
716;mat73_read_be.at:222;Read struct with int64 fields;;
717;mat73_read_be.at:228;Read struct with uint64 fields;;
718;mat73_read_be.at:234;Read struct with int32 fields;;
719;mat73_read_be.at:240;Read struct with uint32 fields;;
720;mat73_read_be.at:246;Read struct with int16 fields;;
721;mat73_read_be.at:252;Read struct with uint16 fields;;
722;mat73_read_be.at:258;Read struct with int8 fields;;
723;mat73_read_be.at:264;Read struct with uint8 fields;;
724;mat73_read_be.at:270;Read struct with complex double fields;;
725;mat73_read_be.at:276;Read struct with complex single fields;;
726;mat73_read_be.at:282;Read struct with complex int64 fields;;
727;mat73_read_be.at:288;Read struct with complex uint64 fields;;
728;mat73_read_be.at:294;Read struct with complex int32 fields;;
729;mat73_read_be.at:300;Read struct with complex uint32 fields;;
730;mat73_read_be.at:306;Read struct with complex int16 fields;;
731;mat73_read_be.at:312;Read struct with complex uint16 fields;;
732;mat73_read_be.at:318;Read struct with complex int8 fields;;
733;mat73_read_be.at:324;Read struct with complex uint8 fields;;
734;mat73_read_be.at:330;Read struct with logical fields;;
735;mat73_read_be.at:336;Read struct with logical fields;;
736;mat73_read_be.at:343;Read struct with sparse double fields;;
737;mat73_read_be.at:349;Read struct with sparse complex double fields;;
738;mat73_read_be.at:355;Read struct with character fields;;
739;mat73_read_be.at:361;Read empty cell array;empty;
740;mat73_read_be.at:368;Read cell array with empty arrays;empty;
741;mat73_read_be.at:375;Read cell array with double arrays;;
742;mat73_read_be.at:381;Read cell array with single arrays;;
743;mat73_read_be.at:387;Read cell array with int64 arrays;;
744;mat73_read_be.at:393;Read cell array with uint64 arrays;;
745;mat73_read_be.at:399;Read cell array with int32 arrays;;
746;mat73_read_be.at:405;Read cell array with uint32 arrays;;
747;mat73_read_be.at:411;Read cell array with int16 arrays;;
748;mat73_read_be.at:417;Read cell array with uint16 arrays;;
749;mat73_read_be.at:423;Read cell array with int8 arrays;;
750;mat73_read_be.at:429;Read cell array with uint8 arrays;;
751;mat73_read_be.at:435;Read cell array with logical arrays;;
752;mat73_read_be.at:441;Read cell array with logical arrays;;
753;mat73_read_be.at:448;Read cell array with sparse double arrays;;
754;mat73_read_be.at:454;Read cell array with sparse complex double arrays;;
755;mat73_read_be.at:460;Read cell array with character arrays;;
756;mat73_read_be.at:466;Read cell array with empty structs;empty;
757;mat73_read_be.at:473;Read cell array with structs (numeric fields);;
758;mat73_read_be.at:479;Read cell array with structs (sparse fields);;
759;mat73_read_be.at:485;Read cell array with structs (character fields);;
760;mat73_readslab_be.at:27;Read slab of double array;mat73_readslab readslab;
761;mat73_readslab_be.at:36;Read slab of single array;mat73_readslab readslab;
762;mat73_readslab_be.at:45;Read slab of int64 array;mat73_readslab readslab;
763;mat73_readslab_be.at:54;Read slab of uint64 array;mat73_readslab readslab;
764;mat73_readslab_be.at:63;Read slab of int32 array;mat73_readslab readslab;
765;mat73_readslab_be.at:72;Read slab of uint32 array;mat73_readslab readslab;
766;mat73_readslab_be.at:81;Read slab of int16 array;mat73_readslab readslab;
767;mat73_readslab_be.at:90;Read slab of uint16 array;mat73_readslab readslab;
768;mat73_readslab_be.at:99;Read slab of int8 array;mat73_readslab readslab;
769;mat73_readslab_be.at:108;Read slab of uint8 array;mat73_readslab readslab;
770;mat73_readslab_be.at:117;Read slab of complex double array;mat73_readslab readslab;
771;mat73_readslab_be.at:126;Read slab of complex single array;mat73_readslab readslab;
772;mat73_readslab_be.at:135;Read slab of complex int64 array;mat73_readslab readslab;
773;mat73_readslab_be.at:144;Read slab of complex uint64 array;mat73_readslab readslab;
774;mat73_readslab_be.at:153;Read slab of complex int32 array;mat73_readslab readslab;
775;mat73_readslab_be.at:162;Read slab of complex uint32 array;mat73_readslab readslab;
776;mat73_readslab_be.at:171;Read slab of complex int16 array;mat73_readslab readslab;
777;mat73_readslab_be.at:180;Read slab of complex uint16 array;mat73_readslab readslab;
778;mat73_readslab_be.at:189;Read slab of complex int8 array;mat73_readslab readslab;
779;mat73_readslab_be.at:198;Read slab of complex uint8 array;mat73_readslab readslab;
780;mat73_readslab_be.at:207;Read linear slab of double array;mat73_readslab readslab read_data_linear;
781;mat73_readslab_be.at:214;Read linear slab of single array;mat73_readslab readslab read_data_linear;
782;mat73_readslab_be.at:221;Read linear slab of int64 array;mat73_readslab readslab read_data_linear;
783;mat73_readslab_be.at:228;Read linear slab of uint64 array;mat73_readslab readslab read_data_linear;
784;mat73_readslab_be.at:235;Read linear slab of int32 array;mat73_readslab readslab read_data_linear;
785;mat73_readslab_be.at:242;Read linear slab of uint32 array;mat73_readslab readslab read_data_linear;
786;mat73_readslab_be.at:249;Read linear slab of int16 array;mat73_readslab readslab read_data_linear;
787;mat73_readslab_be.at:256;Read linear slab of uint16 array;mat73_readslab readslab read_data_linear;
788;mat73_readslab_be.at:263;Read linear slab of int8 array;mat73_readslab readslab read_data_linear;
789;mat73_readslab_be.at:270;Read linear slab of uint8 array;mat73_readslab readslab read_data_linear;
790;mat73_readslab_be.at:277;Read linear slab of complex double array;mat73_readslab readslab read_data_linear;
791;mat73_readslab_be.at:284;Read linear slab of complex single array;mat73_readslab readslab read_data_linear;
792;mat73_readslab_be.at:291;Read linear slab of complex int64 array;mat73_readslab readslab read_data_linear;
793;mat73_readslab_be.at:298;Read linear slab of complex uint64 array;mat73_readslab readslab read_data_linear;
794;mat73_readslab_be.at:305;Read linear slab of complex int32 array;mat73_readslab readslab read_data_linear;
795;mat73_readslab_be.at:312;Read linear slab of complex uint32 array;mat73_readslab readslab read_data_linear;
796;mat73_readslab_be.at:319;Read linear slab of complex int16 array;mat73_readslab readslab read_data_linear;
797;mat73_readslab_be.at:326;Read linear slab of complex uint16 array;mat73_readslab readslab read_data_linear;
798;mat73_readslab_be.at:333;Read linear slab of complex int8 array;mat73_readslab readslab read_data_linear;
799;mat73_readslab_be.at:340;Read linear slab of complex uint8 array;mat73_readslab readslab read_data_linear;
800;mat73_readslab_be.at:347;Read slab of double array from struct;mat73_readslab readslab structure;
801;mat73_readslab_be.at:354;Read slab of single array from struct;mat73_readslab readslab structure;
802;mat73_readslab_be.at:361;Read slab of int64 array from struct;mat73_readslab readslab structure;
803;mat73_readslab_be.at:368;Read slab of uint64 array from struct;mat73_readslab readslab structure;
804;mat73_readslab_be.at:375;Read slab of int32 array from struct;mat73_readslab readslab structure;
805;mat73_readslab_be.at:382;Read slab of uint32 array from struct;mat73_readslab readslab structure;
806;mat73_readslab_be.at:389;Read slab of int16 array from struct;mat73_readslab readslab structure;
807;mat73_readslab_be.at:396;Read slab of uint16 array from struct;mat73_readslab readslab structure;
808;mat73_readslab_be.at:403;Read slab of int8 array from struct;mat73_readslab readslab structure;
809;mat73_readslab_be.at:410;Read slab of uint8 array from struct;mat73_readslab readslab structure;
810;mat73_readslab_be.at:417;Read slab of complex double array from struct;mat73_readslab readslab structure;
811;mat73_readslab_be.at:424;Read slab of complex single array from struct;mat73_readslab readslab structure;
812;mat73_readslab_be.at:431;Read slab of complex int64 array from struct;mat73_readslab readslab structure;
813;mat73_readslab_be.at:438;Read slab of complex uint64 array from struct;mat73_readslab readslab structure;
814;mat73_readslab_be.at:445;Read slab of complex int32 array from struct;mat73_readslab readslab structure;
815;mat73_readslab_be.at:452;Read slab of complex uint32 array from struct;mat73_readslab readslab structure;
816;mat73_readslab_be.at:459;Read slab of complex int16 array from struct;mat73_readslab readslab structure;
817;mat73_readslab_be.at:466;Read slab of complex uint16 array from struct;mat73_readslab readslab structure;
818;mat73_readslab_be.at:473;Read slab of complex int8 array from struct;mat73_readslab readslab structure;
819;mat73_readslab_be.at:480;Read slab of complex uint8 array from struct;mat73_readslab readslab structure;
820;mat4_write.at:27;Write 2D double array;;
821;mat4_write.at:36;Write 2D single array;;
822;mat4_write.at:45;Write 2D int32 array;;
823;mat4_write.at:54;Write 2D int16 array;;
824;mat4_write.at:63;Write 2D uint16 array;;
825;mat4_write.at:72;Write 2D uint8 array;;
826;mat4_write.at:81;Write 2D complex double array;;
827;mat4_write.at:90;Write 2D complex single array;;
828;mat4_write.at:99;Write 2D complex int32 array;;
829;mat4_write.at:108;Write 2D complex int16 array;;
830;mat4_write.at:117;Write 2D complex uint16 array;;
831;mat4_write.at:126;Write 2D complex uint8 array;;
832;mat4_write.at:135;Write 2D sparse double array;;
833;mat4_write.at:144;Write 2D sparse complex double array;;
834;mat4_write.at:153;Write 2D empty array;empty;
835;mat4_write.at:163;Write character array;;
836;mat4_readwrite.at:27;Copy variables;copy;
837;mat4_readwrite.at:35;Copy variables;copy;
838;mat4_readwrite.at:43;Delete variables;delete;
839;mat5_uncompressed_write.at:27;Write 2D double array;;
840;mat5_uncompressed_write.at:36;Write 2D single array;;
841;mat5_uncompressed_write.at:45;Write 2D int64 array;;
842;mat5_uncompressed_write.at:55;Write 2D uint64 array;;
843;mat5_uncompressed_write.at:65;Write 2D int32 array;;
844;mat5_uncompressed_write.at:74;Write 2D uint32 array;;
845;mat5_uncompressed_write.at:83;Write 2D int16 array;;
846;mat5_uncompressed_write.at:92;Write 2D uint16 array;;
847;mat5_uncompressed_write.at:101;Write 2D int8 array;;
848;mat5_uncompressed_write.at:110;Write 2D uint8 array;;
849;mat5_uncompressed_write.at:119;Write 2D complex double array;;
850;mat5_uncompressed_write.at:128;Write 2D complex single array;;
851;mat5_uncompressed_write.at:137;Write 2D complex int64 array;;
852;mat5_uncompressed_write.at:147;Write 2D complex uint64 array;;
853;mat5_uncompressed_write.at:157;Write 2D complex int32 array;;
854;mat5_uncompressed_write.at:166;Write 2D complex uint32 array;;
855;mat5_uncompressed_write.at:175;Write 2D complex int16 array;;
856;mat5_uncompressed_write.at:184;Write 2D complex uint16 array;;
857;mat5_uncompressed_write.at:193;Write 2D complex int8 array;;
858;mat5_uncompressed_write.at:202;Write 2D complex uint8 array;;
859;mat5_uncompressed_write.at:211;Write 2D logical array;;
860;mat5_uncompressed_write.at:224;Write 2D sparse double array;;
861;mat5_uncompressed_write.at:233;Write 2D sparse complex double array;;
862;mat5_uncompressed_write.at:242;Write 2D empty array;empty;
863;mat5_uncompressed_write.at:252;Write character array;;
864;mat5_uncompressed_write.at:261;Write empty struct;empty;
865;mat5_uncompressed_write.at:277;Write struct with 2D double fields;;
866;mat5_uncompressed_write.at:286;Write struct with 2D single fields;;
867;mat5_uncompressed_write.at:295;Write struct with 2D int64 fields;;
868;mat5_uncompressed_write.at:305;Write struct with 2D uint64 fields;;
869;mat5_uncompressed_write.at:315;Write struct with 2D int32 fields;;
870;mat5_uncompressed_write.at:324;Write struct with 2D uint32 fields;;
871;mat5_uncompressed_write.at:333;Write struct with 2D int16 fields;;
872;mat5_uncompressed_write.at:342;Write struct with 2D uint16 fields;;
873;mat5_uncompressed_write.at:351;Write struct with 2D int8 fields;;
874;mat5_uncompressed_write.at:360;Write struct with 2D uint8 fields;;
875;mat5_uncompressed_write.at:369;Write struct with 2D complex double fields;;
876;mat5_uncompressed_write.at:378;Write struct with 2D complex single fields;;
877;mat5_uncompressed_write.at:387;Write struct with 2D complex int64 fields;;
878;mat5_uncompressed_write.at:397;Write struct with 2D complex uint64 fields;;
879;mat5_uncompressed_write.at:407;Write struct with 2D complex int32 fields;;
880;mat5_uncompressed_write.at:416;Write struct with 2D complex uint32 fields;;
881;mat5_uncompressed_write.at:425;Write struct with 2D complex int16 fields;;
882;mat5_uncompressed_write.at:434;Write struct with 2D complex uint16 fields;;
883;mat5_uncompressed_write.at:443;Write struct with 2D complex int8 fields;;
884;mat5_uncompressed_write.at:452;Write struct with 2D complex uint8 fields;;
885;mat5_uncompressed_write.at:461;Write struct with 2D logical fields;;
886;mat5_uncompressed_write.at:470;Write struct with character fields;bug30;
887;mat5_uncompressed_write.at:480;Write empty cell array;empty;
888;mat5_uncompressed_write.at:492;Write cell array with 2D double fields;;
889;mat5_uncompressed_write.at:501;Write cell array with 2D single fields;;
890;mat5_uncompressed_write.at:510;Write cell array with 2D int64 fields;;
891;mat5_uncompressed_write.at:520;Write cell array with 2D uint64 fields;;
892;mat5_uncompressed_write.at:530;Write cell array with 2D int32 fields;;
893;mat5_uncompressed_write.at:539;Write cell array with 2D uint32 fields;;
894;mat5_uncompressed_write.at:548;Write cell array with 2D int16 fields;;
895;mat5_uncompressed_write.at:557;Write cell array with 2D uint16 fields;;
896;mat5_uncompressed_write.at:566;Write cell array with 2D int8 fields;;
897;mat5_uncompressed_write.at:575;Write cell array with 2D uint8 fields;;
898;mat5_uncompressed_write.at:584;Write cell array with 2D complex double fields;;
899;mat5_uncompressed_write.at:593;Write cell array with 2D complex single fields;;
900;mat5_uncompressed_write.at:602;Write cell array with 2D complex int64 fields;;
901;mat5_uncompressed_write.at:612;Write cell array with 2D complex uint64 fields;;
902;mat5_uncompressed_write.at:622;Write cell array with 2D complex int32 fields;;
903;mat5_uncompressed_write.at:631;Write cell array with 2D complex uint32 fields;;
904;mat5_uncompressed_write.at:640;Write cell array with 2D complex int16 fields;;
905;mat5_uncompressed_write.at:649;Write cell array with 2D complex uint16 fields;;
906;mat5_uncompressed_write.at:658;Write cell array with 2D complex int8 fields;;
907;mat5_uncompressed_write.at:667;Write cell array with 2D complex uint8 fields;;
908;mat5_uncompressed_write.at:676;Write cell array with 2D logical fields;;
909;mat5_uncompressed_write.at:685;Write cell array with empty struct fields;empty bug34;
910;mat5_uncompressed_readwrite.at:27;Copy variables;copy;
911;mat5_uncompressed_readwrite.at:35;Copy variables;copy;
912;mat5_uncompressed_readwrite.at:43;Delete variables;delete;
913;mat5_compressed_write.at:27;Write 2D double array;;
914;mat5_compressed_write.at:37;Write 2D single array;;
915;mat5_compressed_write.at:47;Write 2D int64 array;;
916;mat5_compressed_write.at:58;Write 2D uint64 array;;
917;mat5_compressed_write.at:69;Write 2D int32 array;;
918;mat5_compressed_write.at:79;Write 2D uint32 array;;
919;mat5_compressed_write.at:89;Write 2D int16 array;;
920;mat5_compressed_write.at:99;Write 2D uint16 array;;
921;mat5_compressed_write.at:109;Write 2D int8 array;;
922;mat5_compressed_write.at:119;Write 2D uint8 array;;
923;mat5_compressed_write.at:129;Write 2D complex double array;;
924;mat5_compressed_write.at:139;Write 2D complex single array;;
925;mat5_compressed_write.at:149;Write 2D complex int64 array;;
926;mat5_compressed_write.at:160;Write 2D complex uint64 array;;
927;mat5_compressed_write.at:171;Write 2D complex int32 array;;
928;mat5_compressed_write.at:181;Write 2D complex uint32 array;;
929;mat5_compressed_write.at:191;Write 2D complex int16 array;;
930;mat5_compressed_write.at:201;Write 2D complex uint16 array;;
931;mat5_compressed_write.at:211;Write 2D complex int8 array;;
932;mat5_compressed_write.at:221;Write 2D complex uint8 array;;
933;mat5_compressed_write.at:231;Write 2D logical array;;
934;mat5_compressed_write.at:245;Write 2D sparse double array;;
935;mat5_compressed_write.at:255;Write 2D sparse complex double array;;
936;mat5_compressed_write.at:265;Write 2D empty array;empty;
937;mat5_compressed_write.at:276;Write character array;;
938;mat5_compressed_write.at:286;Write empty struct;empty;
939;mat5_compressed_write.at:303;Write struct with 2D double fields;;
940;mat5_compressed_write.at:313;Write struct with 2D single fields;;
941;mat5_compressed_write.at:323;Write struct with 2D int64 fields;;
942;mat5_compressed_write.at:334;Write struct with 2D uint64 fields;;
943;mat5_compressed_write.at:345;Write struct with 2D int32 fields;;
944;mat5_compressed_write.at:355;Write struct with 2D uint32 fields;;
945;mat5_compressed_write.at:365;Write struct with 2D int16 fields;;
946;mat5_compressed_write.at:375;Write struct with 2D uint16 fields;;
947;mat5_compressed_write.at:385;Write struct with 2D int8 fields;;
948;mat5_compressed_write.at:395;Write struct with 2D uint8 fields;;
949;mat5_compressed_write.at:405;Write struct with 2D complex double fields;;
950;mat5_compressed_write.at:415;Write struct with 2D complex single fields;;
951;mat5_compressed_write.at:425;Write struct with 2D complex int64 fields;;
952;mat5_compressed_write.at:436;Write struct with 2D complex uint64 fields;;
953;mat5_compressed_write.at:447;Write struct with 2D complex int32 fields;;
954;mat5_compressed_write.at:457;Write struct with 2D complex uint32 fields;;
955;mat5_compressed_write.at:467;Write struct with 2D complex int16 fields;;
956;mat5_compressed_write.at:477;Write struct with 2D complex uint16 fields;;
957;mat5_compressed_write.at:487;Write struct with 2D complex int8 fields;;
958;mat5_compressed_write.at:497;Write struct with 2D complex uint8 fields;;
959;mat5_compressed_write.at:507;Write struct with 2D logical fields;;
960;mat5_compressed_write.at:517;Write struct with character fields;bug30;
961;mat5_compressed_write.at:528;Write empty cell array;empty;
962;mat5_compressed_write.at:541;Write cell array with 2D double fields;;
963;mat5_compressed_write.at:551;Write cell array with 2D single fields;;
964;mat5_compressed_write.at:561;Write cell array with 2D int64 fields;;
965;mat5_compressed_write.at:572;Write cell array with 2D uint64 fields;;
966;mat5_compressed_write.at:583;Write cell array with 2D int32 fields;;
967;mat5_compressed_write.at:593;Write cell array with 2D uint32 fields;;
968;mat5_compressed_write.at:603;Write cell array with 2D int16 fields;;
969;mat5_compressed_write.at:613;Write cell array with 2D uint16 fields;;
970;mat5_compressed_write.at:623;Write cell array with 2D int8 fields;;
971;mat5_compressed_write.at:633;Write cell array with 2D uint8 fields;;
972;mat5_compressed_write.at:643;Write cell array with 2D complex double fields;;
973;mat5_compressed_write.at:653;Write cell array with 2D complex single fields;;
974;mat5_compressed_write.at:663;Write cell array with 2D complex int64 fields;;
975;mat5_compressed_write.at:674;Write cell array with 2D complex uint64 fields;;
976;mat5_compressed_write.at:685;Write cell array with 2D complex int32 fields;;
977;mat5_compressed_write.at:695;Write cell array with 2D complex uint32 fields;;
978;mat5_compressed_write.at:705;Write cell array with 2D complex int16 fields;;
979;mat5_compressed_write.at:715;Write cell array with 2D complex uint16 fields;;
980;mat5_compressed_write.at:725;Write cell array with 2D complex int8 fields;;
981;mat5_compressed_write.at:735;Write cell array with 2D complex uint8 fields;;
982;mat5_compressed_write.at:745;Write cell array with 2D logical fields;;
983;mat5_compressed_write.at:755;Write cell array with empty structs;empty bug34;
984;mat5_compressed_readwrite.at:27;Copy variables;copy;
985;mat5_compressed_readwrite.at:36;Copy variables;copy;
986;mat5_compressed_readwrite.at:45;Delete variables;delete;
987;mat5_compressed_readwrite.at:145;Copy large struct;copy large_struct;
988;mat5_compressed_readwrite.at:154;Copy large struct;copy large_struct;
989;mat73_write.at:27;Write 2D double array;;
990;mat73_write.at:37;Write 2D single array;;
991;mat73_write.at:47;Write 2D int64 array;;
992;mat73_write.at:58;Write 2D uint64 array;;
993;mat73_write.at:69;Write 2D int32 array;;
994;mat73_write.at:79;Write 2D uint32 array;;
995;mat73_write.at:89;Write 2D int16 array;;
996;mat73_write.at:99;Write 2D uint16 array;;
997;mat73_write.at:109;Write 2D int8 array;;
998;mat73_write.at:119;Write 2D uint8 array;;
999;mat73_write.at:129;Write 2D complex double array;;
1000;mat73_write.at:139;Write 2D complex single array;;
1001;mat73_write.at:149;Write 2D complex int64 array;;
1002;mat73_write.at:160;Write 2D complex uint64 array;;
1003;mat73_write.at:171;Write 2D complex int32 array;;
1004;mat73_write.at:181;Write 2D complex uint32 array;;
1005;mat73_write.at:191;Write 2D complex int16 array;;
1006;mat73_write.at:201;Write 2D complex uint16 array;;
1007;mat73_write.at:211;Write 2D complex int8 array;;
1008;mat73_write.at:221;Write 2D complex uint8 array;;
1009;mat73_write.at:231;Write 2D logical array;;
1010;mat73_write.at:245;Write 2D sparse double array;;
1011;mat73_write.at:255;Write 2D sparse complex double array;;
1012;mat73_write.at:265;Write 2D empty array;empty;
1013;mat73_write.at:276;Write character array;;
1014;mat73_write.at:286;Write empty struct;empty;
1015;mat73_write.at:303;Write struct with 2D double fields;;
1016;mat73_write.at:313;Write struct with 2D single fields;;
1017;mat73_write.at:323;Write struct with 2D int64 fields;;
1018;mat73_write.at:334;Write struct with 2D uint64 fields;;
1019;mat73_write.at:345;Write struct with 2D int32 fields;;
1020;mat73_write.at:355;Write struct with 2D uint32 fields;;
1021;mat73_write.at:365;Write struct with 2D int16 fields;;
1022;mat73_write.at:375;Write struct with 2D uint16 fields;;
1023;mat73_write.at:385;Write struct with 2D int8 fields;;
1024;mat73_write.at:395;Write struct with 2D uint8 fields;;
1025;mat73_write.at:405;Write struct with 2D complex double fields;;
1026;mat73_write.at:415;Write struct with 2D complex single fields;;
1027;mat73_write.at:425;Write struct with 2D complex int64 fields;;
1028;mat73_write.at:436;Write struct with 2D complex uint64 fields;;
1029;mat73_write.at:447;Write struct with 2D complex int32 fields;;
1030;mat73_write.at:457;Write struct with 2D complex uint32 fields;;
1031;mat73_write.at:467;Write struct with 2D complex int16 fields;;
1032;mat73_write.at:477;Write struct with 2D complex uint16 fields;;
1033;mat73_write.at:487;Write struct with 2D complex int8 fields;;
1034;mat73_write.at:497;Write struct with 2D complex uint8 fields;;
1035;mat73_write.at:507;Write struct with 2D logical fields;;
1036;mat73_write.at:517;Write struct with character fields;bug30;
1037;mat73_write.at:528;Write empty cell array;;
1038;mat73_write.at:540;Write cell array with 2D double fields;;
1039;mat73_write.at:550;Write cell array with 2D single fields;;
1040;mat73_write.at:560;Write cell array with 2D int64 fields;;
1041;mat73_write.at:571;Write cell array with 2D uint64 fields;;
1042;mat73_write.at:582;Write cell array with 2D int32 fields;;
1043;mat73_write.at:592;Write cell array with 2D uint32 fields;;
1044;mat73_write.at:602;Write cell array with 2D int16 fields;;
1045;mat73_write.at:612;Write cell array with 2D uint16 fields;;
1046;mat73_write.at:622;Write cell array with 2D int8 fields;;
1047;mat73_write.at:632;Write cell array with 2D uint8 fields;;
1048;mat73_write.at:642;Write cell array with 2D complex double fields;;
1049;mat73_write.at:652;Write cell array with 2D complex single fields;;
1050;mat73_write.at:662;Write cell array with 2D complex int64 fields;;
1051;mat73_write.at:673;Write cell array with 2D complex uint64 fields;;
1052;mat73_write.at:684;Write cell array with 2D complex int32 fields;;
1053;mat73_write.at:694;Write cell array with 2D complex uint32 fields;;
1054;mat73_write.at:704;Write cell array with 2D complex int16 fields;;
1055;mat73_write.at:714;Write cell array with 2D complex uint16 fields;;
1056;mat73_write.at:724;Write cell array with 2D complex int8 fields;;
1057;mat73_write.at:734;Write cell array with 2D complex uint8 fields;;
1058;mat73_write.at:744;Write cell array with 2D logical fields;;
1059;mat73_write.at:754;Write cell array with empty struct fields;empty bug34;
1060;mat73_readwrite.at:27;Copy variables;copy;
1061;mat73_readwrite.at:36;Copy variables;copy;
1062;mat73_readwrite.at:45;Delete variables;delete;
1063;mat73_compressed_write.at:27;Write 2D double array;;
1064;mat73_compressed_write.at:38;Write 2D single array;;
1065;mat73_compressed_write.at:49;Write 2D int64 array;;
1066;mat73_compressed_write.at:61;Write 2D uint64 array;;
1067;mat73_compressed_write.at:73;Write 2D int32 array;;
1068;mat73_compressed_write.at:84;Write 2D uint32 array;;
1069;mat73_compressed_write.at:95;Write 2D int16 array;;
1070;mat73_compressed_write.at:106;Write 2D uint16 array;;
1071;mat73_compressed_write.at:117;Write 2D int8 array;;
1072;mat73_compressed_write.at:128;Write 2D uint8 array;;
1073;mat73_compressed_write.at:139;Write 2D complex double array;;
1074;mat73_compressed_write.at:150;Write 2D complex single array;;
1075;mat73_compressed_write.at:161;Write 2D complex int64 array;;
1076;mat73_compressed_write.at:173;Write 2D complex uint64 array;;
1077;mat73_compressed_write.at:185;Write 2D complex int32 array;;
1078;mat73_compressed_write.at:196;Write 2D complex uint32 array;;
1079;mat73_compressed_write.at:207;Write 2D complex int16 array;;
1080;mat73_compressed_write.at:218;Write 2D complex uint16 array;;
1081;mat73_compressed_write.at:229;Write 2D complex int8 array;;
1082;mat73_compressed_write.at:240;Write 2D complex uint8 array;;
1083;mat73_compressed_write.at:251;Write 2D logical array;;
1084;mat73_compressed_write.at:266;Write 2D sparse double array;;
1085;mat73_compressed_write.at:277;Write 2D sparse complex double array;;
1086;mat73_compressed_write.at:288;Write 2D empty array;empty;
1087;mat73_compressed_write.at:300;Write character array;;
1088;mat73_compressed_write.at:311;Write empty struct;empty;
1089;mat73_compressed_write.at:329;Write struct with 2D double fields;;
1090;mat73_compressed_write.at:340;Write struct with 2D single fields;;
1091;mat73_compressed_write.at:351;Write struct with 2D int64 fields;;
1092;mat73_compressed_write.at:363;Write struct with 2D uint64 fields;;
1093;mat73_compressed_write.at:375;Write struct with 2D int32 fields;;
1094;mat73_compressed_write.at:386;Write struct with 2D uint32 fields;;
1095;mat73_compressed_write.at:397;Write struct with 2D int16 fields;;
1096;mat73_compressed_write.at:408;Write struct with 2D uint16 fields;;
1097;mat73_compressed_write.at:419;Write struct with 2D int8 fields;;
1098;mat73_compressed_write.at:430;Write struct with 2D uint8 fields;;
1099;mat73_compressed_write.at:441;Write struct with 2D complex double fields;;
1100;mat73_compressed_write.at:452;Write struct with 2D complex single fields;;
1101;mat73_compressed_write.at:463;Write struct with 2D complex int64 fields;;
1102;mat73_compressed_write.at:475;Write struct with 2D complex uint64 fields;;
1103;mat73_compressed_write.at:487;Write struct with 2D complex int32 fields;;
1104;mat73_compressed_write.at:498;Write struct with 2D complex uint32 fields;;
1105;mat73_compressed_write.at:509;Write struct with 2D complex int16 fields;;
1106;mat73_compressed_write.at:520;Write struct with 2D complex uint16 fields;;
1107;mat73_compressed_write.at:531;Write struct with 2D complex int8 fields;;
1108;mat73_compressed_write.at:542;Write struct with 2D complex uint8 fields;;
1109;mat73_compressed_write.at:553;Write struct with 2D logical fields;;
1110;mat73_compressed_write.at:564;Write empty cell array;empty;
1111;mat73_compressed_write.at:578;Write cell array with 2D double fields;;
1112;mat73_compressed_write.at:589;Write cell array with 2D single fields;;
1113;mat73_compressed_write.at:600;Write cell array with 2D int64 fields;;
1114;mat73_compressed_write.at:612;Write cell array with 2D uint64 fields;;
1115;mat73_compressed_write.at:624;Write cell array with 2D int32 fields;;
1116;mat73_compressed_write.at:635;Write cell array with 2D uint32 fields;;
1117;mat73_compressed_write.at:646;Write cell array with 2D int16 fields;;
1118;mat73_compressed_write.at:657;Write cell array with 2D uint16 fields;;
1119;mat73_compressed_write.at:668;Write cell array with 2D int8 fields;;
1120;mat73_compressed_write.at:679;Write cell array with 2D uint8 fields;;
1121;mat73_compressed_write.at:690;Write cell array with 2D complex double fields;;
1122;mat73_compressed_write.at:701;Write cell array with 2D complex single fields;;
1123;mat73_compressed_write.at:712;Write cell array with 2D complex int64 fields;;
1124;mat73_compressed_write.at:724;Write cell array with 2D complex uint64 fields;;
1125;mat73_compressed_write.at:736;Write cell array with 2D complex int32 fields;;
1126;mat73_compressed_write.at:747;Write cell array with 2D complex uint32 fields;;
1127;mat73_compressed_write.at:758;Write cell array with 2D complex int16 fields;;
1128;mat73_compressed_write.at:769;Write cell array with 2D complex uint16 fields;;
1129;mat73_compressed_write.at:780;Write cell array with 2D complex int8 fields;;
1130;mat73_compressed_write.at:791;Write cell array with 2D complex uint8 fields;;
1131;mat73_compressed_write.at:802;Write cell array with 2D logical fields;;
1132;mat73_compressed_write.at:813;Write cell array with empty struct fields;empty bug34;
1133;mat73_compressed_readwrite.at:27;Copy variables;copy;
1134;mat73_compressed_readwrite.at:37;Copy variables;copy;
1135;mat73_compressed_readwrite.at:47;Delete variables;delete;
1136;mat4_extended_sparse.at:27;Write 2D sparse single array;;
1137;mat4_extended_sparse.at:35;Write 2D sparse int32 array;;
1138;mat4_extended_sparse.at:43;Write 2D sparse int16 array;;
1139;mat4_extended_sparse.at:51;Write 2D sparse uint16 array;;
1140;mat4_extended_sparse.at:59;Write 2D sparse uint8 array;;
1141;mat4_extended_sparse.at:67;Write 2D sparse complex single array;;
1142;mat4_extended_sparse.at:75;Write 2D sparse complex int32 array;;
1143;mat4_extended_sparse.at:83;Write 2D sparse complex int16 array;;
1144;mat4_extended_sparse.at:91;Write 2D sparse complex uint16 array;;
1145;mat4_extended_sparse.at:99;Write 2D sparse complex uint8 array;;
1146;mat5_uncompressed_extended_sparse.at:27;Write 2D sparse single array;;
1147;mat5_uncompressed_extended_sparse.at:34;Write 2D sparse int64 array;;
1148;mat5_uncompressed_extended_sparse.at:42;Write 2D sparse uint64 array;;
1149;mat5_uncompressed_extended_sparse.at:50;Write 2D sparse int32 array;;
1150;mat5_uncompressed_extended_sparse.at:57;Write 2D sparse uint32 array;;
1151;mat5_uncompressed_extended_sparse.at:64;Write 2D sparse int16 array;;
1152;mat5_uncompressed_extended_sparse.at:71;Write 2D sparse uint16 array;;
1153;mat5_uncompressed_extended_sparse.at:78;Write 2D sparse int8 array;;
1154;mat5_uncompressed_extended_sparse.at:85;Write 2D sparse uint8 array;;
1155;mat5_uncompressed_extended_sparse.at:92;Write 2D sparse complex single array;;
1156;mat5_uncompressed_extended_sparse.at:99;Write 2D sparse complex int64 array;;
1157;mat5_uncompressed_extended_sparse.at:107;Write 2D sparse complex uint64 array;;
1158;mat5_uncompressed_extended_sparse.at:115;Write 2D sparse complex int32 array;;
1159;mat5_uncompressed_extended_sparse.at:122;Write 2D sparse complex uint32 array;;
1160;mat5_uncompressed_extended_sparse.at:129;Write 2D sparse complex int16 array;;
1161;mat5_uncompressed_extended_sparse.at:136;Write 2D sparse complex uint16 array;;
1162;mat5_uncompressed_extended_sparse.at:143;Write 2D sparse complex int8 array;;
1163;mat5_uncompressed_extended_sparse.at:150;Write 2D sparse complex uint8 array;;
1164;mat5_compressed_extended_sparse.at:27;Write 2D sparse single array;;
1165;mat5_compressed_extended_sparse.at:35;Write 2D sparse int64 array;;
1166;mat5_compressed_extended_sparse.at:44;Write 2D sparse uint64 array;;
1167;mat5_compressed_extended_sparse.at:53;Write 2D sparse int32 array;;
1168;mat5_compressed_extended_sparse.at:61;Write 2D sparse uint32 array;;
1169;mat5_compressed_extended_sparse.at:69;Write 2D sparse int16 array;;
1170;mat5_compressed_extended_sparse.at:77;Write 2D sparse uint16 array;;
1171;mat5_compressed_extended_sparse.at:85;Write 2D sparse int8 array;;
1172;mat5_compressed_extended_sparse.at:93;Write 2D sparse uint8 array;;
1173;mat5_compressed_extended_sparse.at:101;Write 2D sparse complex single array;;
1174;mat5_compressed_extended_sparse.at:109;Write 2D sparse complex int64 array;;
1175;mat5_compressed_extended_sparse.at:118;Write 2D sparse complex uint64 array;;
1176;mat5_compressed_extended_sparse.at:127;Write 2D sparse complex int32 array;;
1177;mat5_compressed_extended_sparse.at:135;Write 2D sparse complex uint32 array;;
1178;mat5_compressed_extended_sparse.at:143;Write 2D sparse complex int16 array;;
1179;mat5_compressed_extended_sparse.at:151;Write 2D sparse complex uint16 array;;
1180;mat5_compressed_extended_sparse.at:159;Write 2D sparse complex int8 array;;
1181;mat5_compressed_extended_sparse.at:167;Write 2D sparse complex uint8 array;;
1182;mat73_uncompressed_extended_sparse.at:27;Write 2D sparse single array;;
1183;mat73_uncompressed_extended_sparse.at:35;Write 2D sparse int64 array;;
1184;mat73_uncompressed_extended_sparse.at:44;Write 2D sparse uint64 array;;
1185;mat73_uncompressed_extended_sparse.at:53;Write 2D sparse int32 array;;
1186;mat73_uncompressed_extended_sparse.at:61;Write 2D sparse uint32 array;;
1187;mat73_uncompressed_extended_sparse.at:69;Write 2D sparse int16 array;;
1188;mat73_uncompressed_extended_sparse.at:77;Write 2D sparse uint16 array;;
1189;mat73_uncompressed_extended_sparse.at:85;Write 2D sparse int8 array;;
1190;mat73_uncompressed_extended_sparse.at:93;Write 2D sparse uint8 array;;
1191;mat73_uncompressed_extended_sparse.at:101;Write 2D sparse complex single array;;
1192;mat73_uncompressed_extended_sparse.at:109;Write 2D sparse complex int64 array;;
1193;mat73_uncompressed_extended_sparse.at:118;Write 2D sparse complex uint64 array;;
1194;mat73_uncompressed_extended_sparse.at:127;Write 2D sparse complex int32 array;;
1195;mat73_uncompressed_extended_sparse.at:135;Write 2D sparse complex uint32 array;;
1196;mat73_uncompressed_extended_sparse.at:143;Write 2D sparse complex int16 array;;
1197;mat73_uncompressed_extended_sparse.at:151;Write 2D sparse complex uint16 array;;
1198;mat73_uncompressed_extended_sparse.at:159;Write 2D sparse complex int8 array;;
1199;mat73_uncompressed_extended_sparse.at:167;Write 2D sparse complex uint8 array;;
1200;mat73_compressed_extended_sparse.at:27;Write 2D sparse single array;;
1201;mat73_compressed_extended_sparse.at:36;Write 2D sparse int64 array;;
1202;mat73_compressed_extended_sparse.at:46;Write 2D sparse uint64 array;;
1203;mat73_compressed_extended_sparse.at:56;Write 2D sparse int32 array;;
1204;mat73_compressed_extended_sparse.at:65;Write 2D sparse uint32 array;;
1205;mat73_compressed_extended_sparse.at:74;Write 2D sparse int16 array;;
1206;mat73_compressed_extended_sparse.at:83;Write 2D sparse uint16 array;;
1207;mat73_compressed_extended_sparse.at:92;Write 2D sparse int8 array;;
1208;mat73_compressed_extended_sparse.at:101;Write 2D sparse uint8 array;;
1209;mat73_compressed_extended_sparse.at:110;Write 2D sparse complex single array;;
1210;mat73_compressed_extended_sparse.at:119;Write 2D sparse complex int64 array;;
1211;mat73_compressed_extended_sparse.at:129;Write 2D sparse complex uint64 array;;
1212;mat73_compressed_extended_sparse.at:139;Write 2D sparse complex int32 array;;
1213;mat73_compressed_extended_sparse.at:148;Write 2D sparse complex uint32 array;;
1214;mat73_compressed_extended_sparse.at:157;Write 2D sparse complex int16 array;;
1215;mat73_compressed_extended_sparse.at:166;Write 2D sparse complex uint16 array;;
1216;mat73_compressed_extended_sparse.at:175;Write 2D sparse complex int8 array;;
1217;mat73_compressed_extended_sparse.at:184;Write 2D sparse complex uint8 array;;
1218;struct_api.at:27;Create struct;struct_api;
1219;struct_api.at:33;Set struct field;struct_api;
1220;struct_api.at:39;Get struct fieldnames;struct_api;
1221;struct_api.at:45;Add fields to struct;struct_api;
1222;struct_api.at:51;Linearly index a struct;struct_api;
1223;struct_api.at:57;Index struct via dimension slices;struct_api;
1224;cell_api.at:27;Set cell array elements;cell_api;
1225;cell_api.at:33;Linearly index cell array;cell_api;
1226;cell_api.at:39;Index cell array via dimension slices;cell_api;
1227;subscript_api.at:27;Calculate a set of subscripts from a linear index;subscript_api;
1228;subscript_api.at:33;Calculate the linear index from subscript values;subscript_api;
"
# List of the all the test groups.
at_groups_all=`$as_echo "$at_help_all" | sed 's/;.*//'`

# at_fn_validate_ranges NAME...
# -----------------------------
# Validate and normalize the test group number contained in each variable
# NAME. Leading zeroes are treated as decimal.
at_fn_validate_ranges ()
{
  for at_grp
  do
    eval at_value=\$$at_grp
    if test $at_value -lt 1 || test $at_value -gt 1228; then
      $as_echo "invalid test group: $at_value" >&2
      exit 1
    fi
    case $at_value in
      0*) # We want to treat leading 0 as decimal, like expr and test, but
	  # AS_VAR_ARITH treats it as octal if it uses $(( )).
	  # With XSI shells, ${at_value#${at_value%%[1-9]*}} avoids the
	  # expr fork, but it is not worth the effort to determine if the
	  # shell supports XSI when the user can just avoid leading 0.
	  eval $at_grp='`expr $at_value + 0`' ;;
    esac
  done
}

at_prev=
for at_option
do
  # If the previous option needs an argument, assign it.
  if test -n "$at_prev"; then
    at_option=$at_prev=$at_option
    at_prev=
  fi

  case $at_option in
  *=?*) at_optarg=`expr "X$at_option" : '[^=]*=\(.*\)'` ;;
  *)    at_optarg= ;;
  esac

  # Accept the important Cygnus configure options, so we can diagnose typos.

  case $at_option in
    --help | -h )
	at_help_p=:
	;;

    --list | -l )
	at_list_p=:
	;;

    --version | -V )
	at_version_p=:
	;;

    --clean | -c )
	at_clean=:
	;;

    --color )
	at_color=always
	;;
    --color=* )
	case $at_optarg in
	no | never | none) at_color=never ;;
	auto | tty | if-tty) at_color=auto ;;
	always | yes | force) at_color=always ;;
	*) at_optname=`echo " $at_option" | sed 's/^ //; s/=.*//'`
	   as_fn_error $? "unrecognized argument to $at_optname: $at_optarg" ;;
	esac
	;;

    --debug | -d )
	at_debug_p=:
	;;

    --errexit | -e )
	at_debug_p=:
	at_errexit_p=:
	;;

    --verbose | -v )
	at_verbose=; at_quiet=:
	;;

    --trace | -x )
	at_traceon='set -x'
	at_trace_echo=echo
	at_check_filter_trace=at_fn_filter_trace
	;;

    [0-9] | [0-9][0-9] | [0-9][0-9][0-9] | [0-9][0-9][0-9][0-9])
	at_fn_validate_ranges at_option
	as_fn_append at_groups "$at_option$as_nl"
	;;

    # Ranges
    [0-9]- | [0-9][0-9]- | [0-9][0-9][0-9]- | [0-9][0-9][0-9][0-9]-)
	at_range_start=`echo $at_option |tr -d X-`
	at_fn_validate_ranges at_range_start
	at_range=`$as_echo "$at_groups_all" | \
	  sed -ne '/^'$at_range_start'$/,$p'`
	as_fn_append at_groups "$at_range$as_nl"
	;;

    -[0-9] | -[0-9][0-9] | -[0-9][0-9][0-9] | -[0-9][0-9][0-9][0-9])
	at_range_end=`echo $at_option |tr -d X-`
	at_fn_validate_ranges at_range_end
	at_range=`$as_echo "$at_groups_all" | \
	  sed -ne '1,/^'$at_range_end'$/p'`
	as_fn_append at_groups "$at_range$as_nl"
	;;

    [0-9]-[0-9] | [0-9]-[0-9][0-9] | [0-9]-[0-9][0-9][0-9] | \
    [0-9]-[0-9][0-9][0-9][0-9] | [0-9][0-9]-[0-9][0-9] | \
    [0-9][0-9]-[0-9][0-9][0-9] | [0-9][0-9]-[0-9][0-9][0-9][0-9] | \
    [0-9][0-9][0-9]-[0-9][0-9][0-9] | \
    [0-9][0-9][0-9]-[0-9][0-9][0-9][0-9] | \
    [0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9] )
	at_range_start=`expr $at_option : '\(.*\)-'`
	at_range_end=`expr $at_option : '.*-\(.*\)'`
	if test $at_range_start -gt $at_range_end; then
	  at_tmp=$at_range_end
	  at_range_end=$at_range_start
	  at_range_start=$at_tmp
	fi
	at_fn_validate_ranges at_range_start at_range_end
	at_range=`$as_echo "$at_groups_all" | \
	  sed -ne '/^'$at_range_start'$/,/^'$at_range_end'$/p'`
	as_fn_append at_groups "$at_range$as_nl"
	;;

    # Directory selection.
    --directory | -C )
	at_prev=--directory
	;;
    --directory=* )
	at_change_dir=:
	at_dir=$at_optarg
	if test x- = "x$at_dir" ; then
	  at_dir=./-
	fi
	;;

    # Parallel execution.
    --jobs | -j )
	at_jobs=0
	;;
    --jobs=* | -j[0-9]* )
	if test -n "$at_optarg"; then
	  at_jobs=$at_optarg
	else
	  at_jobs=`expr X$at_option : 'X-j\(.*\)'`
	fi
	case $at_jobs in *[!0-9]*)
	  at_optname=`echo " $at_option" | sed 's/^ //; s/[0-9=].*//'`
	  as_fn_error $? "non-numeric argument to $at_optname: $at_jobs" ;;
	esac
	;;

    # Keywords.
    --keywords | -k )
	at_prev=--keywords
	;;
    --keywords=* )
	at_groups_selected=$at_help_all
	at_save_IFS=$IFS
	IFS=,
	set X $at_optarg
	shift
	IFS=$at_save_IFS
	for at_keyword
	do
	  at_invert=
	  case $at_keyword in
	  '!'*)
	    at_invert="-v"
	    at_keyword=`expr "X$at_keyword" : 'X!\(.*\)'`
	    ;;
	  esac
	  # It is on purpose that we match the test group titles too.
	  at_groups_selected=`$as_echo "$at_groups_selected" |
	      grep -i $at_invert "^[1-9][^;]*;.*[; ]$at_keyword[ ;]"`
	done
	# Smash the keywords.
	at_groups_selected=`$as_echo "$at_groups_selected" | sed 's/;.*//'`
	as_fn_append at_groups "$at_groups_selected$as_nl"
	;;
    --recheck)
	at_recheck=:
	;;

    *=*)
	at_envvar=`expr "x$at_option" : 'x\([^=]*\)='`
	# Reject names that are not valid shell variable names.
	case $at_envvar in
	  '' | [0-9]* | *[!_$as_cr_alnum]* )
	    as_fn_error $? "invalid variable name: \`$at_envvar'" ;;
	esac
	at_value=`$as_echo "$at_optarg" | sed "s/'/'\\\\\\\\''/g"`
	# Export now, but save eval for later and for debug scripts.
	export $at_envvar
	as_fn_append at_debug_args " $at_envvar='$at_value'"
	;;

     *) $as_echo "$as_me: invalid option: $at_option" >&2
	$as_echo "Try \`$0 --help' for more information." >&2
	exit 1
	;;
  esac
done

# Verify our last option didn't require an argument
if test -n "$at_prev"; then :
  as_fn_error $? "\`$at_prev' requires an argument"
fi

# The file containing the suite.
at_suite_log=$at_dir/$as_me.log

# Selected test groups.
if test -z "$at_groups$at_recheck"; then
  at_groups=$at_groups_all
else
  if test -n "$at_recheck" && test -r "$at_suite_log"; then
    at_oldfails=`sed -n '
      /^Failed tests:$/,/^Skipped tests:$/{
	s/^[ ]*\([1-9][0-9]*\):.*/\1/p
      }
      /^Unexpected passes:$/,/^## Detailed failed tests/{
	s/^[ ]*\([1-9][0-9]*\):.*/\1/p
      }
      /^## Detailed failed tests/q
      ' "$at_suite_log"`
    as_fn_append at_groups "$at_oldfails$as_nl"
  fi
  # Sort the tests, removing duplicates.
  at_groups=`$as_echo "$at_groups" | sort -nu | sed '/^$/d'`
fi

if test x"$at_color" = xalways \
   || { test x"$at_color" = xauto && test -t 1; }; then
  at_red=`printf '\033[0;31m'`
  at_grn=`printf '\033[0;32m'`
  at_lgn=`printf '\033[1;32m'`
  at_blu=`printf '\033[1;34m'`
  at_std=`printf '\033[m'`
else
  at_red= at_grn= at_lgn= at_blu= at_std=
fi

# Help message.
if $at_help_p; then
  cat <<_ATEOF || at_write_fail=1
Usage: $0 [OPTION]... [VARIABLE=VALUE]... [TESTS]

Run all the tests, or the selected TESTS, given by numeric ranges, and
save a detailed log file.  Upon failure, create debugging scripts.

Do not change environment variables directly.  Instead, set them via
command line arguments.  Set \`AUTOTEST_PATH' to select the executables
to exercise.  Each relative directory is expanded as build and source
directories relative to the top level of this distribution.
E.g., from within the build directory /tmp/foo-1.0, invoking this:

  $ $0 AUTOTEST_PATH=bin

is equivalent to the following, assuming the source directory is /src/foo-1.0:

  PATH=/tmp/foo-1.0/bin:/src/foo-1.0/bin:\$PATH $0
_ATEOF
cat <<_ATEOF || at_write_fail=1

Operation modes:
  -h, --help     print the help message, then exit
  -V, --version  print version number, then exit
  -c, --clean    remove all the files this test suite might create and exit
  -l, --list     describes all the tests, or the selected TESTS
_ATEOF
cat <<_ATEOF || at_write_fail=1

Execution tuning:
  -C, --directory=DIR
                 change to directory DIR before starting
      --color[=never|auto|always]
                 disable colored test results, or enable even without terminal
  -j, --jobs[=N]
                 Allow N jobs at once; infinite jobs with no arg (default 1)
  -k, --keywords=KEYWORDS
                 select the tests matching all the comma-separated KEYWORDS
                 multiple \`-k' accumulate; prefixed \`!' negates a KEYWORD
      --recheck  select all tests that failed or passed unexpectedly last time
  -e, --errexit  abort as soon as a test fails; implies --debug
  -v, --verbose  force more detailed output
                 default for debugging scripts
  -d, --debug    inhibit clean up and top-level logging
                 default for debugging scripts
  -x, --trace    enable tests shell tracing
_ATEOF
cat <<_ATEOF || at_write_fail=1

Report bugs to <chulbe2lsu@users.sourceforge.net>.
_ATEOF
  exit $at_write_fail
fi

# List of tests.
if $at_list_p; then
  cat <<_ATEOF || at_write_fail=1
MATIO 1.5.9 test suite: matio testsuite test groups:

 NUM: FILE-NAME:LINE     TEST-GROUP-NAME
      KEYWORDS

_ATEOF
  # Pass an empty line as separator between selected groups and help.
  $as_echo "$at_groups$as_nl$as_nl$at_help_all" |
    awk 'NF == 1 && FS != ";" {
	   selected[$ 1] = 1
	   next
	 }
	 /^$/ { FS = ";" }
	 NF > 0 {
	   if (selected[$ 1]) {
	     printf " %3d: %-18s %s\n", $ 1, $ 2, $ 3
	     if ($ 4) {
	       lmax = 79
	       indent = "     "
	       line = indent
	       len = length (line)
	       n = split ($ 4, a, " ")
	       for (i = 1; i <= n; i++) {
		 l = length (a[i]) + 1
		 if (i > 1 && len + l > lmax) {
		   print line
		   line = indent " " a[i]
		   len = length (line)
		 } else {
		   line = line " " a[i]
		   len += l
		 }
	       }
	       if (n)
		 print line
	     }
	   }
	 }' || at_write_fail=1
  exit $at_write_fail
fi
if $at_version_p; then
  $as_echo "$as_me (MATIO 1.5.9)" &&
  cat <<\_ATEOF || at_write_fail=1

Copyright (C) 2012 Free Software Foundation, Inc.
This test suite is free software; the Free Software Foundation gives
unlimited permission to copy, distribute and modify it.

Copyright (C) 2010-2016 Christopher C. Hulbert
_ATEOF
  exit $at_write_fail
fi

# Should we print banners?  Yes if more than one test is run.
case $at_groups in #(
  *$as_nl* )
      at_print_banners=: ;; #(
  * ) at_print_banners=false ;;
esac
# Text for banner N, set to a single space once printed.
# Banner 1. testsuite.at:98
# Category starts at test group 1.
at_banner_text_1="Read MAT version 4 (Little Endian)"
# Banner 2. testsuite.at:102
# Category starts at test group 11.
at_banner_text_2="Read MAT version 4 (Big Endian)"
# Banner 3. testsuite.at:106
# Category starts at test group 21.
at_banner_text_3="Read Uncompressed MAT version 5 (Little Endian)"
# Banner 4. testsuite.at:110
# Category starts at test group 153.
at_banner_text_4="Read Compressed MAT version 5 (Little Endian)"
# Banner 5. testsuite.at:114
# Category starts at test group 286.
at_banner_text_5="Read Uncompressed MAT version 5 (Big Endian)"
# Banner 6. testsuite.at:118
# Category starts at test group 418.
at_banner_text_6="Read Compressed MAT version 5 (Big Endian)"
# Banner 7. testsuite.at:122
# Category starts at test group 550.
at_banner_text_7="Read MAT version 7.3 (HDF5 Schema 1) (Little Endian)"
# Banner 8. testsuite.at:126
# Category starts at test group 685.
at_banner_text_8="Read MAT version 7.3 (HDF5 Schema 1) (Big Endian)"
# Banner 9. testsuite.at:130
# Category starts at test group 820.
at_banner_text_9="Write MAT version 4"
# Banner 10. testsuite.at:133
# Category starts at test group 836.
at_banner_text_10="Read/Write MAT version 4"
# Banner 11. testsuite.at:136
# Category starts at test group 839.
at_banner_text_11="Write Uncompressed MAT version 5"
# Banner 12. testsuite.at:139
# Category starts at test group 910.
at_banner_text_12="Read/Write Uncompressed MAT version 5"
# Banner 13. testsuite.at:142
# Category starts at test group 913.
at_banner_text_13="Write Compressed MAT version 5"
# Banner 14. testsuite.at:145
# Category starts at test group 984.
at_banner_text_14="Read/Write Compressed MAT version 5"
# Banner 15. testsuite.at:148
# Category starts at test group 989.
at_banner_text_15="Write MAT version 7.3"
# Banner 16. testsuite.at:151
# Category starts at test group 1060.
at_banner_text_16="Read/Write MAT version 7.3"
# Banner 17. testsuite.at:154
# Category starts at test group 1063.
at_banner_text_17="Write Compressed MAT version 7.3"
# Banner 18. testsuite.at:157
# Category starts at test group 1133.
at_banner_text_18="Read/Write Compressed MAT version 7.3"
# Banner 19. testsuite.at:160
# Category starts at test group 1136.
at_banner_text_19="Extended Sparse version 4"
# Banner 20. testsuite.at:163
# Category starts at test group 1146.
at_banner_text_20="Extended Sparse Uncompressed MAT version 5"
# Banner 21. testsuite.at:166
# Category starts at test group 1164.
at_banner_text_21="Extended Sparse Compressed MAT version 5"
# Banner 22. testsuite.at:169
# Category starts at test group 1182.
at_banner_text_22="Extended Sparse version 7.3"
# Banner 23. testsuite.at:172
# Category starts at test group 1200.
at_banner_text_23="Extended Sparse Compressed version 7.3"
# Banner 24. testsuite.at:175
# Category starts at test group 1218.
at_banner_text_24="API Tests"

# Take any -C into account.
if $at_change_dir ; then
  test x != "x$at_dir" && cd "$at_dir" \
    || as_fn_error $? "unable to change directory"
  at_dir=`pwd`
fi

# Load the config files for any default variable assignments.
for at_file in atconfig atlocal
do
  test -r $at_file || continue
  . ./$at_file || as_fn_error $? "invalid content: $at_file"
done

# Autoconf <=2.59b set at_top_builddir instead of at_top_build_prefix:
: "${at_top_build_prefix=$at_top_builddir}"

# Perform any assignments requested during argument parsing.
eval "$at_debug_args"

# atconfig delivers names relative to the directory the test suite is
# in, but the groups themselves are run in testsuite-dir/group-dir.
if test -n "$at_top_srcdir"; then
  builddir=../..
  for at_dir_var in srcdir top_srcdir top_build_prefix
  do
    eval at_val=\$at_$at_dir_var
    case $at_val in
      [\\/$]* | ?:[\\/]* ) at_prefix= ;;
      *) at_prefix=../../ ;;
    esac
    eval "$at_dir_var=\$at_prefix\$at_val"
  done
fi

## -------------------- ##
## Directory structure. ##
## -------------------- ##

# This is the set of directories and files used by this script
# (non-literals are capitalized):
#
# TESTSUITE         - the testsuite
# TESTSUITE.log     - summarizes the complete testsuite run
# TESTSUITE.dir/    - created during a run, remains after -d or failed test
# + at-groups/      - during a run: status of all groups in run
# | + NNN/          - during a run: meta-data about test group NNN
# | | + check-line  - location (source file and line) of current AT_CHECK
# | | + status      - exit status of current AT_CHECK
# | | + stdout      - stdout of current AT_CHECK
# | | + stder1      - stderr, including trace
# | | + stderr      - stderr, with trace filtered out
# | | + test-source - portion of testsuite that defines group
# | | + times       - timestamps for computing duration
# | | + pass        - created if group passed
# | | + xpass       - created if group xpassed
# | | + fail        - created if group failed
# | | + xfail       - created if group xfailed
# | | + skip        - created if group skipped
# + at-stop         - during a run: end the run if this file exists
# + at-source-lines - during a run: cache of TESTSUITE line numbers for extraction
# + 0..NNN/         - created for each group NNN, remains after -d or failed test
# | + TESTSUITE.log - summarizes the group results
# | + ...           - files created during the group

# The directory the whole suite works in.
# Should be absolute to let the user `cd' at will.
at_suite_dir=$at_dir/$as_me.dir
# The file containing the suite ($at_dir might have changed since earlier).
at_suite_log=$at_dir/$as_me.log
# The directory containing helper files per test group.
at_helper_dir=$at_suite_dir/at-groups
# Stop file: if it exists, do not start new jobs.
at_stop_file=$at_suite_dir/at-stop
# The fifo used for the job dispatcher.
at_job_fifo=$at_suite_dir/at-job-fifo

if $at_clean; then
  test -d "$at_suite_dir" &&
    find "$at_suite_dir" -type d ! -perm -700 -exec chmod u+rwx \{\} \;
  rm -f -r "$at_suite_dir" "$at_suite_log"
  exit $?
fi

# Don't take risks: use only absolute directories in PATH.
#
# For stand-alone test suites (ie. atconfig was not found),
# AUTOTEST_PATH is relative to `.'.
#
# For embedded test suites, AUTOTEST_PATH is relative to the top level
# of the package.  Then expand it into build/src parts, since users
# may create executables in both places.
AUTOTEST_PATH=`$as_echo "$AUTOTEST_PATH" | sed "s|:|$PATH_SEPARATOR|g"`
at_path=
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $AUTOTEST_PATH $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -n "$at_path" && as_fn_append at_path $PATH_SEPARATOR
case $as_dir in
  [\\/]* | ?:[\\/]* )
    as_fn_append at_path "$as_dir"
    ;;
  * )
    if test -z "$at_top_build_prefix"; then
      # Stand-alone test suite.
      as_fn_append at_path "$as_dir"
    else
      # Embedded test suite.
      as_fn_append at_path "$at_top_build_prefix$as_dir$PATH_SEPARATOR"
      as_fn_append at_path "$at_top_srcdir/$as_dir"
    fi
    ;;
esac
  done
IFS=$as_save_IFS


# Now build and simplify PATH.
#
# There might be directories that don't exist, but don't redirect
# builtins' (eg., cd) stderr directly: Ultrix's sh hates that.
at_new_path=
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $at_path
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -d "$as_dir" || continue
case $as_dir in
  [\\/]* | ?:[\\/]* ) ;;
  * ) as_dir=`(cd "$as_dir" && pwd) 2>/dev/null` ;;
esac
case $PATH_SEPARATOR$at_new_path$PATH_SEPARATOR in
  *$PATH_SEPARATOR$as_dir$PATH_SEPARATOR*) ;;
  $PATH_SEPARATOR$PATH_SEPARATOR) at_new_path=$as_dir ;;
  *) as_fn_append at_new_path "$PATH_SEPARATOR$as_dir" ;;
esac
  done
IFS=$as_save_IFS

PATH=$at_new_path
export PATH

# Setting up the FDs.



# 5 is the log file.  Not to be overwritten if `-d'.
if $at_debug_p; then
  at_suite_log=/dev/null
else
  : >"$at_suite_log"
fi
exec 5>>"$at_suite_log"

# Banners and logs.
$as_echo "## ---------------------------------------- ##
## MATIO 1.5.9 test suite: matio testsuite. ##
## ---------------------------------------- ##"
{
  $as_echo "## ---------------------------------------- ##
## MATIO 1.5.9 test suite: matio testsuite. ##
## ---------------------------------------- ##"
  echo

  $as_echo "$as_me: command line was:"
  $as_echo "  \$ $0 $at_cli_args"
  echo

  # If ChangeLog exists, list a few lines in case it might help determining
  # the exact version.
  if test -n "$at_top_srcdir" && test -f "$at_top_srcdir/ChangeLog"; then
    $as_echo "## ---------- ##
## ChangeLog. ##
## ---------- ##"
    echo
    sed 's/^/| /;10q' "$at_top_srcdir/ChangeLog"
    echo
  fi

  {
cat <<_ASUNAME
## --------- ##
## Platform. ##
## --------- ##

hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
uname -m = `(uname -m) 2>/dev/null || echo unknown`
uname -r = `(uname -r) 2>/dev/null || echo unknown`
uname -s = `(uname -s) 2>/dev/null || echo unknown`
uname -v = `(uname -v) 2>/dev/null || echo unknown`

/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`

/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
/usr/bin/hostinfo      = `(/usr/bin/hostinfo) 2>/dev/null      || echo unknown`
/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`

_ASUNAME

as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    $as_echo "PATH: $as_dir"
  done
IFS=$as_save_IFS

}
  echo

  # Contents of the config files.
  for at_file in atconfig atlocal
  do
    test -r $at_file || continue
    $as_echo "$as_me: $at_file:"
    sed 's/^/| /' $at_file
    echo
  done
} >&5


## ------------------------- ##
## Autotest shell functions. ##
## ------------------------- ##

# at_fn_banner NUMBER
# -------------------
# Output banner NUMBER, provided the testsuite is running multiple groups and
# this particular banner has not yet been printed.
at_fn_banner ()
{
  $at_print_banners || return 0
  eval at_banner_text=\$at_banner_text_$1
  test "x$at_banner_text" = "x " && return 0
  eval "at_banner_text_$1=\" \""
  if test -z "$at_banner_text"; then
    $at_first || echo
  else
    $as_echo "$as_nl$at_banner_text$as_nl"
  fi
} # at_fn_banner

# at_fn_check_prepare_notrace REASON LINE
# ---------------------------------------
# Perform AT_CHECK preparations for the command at LINE for an untraceable
# command; REASON is the reason for disabling tracing.
at_fn_check_prepare_notrace ()
{
  $at_trace_echo "Not enabling shell tracing (command contains $1)"
  $as_echo "$2" >"$at_check_line_file"
  at_check_trace=: at_check_filter=:
  : >"$at_stdout"; : >"$at_stderr"
}

# at_fn_check_prepare_trace LINE
# ------------------------------
# Perform AT_CHECK preparations for the command at LINE for a traceable
# command.
at_fn_check_prepare_trace ()
{
  $as_echo "$1" >"$at_check_line_file"
  at_check_trace=$at_traceon at_check_filter=$at_check_filter_trace
  : >"$at_stdout"; : >"$at_stderr"
}

# at_fn_check_prepare_dynamic COMMAND LINE
# ----------------------------------------
# Decide if COMMAND at LINE is traceable at runtime, and call the appropriate
# preparation function.
at_fn_check_prepare_dynamic ()
{
  case $1 in
    *$as_nl*)
      at_fn_check_prepare_notrace 'an embedded newline' "$2" ;;
    *)
      at_fn_check_prepare_trace "$2" ;;
  esac
}

# at_fn_filter_trace
# ------------------
# Remove the lines in the file "$at_stderr" generated by "set -x" and print
# them to stderr.
at_fn_filter_trace ()
{
  mv "$at_stderr" "$at_stder1"
  grep '^ *+' "$at_stder1" >&2
  grep -v '^ *+' "$at_stder1" >"$at_stderr"
}

# at_fn_log_failure FILE-LIST
# ---------------------------
# Copy the files in the list on stdout with a "> " prefix, and exit the shell
# with a failure exit code.
at_fn_log_failure ()
{
  for file
    do $as_echo "$file:"; sed 's/^/> /' "$file"; done
  echo 1 > "$at_status_file"
  exit 1
}

# at_fn_check_skip EXIT-CODE LINE
# -------------------------------
# Check whether EXIT-CODE is a special exit code (77 or 99), and if so exit
# the test group subshell with that same exit code. Use LINE in any report
# about test failure.
at_fn_check_skip ()
{
  case $1 in
    99) echo 99 > "$at_status_file"; at_failed=:
	$as_echo "$2: hard failure"; exit 99;;
    77) echo 77 > "$at_status_file"; exit 77;;
  esac
}

# at_fn_check_status EXPECTED EXIT-CODE LINE
# ------------------------------------------
# Check whether EXIT-CODE is the EXPECTED exit code, and if so do nothing.
# Otherwise, if it is 77 or 99, exit the test group subshell with that same
# exit code; if it is anything else print an error message referring to LINE,
# and fail the test.
at_fn_check_status ()
{
  case $2 in
    $1 ) ;;
    77) echo 77 > "$at_status_file"; exit 77;;
    99) echo 99 > "$at_status_file"; at_failed=:
	$as_echo "$3: hard failure"; exit 99;;
    *) $as_echo "$3: exit code was $2, expected $1"
      at_failed=:;;
  esac
}

# at_fn_diff_devnull FILE
# -----------------------
# Emit a diff between /dev/null and FILE. Uses "test -s" to avoid useless diff
# invocations.
at_fn_diff_devnull ()
{
  test -s "$1" || return 0
  $at_diff "$at_devnull" "$1"
}

# at_fn_test NUMBER
# -----------------
# Parse out test NUMBER from the tail of this file.
at_fn_test ()
{
  eval at_sed=\$at_sed$1
  sed "$at_sed" "$at_myself" > "$at_test_source"
}

# at_fn_create_debugging_script
# -----------------------------
# Create the debugging script $at_group_dir/run which will reproduce the
# current test group.
at_fn_create_debugging_script ()
{
  {
    echo "#! /bin/sh" &&
    echo 'test "${ZSH_VERSION+set}" = set && alias -g '\''${1+"$@"}'\''='\''"$@"'\''' &&
    $as_echo "cd '$at_dir'" &&
    $as_echo "exec \${CONFIG_SHELL-$SHELL} \"$at_myself\" -v -d $at_debug_args $at_group \${1+\"\$@\"}" &&
    echo 'exit 1'
  } >"$at_group_dir/run" &&
  chmod +x "$at_group_dir/run"
}

## -------------------------------- ##
## End of autotest shell functions. ##
## -------------------------------- ##
{
  $as_echo "## ---------------- ##
## Tested programs. ##
## ---------------- ##"
  echo
} >&5

# Report what programs are being tested.
for at_program in : $at_tested
do
  test "$at_program" = : && continue
  case $at_program in
    [\\/]* | ?:[\\/]* ) $at_program_=$at_program ;;
    * )
    as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -f "$as_dir/$at_program" && break
  done
IFS=$as_save_IFS

    at_program_=$as_dir/$at_program ;;
  esac
  if test -f "$at_program_"; then
    {
      $as_echo "$at_srcdir/testsuite.at:27: $at_program_ --version"
      "$at_program_" --version </dev/null
      echo
    } >&5 2>&1
  else
    as_fn_error $? "cannot find $at_program" "$LINENO" 5
  fi
done

{
  $as_echo "## ------------------ ##
## Running the tests. ##
## ------------------ ##"
} >&5

at_start_date=`date`
at_start_time=`date +%s 2>/dev/null`
$as_echo "$as_me: starting at: $at_start_date" >&5


ovs_wait () {
    # First try a quick sleep, so that the test completes very quickly
    # in the normal case.  POSIX doesn't require fractional times to
    # work, so this might not work.
    sleep 0.1
    ovs_wait_cond && exit 0
    # Then wait up to 10 seconds.
    for d in 0 1 2 3 4 5 6 7 8 9; do
        sleep 1
        ovs_wait_cond && exit 0
    done
    exit 1
}

# Prints the integers from $1 to $2, increasing by $3 (default 1) on stdout.
seq () {
    while test $1 -le $2; do
        echo $1
        set `expr $1 + ${3-1}` $2 $3
    done
}

if test "$IS_WIN32" = "yes"; then
    pwd () {
        command pwd -W "$@"
    }

    diff () {
        command diff --strip-trailing-cr "$@"
    }

    kill () {
        case "$1" in
            -0)
                shift
                for i in $*; do
                    # tasklist will always have return code 0.
                    # If pid does exist, there will be a line with the pid.
                    if tasklist //fi "PID eq $i" | grep $i; then
                        :
                    else
                        return 1
                    fi
                done
                return 0
                ;;
            -[1-9]*)
                shift
                for i in $*; do
                    taskkill //F //PID $i
                done
                ;;
            [1-9][1-9]*)
                for i in $*; do
                    taskkill //F //PID $i
                done
                ;;
        esac
    }
fi


# Create the master directory if it doesn't already exist.
as_dir="$at_suite_dir"; as_fn_mkdir_p ||
  as_fn_error $? "cannot create \`$at_suite_dir'" "$LINENO" 5

# Can we diff with `/dev/null'?  DU 5.0 refuses.
if diff /dev/null /dev/null >/dev/null 2>&1; then
  at_devnull=/dev/null
else
  at_devnull=$at_suite_dir/devnull
  >"$at_devnull"
fi

# Use `diff -u' when possible.
if at_diff=`diff -u "$at_devnull" "$at_devnull" 2>&1` && test -z "$at_diff"
then
  at_diff='diff -u'
else
  at_diff=diff
fi

# Get the last needed group.
for at_group in : $at_groups; do :; done

# Extract the start and end lines of each test group at the tail
# of this file
awk '
BEGIN { FS="" }
/^#AT_START_/ {
  start = NR
}
/^#AT_STOP_/ {
  test = substr ($ 0, 10)
  print "at_sed" test "=\"1," start "d;" (NR-1) "q\""
  if (test == "'"$at_group"'") exit
}' "$at_myself" > "$at_suite_dir/at-source-lines" &&
. "$at_suite_dir/at-source-lines" ||
  as_fn_error $? "cannot create test line number cache" "$LINENO" 5
rm -f "$at_suite_dir/at-source-lines"

# Set number of jobs for `-j'; avoid more jobs than test groups.
set X $at_groups; shift; at_max_jobs=$#
if test $at_max_jobs -eq 0; then
  at_jobs=1
fi
if test $at_jobs -ne 1 &&
   { test $at_jobs -eq 0 || test $at_jobs -gt $at_max_jobs; }; then
  at_jobs=$at_max_jobs
fi

# If parallel mode, don't output banners, don't split summary lines.
if test $at_jobs -ne 1; then
  at_print_banners=false
  at_quiet=:
fi

# Set up helper dirs.
rm -rf "$at_helper_dir" &&
mkdir "$at_helper_dir" &&
cd "$at_helper_dir" &&
{ test -z "$at_groups" || mkdir $at_groups; } ||
as_fn_error $? "testsuite directory setup failed" "$LINENO" 5

# Functions for running a test group.  We leave the actual
# test group execution outside of a shell function in order
# to avoid hitting zsh 4.x exit status bugs.

# at_fn_group_prepare
# -------------------
# Prepare for running a test group.
at_fn_group_prepare ()
{
  # The directory for additional per-group helper files.
  at_job_dir=$at_helper_dir/$at_group
  # The file containing the location of the last AT_CHECK.
  at_check_line_file=$at_job_dir/check-line
  # The file containing the exit status of the last command.
  at_status_file=$at_job_dir/status
  # The files containing the output of the tested commands.
  at_stdout=$at_job_dir/stdout
  at_stder1=$at_job_dir/stder1
  at_stderr=$at_job_dir/stderr
  # The file containing the code for a test group.
  at_test_source=$at_job_dir/test-source
  # The file containing dates.
  at_times_file=$at_job_dir/times

  # Be sure to come back to the top test directory.
  cd "$at_suite_dir"

  # Clearly separate the test groups when verbose.
  $at_first || $at_verbose echo

  at_group_normalized=$at_group

  eval 'while :; do
    case $at_group_normalized in #(
    '"$at_format"'*) break;;
    esac
    at_group_normalized=0$at_group_normalized
  done'


  # Create a fresh directory for the next test group, and enter.
  # If one already exists, the user may have invoked ./run from
  # within that directory; we remove the contents, but not the
  # directory itself, so that we aren't pulling the rug out from
  # under the shell's notion of the current directory.
  at_group_dir=$at_suite_dir/$at_group_normalized
  at_group_log=$at_group_dir/$as_me.log
  if test -d "$at_group_dir"; then
  find "$at_group_dir" -type d ! -perm -700 -exec chmod u+rwx {} \;
  rm -fr "$at_group_dir"/* "$at_group_dir"/.[!.] "$at_group_dir"/.??*
fi ||
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: test directory for $at_group_normalized could not be cleaned" >&5
$as_echo "$as_me: WARNING: test directory for $at_group_normalized could not be cleaned" >&2;}
  # Be tolerant if the above `rm' was not able to remove the directory.
  as_dir="$at_group_dir"; as_fn_mkdir_p

  echo 0 > "$at_status_file"

  # In verbose mode, append to the log file *and* show on
  # the standard output; in quiet mode only write to the log.
  if test -z "$at_verbose"; then
    at_tee_pipe='tee -a "$at_group_log"'
  else
    at_tee_pipe='cat >> "$at_group_log"'
  fi
}

# at_fn_group_banner ORDINAL LINE DESC PAD [BANNER]
# -------------------------------------------------
# Declare the test group ORDINAL, located at LINE with group description DESC,
# and residing under BANNER. Use PAD to align the status column.
at_fn_group_banner ()
{
  at_setup_line="$2"
  test -n "$5" && at_fn_banner $5
  at_desc="$3"
  case $1 in
    [0-9])      at_desc_line="  $1: ";;
    [0-9][0-9]) at_desc_line=" $1: " ;;
    *)          at_desc_line="$1: "  ;;
  esac
  as_fn_append at_desc_line "$3$4"
  $at_quiet $as_echo_n "$at_desc_line"
  echo "#                             -*- compilation -*-" >> "$at_group_log"
}

# at_fn_group_postprocess
# -----------------------
# Perform cleanup after running a test group.
at_fn_group_postprocess ()
{
  # Be sure to come back to the suite directory, in particular
  # since below we might `rm' the group directory we are in currently.
  cd "$at_suite_dir"

  if test ! -f "$at_check_line_file"; then
    sed "s/^ */$as_me: WARNING: /" <<_ATEOF
      A failure happened in a test group before any test could be
      run. This means that test suite is improperly designed.  Please
      report this failure to <chulbe2lsu@users.sourceforge.net>.
_ATEOF
    $as_echo "$at_setup_line" >"$at_check_line_file"
    at_status=99
  fi
  $at_verbose $as_echo_n "$at_group. $at_setup_line: "
  $as_echo_n "$at_group. $at_setup_line: " >> "$at_group_log"
  case $at_xfail:$at_status in
    yes:0)
	at_msg="UNEXPECTED PASS"
	at_res=xpass
	at_errexit=$at_errexit_p
	at_color=$at_red
	;;
    no:0)
	at_msg="ok"
	at_res=pass
	at_errexit=false
	at_color=$at_grn
	;;
    *:77)
	at_msg='skipped ('`cat "$at_check_line_file"`')'
	at_res=skip
	at_errexit=false
	at_color=$at_blu
	;;
    no:* | *:99)
	at_msg='FAILED ('`cat "$at_check_line_file"`')'
	at_res=fail
	at_errexit=$at_errexit_p
	at_color=$at_red
	;;
    yes:*)
	at_msg='expected failure ('`cat "$at_check_line_file"`')'
	at_res=xfail
	at_errexit=false
	at_color=$at_lgn
	;;
  esac
  echo "$at_res" > "$at_job_dir/$at_res"
  # In parallel mode, output the summary line only afterwards.
  if test $at_jobs -ne 1 && test -n "$at_verbose"; then
    $as_echo "$at_desc_line $at_color$at_msg$at_std"
  else
    # Make sure there is a separator even with long titles.
    $as_echo " $at_color$at_msg$at_std"
  fi
  at_log_msg="$at_group. $at_desc ($at_setup_line): $at_msg"
  case $at_status in
    0|77)
      # $at_times_file is only available if the group succeeded.
      # We're not including the group log, so the success message
      # is written in the global log separately.  But we also
      # write to the group log in case they're using -d.
      if test -f "$at_times_file"; then
	at_log_msg="$at_log_msg     ("`sed 1d "$at_times_file"`')'
	rm -f "$at_times_file"
      fi
      $as_echo "$at_log_msg" >> "$at_group_log"
      $as_echo "$at_log_msg" >&5

      # Cleanup the group directory, unless the user wants the files
      # or the success was unexpected.
      if $at_debug_p || test $at_res = xpass; then
	at_fn_create_debugging_script
	if test $at_res = xpass && $at_errexit; then
	  echo stop > "$at_stop_file"
	fi
      else
	if test -d "$at_group_dir"; then
	  find "$at_group_dir" -type d ! -perm -700 -exec chmod u+rwx \{\} \;
	  rm -fr "$at_group_dir"
	fi
	rm -f "$at_test_source"
      fi
      ;;
    *)
      # Upon failure, include the log into the testsuite's global
      # log.  The failure message is written in the group log.  It
      # is later included in the global log.
      $as_echo "$at_log_msg" >> "$at_group_log"

      # Upon failure, keep the group directory for autopsy, and create
      # the debugging script.  With -e, do not start any further tests.
      at_fn_create_debugging_script
      if $at_errexit; then
	echo stop > "$at_stop_file"
      fi
      ;;
  esac
}


## ------------ ##
## Driver loop. ##
## ------------ ##


if (set -m && set +m && set +b) >/dev/null 2>&1; then
  set +b
  at_job_control_on='set -m' at_job_control_off='set +m' at_job_group=-
else
  at_job_control_on=: at_job_control_off=: at_job_group=
fi

for at_signal in 1 2 15; do
  trap 'set +x; set +e
	$at_job_control_off
	at_signal='"$at_signal"'
	echo stop > "$at_stop_file"
	trap "" $at_signal
	at_pgids=
	for at_pgid in `jobs -p 2>/dev/null`; do
	  at_pgids="$at_pgids $at_job_group$at_pgid"
	done
	test -z "$at_pgids" || kill -$at_signal $at_pgids 2>/dev/null
	wait
	if test "$at_jobs" -eq 1 || test -z "$at_verbose"; then
	  echo >&2
	fi
	at_signame=`kill -l $at_signal 2>&1 || echo $at_signal`
	set x $at_signame
	test 1 -gt 2 && at_signame=$at_signal
	{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: caught signal $at_signame, bailing out" >&5
$as_echo "$as_me: WARNING: caught signal $at_signame, bailing out" >&2;}
	as_fn_arith 128 + $at_signal && exit_status=$as_val
	as_fn_exit $exit_status' $at_signal
done

rm -f "$at_stop_file"
at_first=:

if test $at_jobs -ne 1 &&
     rm -f "$at_job_fifo" &&
     test -n "$at_job_group" &&
     ( mkfifo "$at_job_fifo" && trap 'exit 1' PIPE STOP TSTP ) 2>/dev/null
then
  # FIFO job dispatcher.

  trap 'at_pids=
	for at_pid in `jobs -p`; do
	  at_pids="$at_pids $at_job_group$at_pid"
	done
	if test -n "$at_pids"; then
	  at_sig=TSTP
	  test "${TMOUT+set}" = set && at_sig=STOP
	  kill -$at_sig $at_pids 2>/dev/null
	fi
	kill -STOP $$
	test -z "$at_pids" || kill -CONT $at_pids 2>/dev/null' TSTP

  echo
  # Turn jobs into a list of numbers, starting from 1.
  at_joblist=`$as_echo "$at_groups" | sed -n 1,${at_jobs}p`

  set X $at_joblist
  shift
  for at_group in $at_groups; do
    $at_job_control_on 2>/dev/null
    (
      # Start one test group.
      $at_job_control_off
      if $at_first; then
	exec 7>"$at_job_fifo"
      else
	exec 6<&-
      fi
      trap 'set +x; set +e
	    trap "" PIPE
	    echo stop > "$at_stop_file"
	    echo >&7
	    as_fn_exit 141' PIPE
      at_fn_group_prepare
      if cd "$at_group_dir" &&
	 at_fn_test $at_group &&
	 . "$at_test_source"
      then :; else
	{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: unable to parse test group: $at_group" >&5
$as_echo "$as_me: WARNING: unable to parse test group: $at_group" >&2;}
	at_failed=:
      fi
      at_fn_group_postprocess
      echo >&7
    ) &
    $at_job_control_off
    if $at_first; then
      at_first=false
      exec 6<"$at_job_fifo" 7>"$at_job_fifo"
    fi
    shift # Consume one token.
    if test $# -gt 0; then :; else
      read at_token <&6 || break
      set x $*
    fi
    test -f "$at_stop_file" && break
  done
  exec 7>&-
  # Read back the remaining ($at_jobs - 1) tokens.
  set X $at_joblist
  shift
  if test $# -gt 0; then
    shift
    for at_job
    do
      read at_token
    done <&6
  fi
  exec 6<&-
  wait
else
  # Run serially, avoid forks and other potential surprises.
  for at_group in $at_groups; do
    at_fn_group_prepare
    if cd "$at_group_dir" &&
       at_fn_test $at_group &&
       . "$at_test_source"; then :; else
      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: unable to parse test group: $at_group" >&5
$as_echo "$as_me: WARNING: unable to parse test group: $at_group" >&2;}
      at_failed=:
    fi
    at_fn_group_postprocess
    test -f "$at_stop_file" && break
    at_first=false
  done
fi

# Wrap up the test suite with summary statistics.
cd "$at_helper_dir"

# Use ?..???? when the list must remain sorted, the faster * otherwise.
at_pass_list=`for f in */pass; do echo $f; done | sed '/\*/d; s,/pass,,'`
at_skip_list=`for f in */skip; do echo $f; done | sed '/\*/d; s,/skip,,'`
at_xfail_list=`for f in */xfail; do echo $f; done | sed '/\*/d; s,/xfail,,'`
at_xpass_list=`for f in ?/xpass ??/xpass ???/xpass ????/xpass; do
		 echo $f; done | sed '/?/d; s,/xpass,,'`
at_fail_list=`for f in ?/fail ??/fail ???/fail ????/fail; do
		echo $f; done | sed '/?/d; s,/fail,,'`

set X $at_pass_list $at_xpass_list $at_xfail_list $at_fail_list $at_skip_list
shift; at_group_count=$#
set X $at_xpass_list; shift; at_xpass_count=$#; at_xpass_list=$*
set X $at_xfail_list; shift; at_xfail_count=$#
set X $at_fail_list; shift; at_fail_count=$#; at_fail_list=$*
set X $at_skip_list; shift; at_skip_count=$#

as_fn_arith $at_group_count - $at_skip_count && at_run_count=$as_val
as_fn_arith $at_xpass_count + $at_fail_count && at_unexpected_count=$as_val
as_fn_arith $at_xfail_count + $at_fail_count && at_total_fail_count=$as_val

# Back to the top directory.
cd "$at_dir"
rm -rf "$at_helper_dir"

# Compute the duration of the suite.
at_stop_date=`date`
at_stop_time=`date +%s 2>/dev/null`
$as_echo "$as_me: ending at: $at_stop_date" >&5
case $at_start_time,$at_stop_time in
  [0-9]*,[0-9]*)
    as_fn_arith $at_stop_time - $at_start_time && at_duration_s=$as_val
    as_fn_arith $at_duration_s / 60 && at_duration_m=$as_val
    as_fn_arith $at_duration_m / 60 && at_duration_h=$as_val
    as_fn_arith $at_duration_s % 60 && at_duration_s=$as_val
    as_fn_arith $at_duration_m % 60 && at_duration_m=$as_val
    at_duration="${at_duration_h}h ${at_duration_m}m ${at_duration_s}s"
    $as_echo "$as_me: test suite duration: $at_duration" >&5
    ;;
esac

echo
$as_echo "## ------------- ##
## Test results. ##
## ------------- ##"
echo
{
  echo
  $as_echo "## ------------- ##
## Test results. ##
## ------------- ##"
  echo
} >&5

if test $at_run_count = 1; then
  at_result="1 test"
  at_were=was
else
  at_result="$at_run_count tests"
  at_were=were
fi
if $at_errexit_p && test $at_unexpected_count != 0; then
  if test $at_xpass_count = 1; then
    at_result="$at_result $at_were run, one passed"
  else
    at_result="$at_result $at_were run, one failed"
  fi
  at_result="$at_result unexpectedly and inhibited subsequent tests."
  at_color=$at_red
else
  # Don't you just love exponential explosion of the number of cases?
  at_color=$at_red
  case $at_xpass_count:$at_fail_count:$at_xfail_count in
    # So far, so good.
    0:0:0) at_result="$at_result $at_were successful." at_color=$at_grn ;;
    0:0:*) at_result="$at_result behaved as expected." at_color=$at_lgn ;;

    # Some unexpected failures
    0:*:0) at_result="$at_result $at_were run,
$at_fail_count failed unexpectedly." ;;

    # Some failures, both expected and unexpected
    0:*:1) at_result="$at_result $at_were run,
$at_total_fail_count failed ($at_xfail_count expected failure)." ;;
    0:*:*) at_result="$at_result $at_were run,
$at_total_fail_count failed ($at_xfail_count expected failures)." ;;

    # No unexpected failures, but some xpasses
    *:0:*) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly." ;;

    # No expected failures, but failures and xpasses
    *:1:0) at_result="$at_result $at_were run,
$at_unexpected_count did not behave as expected ($at_fail_count unexpected failure)." ;;
    *:*:0) at_result="$at_result $at_were run,
$at_unexpected_count did not behave as expected ($at_fail_count unexpected failures)." ;;

    # All of them.
    *:*:1) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly,
$at_total_fail_count failed ($at_xfail_count expected failure)." ;;
    *:*:*) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly,
$at_total_fail_count failed ($at_xfail_count expected failures)." ;;
  esac

  if test $at_skip_count = 0 && test $at_run_count -gt 1; then
    at_result="All $at_result"
  fi
fi

# Now put skips in the mix.
case $at_skip_count in
  0) ;;
  1) at_result="$at_result
1 test was skipped." ;;
  *) at_result="$at_result
$at_skip_count tests were skipped." ;;
esac

if test $at_unexpected_count = 0; then
  echo "$at_color$at_result$at_std"
  echo "$at_result" >&5
else
  echo "${at_color}ERROR: $at_result$at_std" >&2
  echo "ERROR: $at_result" >&5
  {
    echo
    $as_echo "## ------------------------ ##
## Summary of the failures. ##
## ------------------------ ##"

    # Summary of failed and skipped tests.
    if test $at_fail_count != 0; then
      echo "Failed tests:"
      $SHELL "$at_myself" $at_fail_list --list
      echo
    fi
    if test $at_skip_count != 0; then
      echo "Skipped tests:"
      $SHELL "$at_myself" $at_skip_list --list
      echo
    fi
    if test $at_xpass_count != 0; then
      echo "Unexpected passes:"
      $SHELL "$at_myself" $at_xpass_list --list
      echo
    fi
    if test $at_fail_count != 0; then
      $as_echo "## ---------------------- ##
## Detailed failed tests. ##
## ---------------------- ##"
      echo
      for at_group in $at_fail_list
      do
	at_group_normalized=$at_group

  eval 'while :; do
    case $at_group_normalized in #(
    '"$at_format"'*) break;;
    esac
    at_group_normalized=0$at_group_normalized
  done'

	cat "$at_suite_dir/$at_group_normalized/$as_me.log"
	echo
      done
      echo
    fi
    if test -n "$at_top_srcdir"; then
      sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## ${at_top_build_prefix}config.log ##
_ASBOX
      sed 's/^/| /' ${at_top_build_prefix}config.log
      echo
    fi
  } >&5

  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## $as_me.log was created. ##
_ASBOX

  echo
  if $at_debug_p; then
    at_msg='per-test log files'
  else
    at_msg="\`${at_testdir+${at_testdir}/}$as_me.log'"
  fi
  $as_echo "Please send $at_msg and all information you think might help:

   To: <chulbe2lsu@users.sourceforge.net>
   Subject: [MATIO 1.5.9] $as_me: $at_fail_list${at_fail_list:+ failed${at_xpass_list:+, }}$at_xpass_list${at_xpass_list:+ passed unexpectedly}

You may investigate any problem if you feel able to do so, in which
case the test suite provides a good starting point.  Its output may
be found below \`${at_testdir+${at_testdir}/}$as_me.dir'.
"
  exit 1
fi

exit 0

## ------------- ##
## Actual tests. ##
## ------------- ##
#AT_START_1
at_fn_group_banner 1 'mat4_read_le.at:29' \
  "Read 2d double array" "                           " 1
at_xfail=no
(
  $as_echo "1. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat4_read_le.at:31: cp \$srcdir/results/read-var1.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_v4_le.mat var1"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_read_le.at:31"
( $at_check_trace; cp $srcdir/results/read-var1.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_v4_le.mat var1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_read_le.at:31"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_read_le.at:33: cp \$srcdir/results/dump-var1.out expout
         \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_v4_le.mat var1"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_read_le.at:33"
( $at_check_trace; cp $srcdir/results/dump-var1.out expout
         $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_v4_le.mat var1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_read_le.at:33"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1
#AT_START_2
at_fn_group_banner 2 'mat4_read_le.at:37' \
  "Read 2d complex double array" "                   " 1
at_xfail=no
(
  $as_echo "2. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat4_read_le.at:39: cp \$srcdir/results/read-var11.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_v4_le.mat var11"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_read_le.at:39"
( $at_check_trace; cp $srcdir/results/read-var11.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_v4_le.mat var11
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_read_le.at:39"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_read_le.at:41: cp \$srcdir/results/dump-var11.out expout
         \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_v4_le.mat var11"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_read_le.at:41"
( $at_check_trace; cp $srcdir/results/dump-var11.out expout
         $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_v4_le.mat var11
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_read_le.at:41"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_2
#AT_START_3
at_fn_group_banner 3 'mat4_read_le.at:45' \
  "Read sparse double array" "                       " 1
at_xfail=no
(
  $as_echo "3. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat4_read_le.at:46: cp \$srcdir/results/read-var21.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_v4_le.mat var21"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_read_le.at:46"
( $at_check_trace; cp $srcdir/results/read-var21.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_v4_le.mat var21
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_read_le.at:46"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_3
#AT_START_4
at_fn_group_banner 4 'mat4_read_le.at:50' \
  "Read sparse complex double array" "               " 1
at_xfail=no
(
  $as_echo "4. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat4_read_le.at:51: cp \$srcdir/results/read-var22.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_v4_le.mat var22"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_read_le.at:51"
( $at_check_trace; cp $srcdir/results/read-var22.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_v4_le.mat var22
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_read_le.at:51"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_4
#AT_START_5
at_fn_group_banner 5 'mat4_read_le.at:55' \
  "Read 2D character array" "                        " 1
at_xfail=no
(
  $as_echo "5. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat4_read_le.at:57: cp \$srcdir/results/read-var24.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_v4_le.mat var24"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_read_le.at:57"
( $at_check_trace; cp $srcdir/results/read-var24.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_v4_le.mat var24
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_read_le.at:57"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_5
#AT_START_6
at_fn_group_banner 6 'mat4_read_le.at:61' \
  "Read small v4 file" "                             " 1
at_xfail=no
(
  $as_echo "6. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat4_read_le.at:63: cp \$srcdir/results/read-x.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/small_v4_le.mat x"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_read_le.at:63"
( $at_check_trace; cp $srcdir/results/read-x.out expout
         $builddir/test_mat readvar $srcdir/datasets/small_v4_le.mat x
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_read_le.at:63"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_6
#AT_START_7
at_fn_group_banner 7 'mat4_readslab_le.at:29' \
  "Read linear slab of double array" "               " 1
at_xfail=no
(
  $as_echo "7. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat4_readslab_le.at:31: cp \$srcdir/results/dump-var1-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_v4_le.mat var1\\(2:3:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_readslab_le.at:31"
( $at_check_trace; cp $srcdir/results/dump-var1-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_v4_le.mat var1\(2:3:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_readslab_le.at:31"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_7
#AT_START_8
at_fn_group_banner 8 'mat4_readslab_le.at:35' \
  "Read linear slab of complex double array" "       " 1
at_xfail=no
(
  $as_echo "8. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat4_readslab_le.at:37: cp \$srcdir/results/dump-var11-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_v4_le.mat var11\\(2:3:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_readslab_le.at:37"
( $at_check_trace; cp $srcdir/results/dump-var11-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_v4_le.mat var11\(2:3:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_readslab_le.at:37"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_8
#AT_START_9
at_fn_group_banner 9 'mat4_readslab_le.at:41' \
  "Read slab of double array" "                      " 1
at_xfail=no
(
  $as_echo "9. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat4_readslab_le.at:43: cp \$srcdir/results/dump-var1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_v4_le.mat var1\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_readslab_le.at:43"
( $at_check_trace; cp $srcdir/results/dump-var1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_v4_le.mat var1\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_readslab_le.at:43"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_9
#AT_START_10
at_fn_group_banner 10 'mat4_readslab_le.at:47' \
  "Read slab of complex double array" "              " 1
at_xfail=no
(
  $as_echo "10. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat4_readslab_le.at:49: cp \$srcdir/results/dump-var11.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_v4_le.mat var11\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_readslab_le.at:49"
( $at_check_trace; cp $srcdir/results/dump-var11.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_v4_le.mat var11\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_readslab_le.at:49"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_10
#AT_START_11
at_fn_group_banner 11 'mat4_read_be.at:29' \
  "Read 2d double array" "                           " 2
at_xfail=no
(
  $as_echo "11. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat4_read_be.at:31: cp \$srcdir/results/read-var1.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_v4_be.mat var1"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_read_be.at:31"
( $at_check_trace; cp $srcdir/results/read-var1.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_v4_be.mat var1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_read_be.at:31"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_read_be.at:33: cp \$srcdir/results/dump-var1.out expout
         \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_v4_be.mat var1"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_read_be.at:33"
( $at_check_trace; cp $srcdir/results/dump-var1.out expout
         $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_v4_be.mat var1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_read_be.at:33"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_11
#AT_START_12
at_fn_group_banner 12 'mat4_read_be.at:37' \
  "Read 2d complex double array" "                   " 2
at_xfail=no
(
  $as_echo "12. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat4_read_be.at:39: cp \$srcdir/results/read-var11.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_v4_be.mat var11"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_read_be.at:39"
( $at_check_trace; cp $srcdir/results/read-var11.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_v4_be.mat var11
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_read_be.at:39"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_read_be.at:41: cp \$srcdir/results/dump-var11.out expout
         \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_v4_be.mat var11"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_read_be.at:41"
( $at_check_trace; cp $srcdir/results/dump-var11.out expout
         $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_v4_be.mat var11
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_read_be.at:41"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_12
#AT_START_13
at_fn_group_banner 13 'mat4_read_be.at:45' \
  "Read sparse double array" "                       " 2
at_xfail=no
(
  $as_echo "13. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat4_read_be.at:46: cp \$srcdir/results/read-var21.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_v4_be.mat var21"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_read_be.at:46"
( $at_check_trace; cp $srcdir/results/read-var21.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_v4_be.mat var21
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_read_be.at:46"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_13
#AT_START_14
at_fn_group_banner 14 'mat4_read_be.at:50' \
  "Read sparse complex double array" "               " 2
at_xfail=no
(
  $as_echo "14. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat4_read_be.at:51: cp \$srcdir/results/read-var22.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_v4_be.mat var22"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_read_be.at:51"
( $at_check_trace; cp $srcdir/results/read-var22.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_v4_be.mat var22
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_read_be.at:51"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_14
#AT_START_15
at_fn_group_banner 15 'mat4_read_be.at:55' \
  "Read 2D character array" "                        " 2
at_xfail=no
(
  $as_echo "15. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat4_read_be.at:57: cp \$srcdir/results/read-var24.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_v4_be.mat var24"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_read_be.at:57"
( $at_check_trace; cp $srcdir/results/read-var24.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_v4_be.mat var24
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_read_be.at:57"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_15
#AT_START_16
at_fn_group_banner 16 'mat4_read_be.at:61' \
  "Read small v4 file" "                             " 2
at_xfail=no
(
  $as_echo "16. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat4_read_be.at:63: cp \$srcdir/results/read-x.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/small_v4_be.mat x"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_read_be.at:63"
( $at_check_trace; cp $srcdir/results/read-x.out expout
         $builddir/test_mat readvar $srcdir/datasets/small_v4_be.mat x
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_read_be.at:63"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_16
#AT_START_17
at_fn_group_banner 17 'mat4_readslab_be.at:29' \
  "Read linear slab of double array" "               " 2
at_xfail=no
(
  $as_echo "17. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat4_readslab_be.at:31: cp \$srcdir/results/dump-var1-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_v4_be.mat var1\\(2:3:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_readslab_be.at:31"
( $at_check_trace; cp $srcdir/results/dump-var1-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_v4_be.mat var1\(2:3:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_readslab_be.at:31"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_17
#AT_START_18
at_fn_group_banner 18 'mat4_readslab_be.at:35' \
  "Read linear slab of complex double array" "       " 2
at_xfail=no
(
  $as_echo "18. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat4_readslab_be.at:37: cp \$srcdir/results/dump-var11-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_v4_be.mat var11\\(2:3:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_readslab_be.at:37"
( $at_check_trace; cp $srcdir/results/dump-var11-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_v4_be.mat var11\(2:3:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_readslab_be.at:37"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_18
#AT_START_19
at_fn_group_banner 19 'mat4_readslab_be.at:41' \
  "Read slab of double array" "                      " 2
at_xfail=no
(
  $as_echo "19. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat4_readslab_be.at:43: cp \$srcdir/results/dump-var1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_v4_be.mat var1\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_readslab_be.at:43"
( $at_check_trace; cp $srcdir/results/dump-var1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_v4_be.mat var1\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_readslab_be.at:43"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_19
#AT_START_20
at_fn_group_banner 20 'mat4_readslab_be.at:47' \
  "Read slab of complex double array" "              " 2
at_xfail=no
(
  $as_echo "20. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat4_readslab_be.at:49: cp \$srcdir/results/dump-var11.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_v4_be.mat var11\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_readslab_be.at:49"
( $at_check_trace; cp $srcdir/results/dump-var11.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_v4_be.mat var11\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_readslab_be.at:49"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_20
#AT_START_21
at_fn_group_banner 21 'mat5_uncompressed_read_le.at:27' \
  "Read 2D double array" "                           " 3
at_xfail=no
(
  $as_echo "21. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:28: cp \$srcdir/results/read-var1.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var1"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:28"
( $at_check_trace; cp $srcdir/results/read-var1.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:28"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:30: cp \$srcdir/results/dump-var1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var1"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:30"
( $at_check_trace; cp $srcdir/results/dump-var1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:30"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_21
#AT_START_22
at_fn_group_banner 22 'mat5_uncompressed_read_le.at:34' \
  "Read 2D single array" "                           " 3
at_xfail=no
(
  $as_echo "22. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:35: cp \$srcdir/results/read-var2.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var2"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:35"
( $at_check_trace; cp $srcdir/results/read-var2.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:35"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_22
#AT_START_23
at_fn_group_banner 23 'mat5_uncompressed_read_le.at:39' \
  "Read 2D int64 array" "                            " 3
at_xfail=no
(
  $as_echo "23. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:40: cp \$srcdir/results/read-var3.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var3"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:40"
( $at_check_trace; cp $srcdir/results/read-var3.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var3
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:40"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_23
#AT_START_24
at_fn_group_banner 24 'mat5_uncompressed_read_le.at:44' \
  "Read 2D uint64 array" "                           " 3
at_xfail=no
(
  $as_echo "24. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:45: cp \$srcdir/results/read-var4.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var4"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:45"
( $at_check_trace; cp $srcdir/results/read-var4.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var4
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:45"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_24
#AT_START_25
at_fn_group_banner 25 'mat5_uncompressed_read_le.at:49' \
  "Read 2D int32 array" "                            " 3
at_xfail=no
(
  $as_echo "25. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:50: cp \$srcdir/results/read-var5.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var5"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:50"
( $at_check_trace; cp $srcdir/results/read-var5.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var5
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:50"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_25
#AT_START_26
at_fn_group_banner 26 'mat5_uncompressed_read_le.at:54' \
  "Read 2D uint32 array" "                           " 3
at_xfail=no
(
  $as_echo "26. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:55: cp \$srcdir/results/read-var6.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var6"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:55"
( $at_check_trace; cp $srcdir/results/read-var6.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var6
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:55"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_26
#AT_START_27
at_fn_group_banner 27 'mat5_uncompressed_read_le.at:59' \
  "Read 2D int16 array" "                            " 3
at_xfail=no
(
  $as_echo "27. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:60: cp \$srcdir/results/read-var7.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var7"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:60"
( $at_check_trace; cp $srcdir/results/read-var7.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var7
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:60"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_27
#AT_START_28
at_fn_group_banner 28 'mat5_uncompressed_read_le.at:64' \
  "Read 2D uint16 array" "                           " 3
at_xfail=no
(
  $as_echo "28. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:65: cp \$srcdir/results/read-var8.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var8"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:65"
( $at_check_trace; cp $srcdir/results/read-var8.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var8
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:65"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_28
#AT_START_29
at_fn_group_banner 29 'mat5_uncompressed_read_le.at:69' \
  "Read 2D int8 array" "                             " 3
at_xfail=no
(
  $as_echo "29. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:70: cp \$srcdir/results/read-var9.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var9"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:70"
( $at_check_trace; cp $srcdir/results/read-var9.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var9
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:70"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_29
#AT_START_30
at_fn_group_banner 30 'mat5_uncompressed_read_le.at:74' \
  "Read 2D uint8 array" "                            " 3
at_xfail=no
(
  $as_echo "30. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:75: cp \$srcdir/results/read-var10.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var10"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:75"
( $at_check_trace; cp $srcdir/results/read-var10.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var10
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:75"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_30
#AT_START_31
at_fn_group_banner 31 'mat5_uncompressed_read_le.at:79' \
  "Read 2D complex double array" "                   " 3
at_xfail=no
(
  $as_echo "31. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:80: cp \$srcdir/results/read-var11.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var11"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:80"
( $at_check_trace; cp $srcdir/results/read-var11.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var11
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:80"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:82: cp \$srcdir/results/dump-var11.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var11"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:82"
( $at_check_trace; cp $srcdir/results/dump-var11.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var11
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:82"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_31
#AT_START_32
at_fn_group_banner 32 'mat5_uncompressed_read_le.at:86' \
  "Read 2D complex single array" "                   " 3
at_xfail=no
(
  $as_echo "32. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:87: cp \$srcdir/results/read-var12.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var12"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:87"
( $at_check_trace; cp $srcdir/results/read-var12.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var12
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:87"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_32
#AT_START_33
at_fn_group_banner 33 'mat5_uncompressed_read_le.at:91' \
  "Read 2D complex int64 array" "                    " 3
at_xfail=no
(
  $as_echo "33. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:92: cp \$srcdir/results/read-var13.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var13"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:92"
( $at_check_trace; cp $srcdir/results/read-var13.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var13
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:92"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_33
#AT_START_34
at_fn_group_banner 34 'mat5_uncompressed_read_le.at:96' \
  "Read 2D complex uint64 array" "                   " 3
at_xfail=no
(
  $as_echo "34. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:97: cp \$srcdir/results/read-var14.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var14"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:97"
( $at_check_trace; cp $srcdir/results/read-var14.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var14
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:97"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_34
#AT_START_35
at_fn_group_banner 35 'mat5_uncompressed_read_le.at:101' \
  "Read 2D complex int32 array" "                    " 3
at_xfail=no
(
  $as_echo "35. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:102: cp \$srcdir/results/read-var15.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var15"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:102"
( $at_check_trace; cp $srcdir/results/read-var15.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var15
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:102"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_35
#AT_START_36
at_fn_group_banner 36 'mat5_uncompressed_read_le.at:106' \
  "Read 2D complex uint32 array" "                   " 3
at_xfail=no
(
  $as_echo "36. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:107: cp \$srcdir/results/read-var16.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var16"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:107"
( $at_check_trace; cp $srcdir/results/read-var16.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var16
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:107"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_36
#AT_START_37
at_fn_group_banner 37 'mat5_uncompressed_read_le.at:111' \
  "Read 2D complex int16 array" "                    " 3
at_xfail=no
(
  $as_echo "37. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:112: cp \$srcdir/results/read-var17.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var17"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:112"
( $at_check_trace; cp $srcdir/results/read-var17.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var17
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:112"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_37
#AT_START_38
at_fn_group_banner 38 'mat5_uncompressed_read_le.at:116' \
  "Read 2D complex uint16 array" "                   " 3
at_xfail=no
(
  $as_echo "38. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:117: cp \$srcdir/results/read-var18.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var18"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:117"
( $at_check_trace; cp $srcdir/results/read-var18.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var18
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:117"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_38
#AT_START_39
at_fn_group_banner 39 'mat5_uncompressed_read_le.at:121' \
  "Read 2D complex int8 array" "                     " 3
at_xfail=no
(
  $as_echo "39. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:122: cp \$srcdir/results/read-var19.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var19"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:122"
( $at_check_trace; cp $srcdir/results/read-var19.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var19
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:122"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_39
#AT_START_40
at_fn_group_banner 40 'mat5_uncompressed_read_le.at:126' \
  "Read 2D complex uint8 array" "                    " 3
at_xfail=no
(
  $as_echo "40. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:127: cp \$srcdir/results/read-var20.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var20"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:127"
( $at_check_trace; cp $srcdir/results/read-var20.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var20
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:127"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_40
#AT_START_41
at_fn_group_banner 41 'mat5_uncompressed_read_le.at:131' \
  "Read 2D logical array" "                          " 3
at_xfail=no
(
  $as_echo "41. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:132: cp \$srcdir/results/read-var90.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var90"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:132"
( $at_check_trace; cp $srcdir/results/read-var90.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var90
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:132"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_41
#AT_START_42
at_fn_group_banner 42 'mat5_uncompressed_read_le.at:136' \
  "Read sparse double array" "                       " 3
at_xfail=no
(
  $as_echo "42. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:137: cp \$srcdir/results/read-var21.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var21"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:137"
( $at_check_trace; cp $srcdir/results/read-var21.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var21
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:137"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_42
#AT_START_43
at_fn_group_banner 43 'mat5_uncompressed_read_le.at:141' \
  "Read sparse complex double array" "               " 3
at_xfail=no
(
  $as_echo "43. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:142: cp \$srcdir/results/read-var22.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var22"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:142"
( $at_check_trace; cp $srcdir/results/read-var22.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var22
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:142"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_43
#AT_START_44
at_fn_group_banner 44 'mat5_uncompressed_read_le.at:146' \
  "Read empty array" "                               " 3
at_xfail=no
(
  $as_echo "44. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:148: cp \$srcdir/results/read-var23.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var23"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:148"
( $at_check_trace; cp $srcdir/results/read-var23.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var23
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:148"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_44
#AT_START_45
at_fn_group_banner 45 'mat5_uncompressed_read_le.at:152' \
  "Read 2D character array" "                        " 3
at_xfail=no
(
  $as_echo "45. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:153: cp \$srcdir/results/read-var24.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var24"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:153"
( $at_check_trace; cp $srcdir/results/read-var24.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var24
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:153"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_45
#AT_START_46
at_fn_group_banner 46 'mat5_uncompressed_read_le.at:157' \
  "Read empty struct" "                              " 3
at_xfail=no
(
  $as_echo "46. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:159: cp \$srcdir/results/read-var25.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var25"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:159"
( $at_check_trace; cp $srcdir/results/read-var25.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var25
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:159"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_46
#AT_START_47
at_fn_group_banner 47 'mat5_uncompressed_read_le.at:163' \
  "Read empty struct with fields" "                  " 3
at_xfail=no
(
  $as_echo "47. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:165: cp \$srcdir/results/read-var26.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var26"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:165"
( $at_check_trace; cp $srcdir/results/read-var26.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var26
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:165"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_47
#AT_START_48
at_fn_group_banner 48 'mat5_uncompressed_read_le.at:169' \
  "Read struct with empty fields" "                  " 3
at_xfail=no
(
  $as_echo "48. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:171: cp \$srcdir/results/read-var27.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var27"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:171"
( $at_check_trace; cp $srcdir/results/read-var27.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var27
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:171"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_48
#AT_START_49
at_fn_group_banner 49 'mat5_uncompressed_read_le.at:175' \
  "Read struct with double fields" "                 " 3
at_xfail=no
(
  $as_echo "49. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:176: cp \$srcdir/results/read-var28.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var28"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:176"
( $at_check_trace; cp $srcdir/results/read-var28.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var28
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:176"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_49
#AT_START_50
at_fn_group_banner 50 'mat5_uncompressed_read_le.at:180' \
  "Read struct with single fields" "                 " 3
at_xfail=no
(
  $as_echo "50. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:181: cp \$srcdir/results/read-var29.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var29"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:181"
( $at_check_trace; cp $srcdir/results/read-var29.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var29
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:181"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_50
#AT_START_51
at_fn_group_banner 51 'mat5_uncompressed_read_le.at:185' \
  "Read struct with int64 fields" "                  " 3
at_xfail=no
(
  $as_echo "51. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:186: cp \$srcdir/results/read-var30.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var30"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:186"
( $at_check_trace; cp $srcdir/results/read-var30.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var30
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:186"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_51
#AT_START_52
at_fn_group_banner 52 'mat5_uncompressed_read_le.at:190' \
  "Read struct with uint64 fields" "                 " 3
at_xfail=no
(
  $as_echo "52. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:191: cp \$srcdir/results/read-var31.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var31"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:191"
( $at_check_trace; cp $srcdir/results/read-var31.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var31
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:191"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_52
#AT_START_53
at_fn_group_banner 53 'mat5_uncompressed_read_le.at:195' \
  "Read struct with int32 fields" "                  " 3
at_xfail=no
(
  $as_echo "53. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:196: cp \$srcdir/results/read-var32.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var32"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:196"
( $at_check_trace; cp $srcdir/results/read-var32.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var32
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:196"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_53
#AT_START_54
at_fn_group_banner 54 'mat5_uncompressed_read_le.at:200' \
  "Read struct with uint32 fields" "                 " 3
at_xfail=no
(
  $as_echo "54. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:201: cp \$srcdir/results/read-var33.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var33"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:201"
( $at_check_trace; cp $srcdir/results/read-var33.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var33
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:201"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_54
#AT_START_55
at_fn_group_banner 55 'mat5_uncompressed_read_le.at:205' \
  "Read struct with int16 fields" "                  " 3
at_xfail=no
(
  $as_echo "55. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:206: cp \$srcdir/results/read-var34.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var34"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:206"
( $at_check_trace; cp $srcdir/results/read-var34.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var34
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:206"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_55
#AT_START_56
at_fn_group_banner 56 'mat5_uncompressed_read_le.at:210' \
  "Read struct with uint16 fields" "                 " 3
at_xfail=no
(
  $as_echo "56. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:211: cp \$srcdir/results/read-var35.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var35"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:211"
( $at_check_trace; cp $srcdir/results/read-var35.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var35
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:211"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_56
#AT_START_57
at_fn_group_banner 57 'mat5_uncompressed_read_le.at:215' \
  "Read struct with int8 fields" "                   " 3
at_xfail=no
(
  $as_echo "57. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:216: cp \$srcdir/results/read-var36.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var36"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:216"
( $at_check_trace; cp $srcdir/results/read-var36.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var36
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:216"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_57
#AT_START_58
at_fn_group_banner 58 'mat5_uncompressed_read_le.at:220' \
  "Read struct with uint8 fields" "                  " 3
at_xfail=no
(
  $as_echo "58. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:221: cp \$srcdir/results/read-var37.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var37"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:221"
( $at_check_trace; cp $srcdir/results/read-var37.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var37
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:221"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_58
#AT_START_59
at_fn_group_banner 59 'mat5_uncompressed_read_le.at:225' \
  "Read struct with complex double fields" "         " 3
at_xfail=no
(
  $as_echo "59. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:226: cp \$srcdir/results/read-var38.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var38"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:226"
( $at_check_trace; cp $srcdir/results/read-var38.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var38
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:226"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_59
#AT_START_60
at_fn_group_banner 60 'mat5_uncompressed_read_le.at:230' \
  "Read struct with complex single fields" "         " 3
at_xfail=no
(
  $as_echo "60. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:231: cp \$srcdir/results/read-var39.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var39"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:231"
( $at_check_trace; cp $srcdir/results/read-var39.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var39
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:231"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_60
#AT_START_61
at_fn_group_banner 61 'mat5_uncompressed_read_le.at:235' \
  "Read struct with complex int64 fields" "          " 3
at_xfail=no
(
  $as_echo "61. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:236: cp \$srcdir/results/read-var40.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var40"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:236"
( $at_check_trace; cp $srcdir/results/read-var40.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var40
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:236"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_61
#AT_START_62
at_fn_group_banner 62 'mat5_uncompressed_read_le.at:240' \
  "Read struct with complex uint64 fields" "         " 3
at_xfail=no
(
  $as_echo "62. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:241: cp \$srcdir/results/read-var41.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var41"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:241"
( $at_check_trace; cp $srcdir/results/read-var41.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var41
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:241"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_62
#AT_START_63
at_fn_group_banner 63 'mat5_uncompressed_read_le.at:245' \
  "Read struct with complex int32 fields" "          " 3
at_xfail=no
(
  $as_echo "63. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:246: cp \$srcdir/results/read-var42.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var42"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:246"
( $at_check_trace; cp $srcdir/results/read-var42.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var42
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:246"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_63
#AT_START_64
at_fn_group_banner 64 'mat5_uncompressed_read_le.at:250' \
  "Read struct with complex uint32 fields" "         " 3
at_xfail=no
(
  $as_echo "64. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:251: cp \$srcdir/results/read-var43.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var43"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:251"
( $at_check_trace; cp $srcdir/results/read-var43.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var43
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:251"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_64
#AT_START_65
at_fn_group_banner 65 'mat5_uncompressed_read_le.at:255' \
  "Read struct with complex int16 fields" "          " 3
at_xfail=no
(
  $as_echo "65. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:256: cp \$srcdir/results/read-var44.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var44"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:256"
( $at_check_trace; cp $srcdir/results/read-var44.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var44
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:256"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_65
#AT_START_66
at_fn_group_banner 66 'mat5_uncompressed_read_le.at:260' \
  "Read struct with complex uint16 fields" "         " 3
at_xfail=no
(
  $as_echo "66. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:261: cp \$srcdir/results/read-var45.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var45"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:261"
( $at_check_trace; cp $srcdir/results/read-var45.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var45
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:261"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_66
#AT_START_67
at_fn_group_banner 67 'mat5_uncompressed_read_le.at:265' \
  "Read struct with complex int8 fields" "           " 3
at_xfail=no
(
  $as_echo "67. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:266: cp \$srcdir/results/read-var46.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var46"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:266"
( $at_check_trace; cp $srcdir/results/read-var46.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var46
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:266"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_67
#AT_START_68
at_fn_group_banner 68 'mat5_uncompressed_read_le.at:270' \
  "Read struct with complex uint8 fields" "          " 3
at_xfail=no
(
  $as_echo "68. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:271: cp \$srcdir/results/read-var47.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var47"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:271"
( $at_check_trace; cp $srcdir/results/read-var47.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var47
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:271"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_68
#AT_START_69
at_fn_group_banner 69 'mat5_uncompressed_read_le.at:275' \
  "Read struct with logical fields" "                " 3
at_xfail=no
(
  $as_echo "69. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:276: cp \$srcdir/results/read-var91.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var91"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:276"
( $at_check_trace; cp $srcdir/results/read-var91.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var91
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:276"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_69
#AT_START_70
at_fn_group_banner 70 'mat5_uncompressed_read_le.at:280' \
  "Read struct with sparse double fields" "          " 3
at_xfail=no
(
  $as_echo "70. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:281: cp \$srcdir/results/read-var48.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var48"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:281"
( $at_check_trace; cp $srcdir/results/read-var48.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var48
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:281"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_70
#AT_START_71
at_fn_group_banner 71 'mat5_uncompressed_read_le.at:285' \
  "Read struct with sparse complex double fields" "  " 3
at_xfail=no
(
  $as_echo "71. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:286: cp \$srcdir/results/read-var49.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var49"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:286"
( $at_check_trace; cp $srcdir/results/read-var49.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var49
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:286"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_71
#AT_START_72
at_fn_group_banner 72 'mat5_uncompressed_read_le.at:290' \
  "Read struct with character fields" "              " 3
at_xfail=no
(
  $as_echo "72. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:291: cp \$srcdir/results/read-var50.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var50"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:291"
( $at_check_trace; cp $srcdir/results/read-var50.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var50
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:291"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_72
#AT_START_73
at_fn_group_banner 73 'mat5_uncompressed_read_le.at:295' \
  "Read empty cell array" "                          " 3
at_xfail=no
(
  $as_echo "73. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:297: cp \$srcdir/results/read-var51.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var51"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:297"
( $at_check_trace; cp $srcdir/results/read-var51.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var51
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:297"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_73
#AT_START_74
at_fn_group_banner 74 'mat5_uncompressed_read_le.at:301' \
  "Read cell array with empty arrays" "              " 3
at_xfail=no
(
  $as_echo "74. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:303: cp \$srcdir/results/read-var52.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var52"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:303"
( $at_check_trace; cp $srcdir/results/read-var52.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var52
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:303"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_74
#AT_START_75
at_fn_group_banner 75 'mat5_uncompressed_read_le.at:307' \
  "Read cell array with double arrays" "             " 3
at_xfail=no
(
  $as_echo "75. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:308: cp \$srcdir/results/read-var53.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var53"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:308"
( $at_check_trace; cp $srcdir/results/read-var53.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var53
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:308"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_75
#AT_START_76
at_fn_group_banner 76 'mat5_uncompressed_read_le.at:312' \
  "Read cell array with single arrays" "             " 3
at_xfail=no
(
  $as_echo "76. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:313: cp \$srcdir/results/read-var54.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var54"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:313"
( $at_check_trace; cp $srcdir/results/read-var54.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var54
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:313"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_76
#AT_START_77
at_fn_group_banner 77 'mat5_uncompressed_read_le.at:317' \
  "Read cell array with int64 arrays" "              " 3
at_xfail=no
(
  $as_echo "77. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:318: cp \$srcdir/results/read-var55.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var55"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:318"
( $at_check_trace; cp $srcdir/results/read-var55.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var55
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:318"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_77
#AT_START_78
at_fn_group_banner 78 'mat5_uncompressed_read_le.at:322' \
  "Read cell array with uint64 arrays" "             " 3
at_xfail=no
(
  $as_echo "78. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:323: cp \$srcdir/results/read-var56.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var56"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:323"
( $at_check_trace; cp $srcdir/results/read-var56.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var56
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:323"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_78
#AT_START_79
at_fn_group_banner 79 'mat5_uncompressed_read_le.at:327' \
  "Read cell array with int32 arrays" "              " 3
at_xfail=no
(
  $as_echo "79. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:328: cp \$srcdir/results/read-var57.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var57"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:328"
( $at_check_trace; cp $srcdir/results/read-var57.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var57
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:328"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_79
#AT_START_80
at_fn_group_banner 80 'mat5_uncompressed_read_le.at:332' \
  "Read cell array with uint32 arrays" "             " 3
at_xfail=no
(
  $as_echo "80. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:333: cp \$srcdir/results/read-var58.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var58"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:333"
( $at_check_trace; cp $srcdir/results/read-var58.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var58
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:333"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_80
#AT_START_81
at_fn_group_banner 81 'mat5_uncompressed_read_le.at:337' \
  "Read cell array with int16 arrays" "              " 3
at_xfail=no
(
  $as_echo "81. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:338: cp \$srcdir/results/read-var59.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var59"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:338"
( $at_check_trace; cp $srcdir/results/read-var59.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var59
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:338"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_81
#AT_START_82
at_fn_group_banner 82 'mat5_uncompressed_read_le.at:342' \
  "Read cell array with uint16 arrays" "             " 3
at_xfail=no
(
  $as_echo "82. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:343: cp \$srcdir/results/read-var60.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var60"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:343"
( $at_check_trace; cp $srcdir/results/read-var60.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var60
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:343"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_82
#AT_START_83
at_fn_group_banner 83 'mat5_uncompressed_read_le.at:347' \
  "Read cell array with int8 arrays" "               " 3
at_xfail=no
(
  $as_echo "83. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:348: cp \$srcdir/results/read-var61.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var61"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:348"
( $at_check_trace; cp $srcdir/results/read-var61.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var61
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:348"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_83
#AT_START_84
at_fn_group_banner 84 'mat5_uncompressed_read_le.at:352' \
  "Read cell array with uint8 arrays" "              " 3
at_xfail=no
(
  $as_echo "84. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:353: cp \$srcdir/results/read-var62.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var62"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:353"
( $at_check_trace; cp $srcdir/results/read-var62.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var62
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:353"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_84
#AT_START_85
at_fn_group_banner 85 'mat5_uncompressed_read_le.at:357' \
  "Read cell array with logical arrays" "            " 3
at_xfail=no
(
  $as_echo "85. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:358: cp \$srcdir/results/read-var92.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var92"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:358"
( $at_check_trace; cp $srcdir/results/read-var92.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var92
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:358"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_85
#AT_START_86
at_fn_group_banner 86 'mat5_uncompressed_read_le.at:362' \
  "Read cell array with sparse double arrays" "      " 3
at_xfail=no
(
  $as_echo "86. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:363: cp \$srcdir/results/read-var63.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var63"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:363"
( $at_check_trace; cp $srcdir/results/read-var63.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var63
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:363"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_86
#AT_START_87
at_fn_group_banner 87 'mat5_uncompressed_read_le.at:367' \
  "Read cell array with sparse complex double arrays" "" 3
at_xfail=no
(
  $as_echo "87. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:368: cp \$srcdir/results/read-var64.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var64"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:368"
( $at_check_trace; cp $srcdir/results/read-var64.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var64
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:368"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_87
#AT_START_88
at_fn_group_banner 88 'mat5_uncompressed_read_le.at:372' \
  "Read cell array with character arrays" "          " 3
at_xfail=no
(
  $as_echo "88. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:373: cp \$srcdir/results/read-var65.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var65"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:373"
( $at_check_trace; cp $srcdir/results/read-var65.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var65
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:373"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_88
#AT_START_89
at_fn_group_banner 89 'mat5_uncompressed_read_le.at:377' \
  "Read cell array with empty structs" "             " 3
at_xfail=no
(
  $as_echo "89. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:379: cp \$srcdir/results/read-var66.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var66"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:379"
( $at_check_trace; cp $srcdir/results/read-var66.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var66
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:379"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_89
#AT_START_90
at_fn_group_banner 90 'mat5_uncompressed_read_le.at:383' \
  "Read cell array with structs (numeric fields)" "  " 3
at_xfail=no
(
  $as_echo "90. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:384: cp \$srcdir/results/read-var67.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var67"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:384"
( $at_check_trace; cp $srcdir/results/read-var67.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var67
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:384"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_90
#AT_START_91
at_fn_group_banner 91 'mat5_uncompressed_read_le.at:388' \
  "Read cell array with structs (sparse fields)" "   " 3
at_xfail=no
(
  $as_echo "91. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:389: cp \$srcdir/results/read-var68.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var68"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:389"
( $at_check_trace; cp $srcdir/results/read-var68.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var68
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:389"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_91
#AT_START_92
at_fn_group_banner 92 'mat5_uncompressed_read_le.at:393' \
  "Read cell array with structs (character fields)" "" 3
at_xfail=no
(
  $as_echo "92. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_le.at:394: cp \$srcdir/results/read-var69.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var69"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_le.at:394"
( $at_check_trace; cp $srcdir/results/read-var69.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_le.mat var69
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_le.at:394"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_92
#AT_START_93
at_fn_group_banner 93 'mat5_uncompressed_readslab_le.at:27' \
  "Read slab of double array" "                      " 3
at_xfail=no
(
  $as_echo "93. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:29: cp \$srcdir/results/dump-var70-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var70\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:29"
( $at_check_trace; cp $srcdir/results/dump-var70-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var70\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:29"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:31: cp \$srcdir/results/dump-var70-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var70\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:31"
( $at_check_trace; cp $srcdir/results/dump-var70-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var70\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:31"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_93
#AT_START_94
at_fn_group_banner 94 'mat5_uncompressed_readslab_le.at:35' \
  "Read slab of single array" "                      " 3
at_xfail=no
(
  $as_echo "94. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:37: cp \$srcdir/results/dump-var71-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var71\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:37"
( $at_check_trace; cp $srcdir/results/dump-var71-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var71\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:37"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:39: cp \$srcdir/results/dump-var71-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var71\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:39"
( $at_check_trace; cp $srcdir/results/dump-var71-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var71\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:39"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_94
#AT_START_95
at_fn_group_banner 95 'mat5_uncompressed_readslab_le.at:43' \
  "Read slab of int64 array" "                       " 3
at_xfail=no
(
  $as_echo "95. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:45: cp \$srcdir/results/dump-var72-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var72\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:45"
( $at_check_trace; cp $srcdir/results/dump-var72-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var72\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:45"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:47: cp \$srcdir/results/dump-var72-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var72\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:47"
( $at_check_trace; cp $srcdir/results/dump-var72-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var72\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:47"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_95
#AT_START_96
at_fn_group_banner 96 'mat5_uncompressed_readslab_le.at:51' \
  "Read slab of uint64 array" "                      " 3
at_xfail=no
(
  $as_echo "96. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:53: cp \$srcdir/results/dump-var73-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var73\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:53"
( $at_check_trace; cp $srcdir/results/dump-var73-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var73\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:53"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:55: cp \$srcdir/results/dump-var73-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var73\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:55"
( $at_check_trace; cp $srcdir/results/dump-var73-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var73\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:55"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_96
#AT_START_97
at_fn_group_banner 97 'mat5_uncompressed_readslab_le.at:59' \
  "Read slab of int32 array" "                       " 3
at_xfail=no
(
  $as_echo "97. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:61: cp \$srcdir/results/dump-var74-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var74\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:61"
( $at_check_trace; cp $srcdir/results/dump-var74-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var74\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:61"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:63: cp \$srcdir/results/dump-var74-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var74\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:63"
( $at_check_trace; cp $srcdir/results/dump-var74-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var74\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:63"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_97
#AT_START_98
at_fn_group_banner 98 'mat5_uncompressed_readslab_le.at:67' \
  "Read slab of uint32 array" "                      " 3
at_xfail=no
(
  $as_echo "98. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:69: cp \$srcdir/results/dump-var75-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var75\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:69"
( $at_check_trace; cp $srcdir/results/dump-var75-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var75\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:69"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:71: cp \$srcdir/results/dump-var75-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var75\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:71"
( $at_check_trace; cp $srcdir/results/dump-var75-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var75\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:71"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_98
#AT_START_99
at_fn_group_banner 99 'mat5_uncompressed_readslab_le.at:75' \
  "Read slab of int16 array" "                       " 3
at_xfail=no
(
  $as_echo "99. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:77: cp \$srcdir/results/dump-var76-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var76\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:77"
( $at_check_trace; cp $srcdir/results/dump-var76-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var76\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:77"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:79: cp \$srcdir/results/dump-var76-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var76\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:79"
( $at_check_trace; cp $srcdir/results/dump-var76-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var76\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:79"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_99
#AT_START_100
at_fn_group_banner 100 'mat5_uncompressed_readslab_le.at:83' \
  "Read slab of uint16 array" "                      " 3
at_xfail=no
(
  $as_echo "100. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:85: cp \$srcdir/results/dump-var77-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var77\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:85"
( $at_check_trace; cp $srcdir/results/dump-var77-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var77\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:85"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:87: cp \$srcdir/results/dump-var77-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var77\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:87"
( $at_check_trace; cp $srcdir/results/dump-var77-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var77\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:87"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_100
#AT_START_101
at_fn_group_banner 101 'mat5_uncompressed_readslab_le.at:91' \
  "Read slab of int8 array" "                        " 3
at_xfail=no
(
  $as_echo "101. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:93: cp \$srcdir/results/dump-var78-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var78\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:93"
( $at_check_trace; cp $srcdir/results/dump-var78-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var78\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:93"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:95: cp \$srcdir/results/dump-var78-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var78\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:95"
( $at_check_trace; cp $srcdir/results/dump-var78-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var78\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:95"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_101
#AT_START_102
at_fn_group_banner 102 'mat5_uncompressed_readslab_le.at:99' \
  "Read slab of uint8 array" "                       " 3
at_xfail=no
(
  $as_echo "102. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:101: cp \$srcdir/results/dump-var79-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var79\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:101"
( $at_check_trace; cp $srcdir/results/dump-var79-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var79\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:101"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:103: cp \$srcdir/results/dump-var79-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var79\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:103"
( $at_check_trace; cp $srcdir/results/dump-var79-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var79\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:103"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_102
#AT_START_103
at_fn_group_banner 103 'mat5_uncompressed_readslab_le.at:107' \
  "Read slab of complex double array" "              " 3
at_xfail=no
(
  $as_echo "103. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:109: cp \$srcdir/results/dump-var80-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var80\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:109"
( $at_check_trace; cp $srcdir/results/dump-var80-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var80\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:109"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:111: cp \$srcdir/results/dump-var80-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var80\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:111"
( $at_check_trace; cp $srcdir/results/dump-var80-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var80\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:111"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_103
#AT_START_104
at_fn_group_banner 104 'mat5_uncompressed_readslab_le.at:115' \
  "Read slab of complex single array" "              " 3
at_xfail=no
(
  $as_echo "104. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:117: cp \$srcdir/results/dump-var81-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var81\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:117"
( $at_check_trace; cp $srcdir/results/dump-var81-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var81\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:117"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:119: cp \$srcdir/results/dump-var81-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var81\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:119"
( $at_check_trace; cp $srcdir/results/dump-var81-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var81\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:119"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_104
#AT_START_105
at_fn_group_banner 105 'mat5_uncompressed_readslab_le.at:123' \
  "Read slab of complex int64 array" "               " 3
at_xfail=no
(
  $as_echo "105. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:125: cp \$srcdir/results/dump-var82-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var82\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:125"
( $at_check_trace; cp $srcdir/results/dump-var82-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var82\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:125"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:127: cp \$srcdir/results/dump-var82-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var82\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:127"
( $at_check_trace; cp $srcdir/results/dump-var82-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var82\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:127"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_105
#AT_START_106
at_fn_group_banner 106 'mat5_uncompressed_readslab_le.at:131' \
  "Read slab of complex uint64 array" "              " 3
at_xfail=no
(
  $as_echo "106. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:133: cp \$srcdir/results/dump-var83-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var83\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:133"
( $at_check_trace; cp $srcdir/results/dump-var83-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var83\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:133"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:135: cp \$srcdir/results/dump-var83-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var83\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:135"
( $at_check_trace; cp $srcdir/results/dump-var83-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var83\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:135"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_106
#AT_START_107
at_fn_group_banner 107 'mat5_uncompressed_readslab_le.at:139' \
  "Read slab of complex int32 array" "               " 3
at_xfail=no
(
  $as_echo "107. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:141: cp \$srcdir/results/dump-var84-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var84\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:141"
( $at_check_trace; cp $srcdir/results/dump-var84-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var84\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:141"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:143: cp \$srcdir/results/dump-var84-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var84\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:143"
( $at_check_trace; cp $srcdir/results/dump-var84-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var84\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:143"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_107
#AT_START_108
at_fn_group_banner 108 'mat5_uncompressed_readslab_le.at:147' \
  "Read slab of complex uint32 array" "              " 3
at_xfail=no
(
  $as_echo "108. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:149: cp \$srcdir/results/dump-var85-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var85\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:149"
( $at_check_trace; cp $srcdir/results/dump-var85-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var85\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:149"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:151: cp \$srcdir/results/dump-var85-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var85\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:151"
( $at_check_trace; cp $srcdir/results/dump-var85-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var85\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:151"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_108
#AT_START_109
at_fn_group_banner 109 'mat5_uncompressed_readslab_le.at:155' \
  "Read slab of complex int16 array" "               " 3
at_xfail=no
(
  $as_echo "109. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:157: cp \$srcdir/results/dump-var86-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var86\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:157"
( $at_check_trace; cp $srcdir/results/dump-var86-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var86\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:157"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:159: cp \$srcdir/results/dump-var86-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var86\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:159"
( $at_check_trace; cp $srcdir/results/dump-var86-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var86\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:159"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_109
#AT_START_110
at_fn_group_banner 110 'mat5_uncompressed_readslab_le.at:163' \
  "Read slab of complex uint16 array" "              " 3
at_xfail=no
(
  $as_echo "110. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:165: cp \$srcdir/results/dump-var87-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var87\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:165"
( $at_check_trace; cp $srcdir/results/dump-var87-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var87\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:165"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:167: cp \$srcdir/results/dump-var87-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var87\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:167"
( $at_check_trace; cp $srcdir/results/dump-var87-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var87\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:167"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_110
#AT_START_111
at_fn_group_banner 111 'mat5_uncompressed_readslab_le.at:171' \
  "Read slab of complex int8 array" "                " 3
at_xfail=no
(
  $as_echo "111. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:173: cp \$srcdir/results/dump-var88-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var88\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:173"
( $at_check_trace; cp $srcdir/results/dump-var88-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var88\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:173"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:175: cp \$srcdir/results/dump-var88-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var88\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:175"
( $at_check_trace; cp $srcdir/results/dump-var88-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var88\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:175"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_111
#AT_START_112
at_fn_group_banner 112 'mat5_uncompressed_readslab_le.at:179' \
  "Read slab of complex uint8 array" "               " 3
at_xfail=no
(
  $as_echo "112. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:181: cp \$srcdir/results/dump-var89-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var89\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:181"
( $at_check_trace; cp $srcdir/results/dump-var89-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var89\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:181"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:183: cp \$srcdir/results/dump-var89-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var89\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:183"
( $at_check_trace; cp $srcdir/results/dump-var89-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var89\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:183"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_112
#AT_START_113
at_fn_group_banner 113 'mat5_uncompressed_readslab_le.at:187' \
  "Read linear slab of double array" "               " 3
at_xfail=no
(
  $as_echo "113. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:189: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var70\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:189"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var70\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:189"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_113
#AT_START_114
at_fn_group_banner 114 'mat5_uncompressed_readslab_le.at:193' \
  "Read linear slab of single array" "               " 3
at_xfail=no
(
  $as_echo "114. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:195: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var71\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:195"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var71\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:195"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_114
#AT_START_115
at_fn_group_banner 115 'mat5_uncompressed_readslab_le.at:199' \
  "Read linear slab of int64 array" "                " 3
at_xfail=no
(
  $as_echo "115. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:201: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var72\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:201"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var72\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:201"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_115
#AT_START_116
at_fn_group_banner 116 'mat5_uncompressed_readslab_le.at:205' \
  "Read linear slab of uint64 array" "               " 3
at_xfail=no
(
  $as_echo "116. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:207: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var73\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:207"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var73\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:207"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_116
#AT_START_117
at_fn_group_banner 117 'mat5_uncompressed_readslab_le.at:211' \
  "Read linear slab of int32 array" "                " 3
at_xfail=no
(
  $as_echo "117. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:213: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var74\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:213"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var74\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:213"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_117
#AT_START_118
at_fn_group_banner 118 'mat5_uncompressed_readslab_le.at:217' \
  "Read linear slab of uint32 array" "               " 3
at_xfail=no
(
  $as_echo "118. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:219: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var75\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:219"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var75\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:219"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_118
#AT_START_119
at_fn_group_banner 119 'mat5_uncompressed_readslab_le.at:223' \
  "Read linear slab of int16 array" "                " 3
at_xfail=no
(
  $as_echo "119. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:225: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var76\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:225"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var76\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:225"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_119
#AT_START_120
at_fn_group_banner 120 'mat5_uncompressed_readslab_le.at:229' \
  "Read linear slab of uint16 array" "               " 3
at_xfail=no
(
  $as_echo "120. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:231: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var77\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:231"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var77\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:231"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_120
#AT_START_121
at_fn_group_banner 121 'mat5_uncompressed_readslab_le.at:235' \
  "Read linear slab of int8 array" "                 " 3
at_xfail=no
(
  $as_echo "121. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:237: cp \$srcdir/results/dump-var78-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var78\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:237"
( $at_check_trace; cp $srcdir/results/dump-var78-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var78\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:237"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_121
#AT_START_122
at_fn_group_banner 122 'mat5_uncompressed_readslab_le.at:241' \
  "Read linear slab of uint8 array" "                " 3
at_xfail=no
(
  $as_echo "122. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:243: cp \$srcdir/results/dump-var79-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var79\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:243"
( $at_check_trace; cp $srcdir/results/dump-var79-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var79\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:243"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_122
#AT_START_123
at_fn_group_banner 123 'mat5_uncompressed_readslab_le.at:247' \
  "Read linear slab of complex double array" "       " 3
at_xfail=no
(
  $as_echo "123. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:249: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var80\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:249"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var80\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:249"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_123
#AT_START_124
at_fn_group_banner 124 'mat5_uncompressed_readslab_le.at:253' \
  "Read linear slab of complex single array" "       " 3
at_xfail=no
(
  $as_echo "124. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:255: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var81\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:255"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var81\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:255"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_124
#AT_START_125
at_fn_group_banner 125 'mat5_uncompressed_readslab_le.at:259' \
  "Read linear slab of complex int64 array" "        " 3
at_xfail=no
(
  $as_echo "125. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:261: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var82\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:261"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var82\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:261"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_125
#AT_START_126
at_fn_group_banner 126 'mat5_uncompressed_readslab_le.at:265' \
  "Read linear slab of complex uint64 array" "       " 3
at_xfail=no
(
  $as_echo "126. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:267: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var83\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:267"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var83\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:267"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_126
#AT_START_127
at_fn_group_banner 127 'mat5_uncompressed_readslab_le.at:271' \
  "Read linear slab of complex int32 array" "        " 3
at_xfail=no
(
  $as_echo "127. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:273: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var84\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:273"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var84\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:273"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_127
#AT_START_128
at_fn_group_banner 128 'mat5_uncompressed_readslab_le.at:277' \
  "Read linear slab of complex uint32 array" "       " 3
at_xfail=no
(
  $as_echo "128. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:279: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var85\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:279"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var85\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:279"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_128
#AT_START_129
at_fn_group_banner 129 'mat5_uncompressed_readslab_le.at:283' \
  "Read linear slab of complex int16 array" "        " 3
at_xfail=no
(
  $as_echo "129. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:285: cp \$srcdir/results/dump-var86-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var86\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:285"
( $at_check_trace; cp $srcdir/results/dump-var86-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var86\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:285"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_129
#AT_START_130
at_fn_group_banner 130 'mat5_uncompressed_readslab_le.at:289' \
  "Read linear slab of complex uint16 array" "       " 3
at_xfail=no
(
  $as_echo "130. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:291: cp \$srcdir/results/dump-var87-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var87\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:291"
( $at_check_trace; cp $srcdir/results/dump-var87-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var87\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:291"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_130
#AT_START_131
at_fn_group_banner 131 'mat5_uncompressed_readslab_le.at:295' \
  "Read linear slab of complex int8 array" "         " 3
at_xfail=no
(
  $as_echo "131. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:297: cp \$srcdir/results/dump-var88-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var88\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:297"
( $at_check_trace; cp $srcdir/results/dump-var88-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var88\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:297"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_131
#AT_START_132
at_fn_group_banner 132 'mat5_uncompressed_readslab_le.at:301' \
  "Read linear slab of complex uint8 array" "        " 3
at_xfail=no
(
  $as_echo "132. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:303: cp \$srcdir/results/dump-var89-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var89\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:303"
( $at_check_trace; cp $srcdir/results/dump-var89-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var89\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:303"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_132
#AT_START_133
at_fn_group_banner 133 'mat5_uncompressed_readslab_le.at:307' \
  "Read slab of double array from struct" "          " 3
at_xfail=no
(
  $as_echo "133. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:309: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var28.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:309"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var28.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:309"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:311: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var28.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:311"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var28.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:311"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:313: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var28.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:313"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var28.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:313"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_133
#AT_START_134
at_fn_group_banner 134 'mat5_uncompressed_readslab_le.at:317' \
  "Read slab of single array from struct" "          " 3
at_xfail=no
(
  $as_echo "134. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:319: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var29.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:319"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var29.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:319"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:321: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var29.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:321"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var29.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:321"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:323: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var29.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:323"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var29.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:323"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_134
#AT_START_135
at_fn_group_banner 135 'mat5_uncompressed_readslab_le.at:327' \
  "Read slab of int64 array from struct" "           " 3
at_xfail=no
(
  $as_echo "135. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:329: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var30.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:329"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var30.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:329"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:331: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var30.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:331"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var30.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:331"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:333: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var30.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:333"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var30.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:333"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_135
#AT_START_136
at_fn_group_banner 136 'mat5_uncompressed_readslab_le.at:337' \
  "Read slab of uint64 array from struct" "          " 3
at_xfail=no
(
  $as_echo "136. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:339: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var31.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:339"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var31.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:339"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:341: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var31.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:341"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var31.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:341"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:343: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var31.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:343"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var31.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:343"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_136
#AT_START_137
at_fn_group_banner 137 'mat5_uncompressed_readslab_le.at:347' \
  "Read slab of int32 array from struct" "           " 3
at_xfail=no
(
  $as_echo "137. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:349: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var32.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:349"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var32.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:349"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:351: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var32.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:351"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var32.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:351"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:353: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var32.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:353"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var32.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:353"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_137
#AT_START_138
at_fn_group_banner 138 'mat5_uncompressed_readslab_le.at:357' \
  "Read slab of uint32 array from struct" "          " 3
at_xfail=no
(
  $as_echo "138. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:359: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var33.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:359"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var33.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:359"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:361: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var33.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:361"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var33.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:361"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:363: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var33.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:363"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var33.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:363"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_138
#AT_START_139
at_fn_group_banner 139 'mat5_uncompressed_readslab_le.at:367' \
  "Read slab of int16 array from struct" "           " 3
at_xfail=no
(
  $as_echo "139. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:369: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var34.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:369"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var34.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:369"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:371: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var34.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:371"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var34.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:371"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:373: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var34.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:373"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var34.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:373"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_139
#AT_START_140
at_fn_group_banner 140 'mat5_uncompressed_readslab_le.at:377' \
  "Read slab of uint16 array from struct" "          " 3
at_xfail=no
(
  $as_echo "140. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:379: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var35.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:379"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var35.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:379"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:381: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var35.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:381"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var35.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:381"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:383: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var35.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:383"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var35.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:383"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_140
#AT_START_141
at_fn_group_banner 141 'mat5_uncompressed_readslab_le.at:387' \
  "Read slab of int8 array from struct" "            " 3
at_xfail=no
(
  $as_echo "141. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:389: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var36.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:389"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var36.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:389"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:391: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var36.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:391"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var36.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:391"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:393: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var36.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:393"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var36.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:393"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_141
#AT_START_142
at_fn_group_banner 142 'mat5_uncompressed_readslab_le.at:397' \
  "Read slab of uint8 array from struct" "           " 3
at_xfail=no
(
  $as_echo "142. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:399: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var37.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:399"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var37.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:399"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:401: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var37.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:401"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var37.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:401"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:403: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var37.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:403"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var37.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:403"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_142
#AT_START_143
at_fn_group_banner 143 'mat5_uncompressed_readslab_le.at:407' \
  "Read slab of complex double array from struct" "  " 3
at_xfail=no
(
  $as_echo "143. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:409: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var38.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:409"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var38.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:409"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:411: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var38.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:411"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var38.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:411"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:413: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var38.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:413"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var38.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:413"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_143
#AT_START_144
at_fn_group_banner 144 'mat5_uncompressed_readslab_le.at:417' \
  "Read slab of complex single array from struct" "  " 3
at_xfail=no
(
  $as_echo "144. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:419: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var39.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:419"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var39.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:419"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:421: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var39.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:421"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var39.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:421"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:423: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var39.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:423"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var39.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:423"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_144
#AT_START_145
at_fn_group_banner 145 'mat5_uncompressed_readslab_le.at:427' \
  "Read slab of complex int64 array from struct" "   " 3
at_xfail=no
(
  $as_echo "145. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:429: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var40.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:429"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var40.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:429"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:431: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var40.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:431"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var40.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:431"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:433: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var40.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:433"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var40.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:433"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_145
#AT_START_146
at_fn_group_banner 146 'mat5_uncompressed_readslab_le.at:437' \
  "Read slab of complex uint64 array from struct" "  " 3
at_xfail=no
(
  $as_echo "146. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:439: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var41.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:439"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var41.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:439"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:441: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var41.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:441"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var41.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:441"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:443: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var41.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:443"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var41.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:443"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_146
#AT_START_147
at_fn_group_banner 147 'mat5_uncompressed_readslab_le.at:447' \
  "Read slab of complex int32 array from struct" "   " 3
at_xfail=no
(
  $as_echo "147. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:449: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var42.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:449"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var42.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:449"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:451: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var42.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:451"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var42.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:451"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:453: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var42.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:453"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var42.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:453"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_147
#AT_START_148
at_fn_group_banner 148 'mat5_uncompressed_readslab_le.at:457' \
  "Read slab of complex uint32 array from struct" "  " 3
at_xfail=no
(
  $as_echo "148. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:459: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var43.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:459"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var43.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:459"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:461: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var43.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:461"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var43.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:461"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:463: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var43.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:463"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var43.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:463"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_148
#AT_START_149
at_fn_group_banner 149 'mat5_uncompressed_readslab_le.at:467' \
  "Read slab of complex int16 array from struct" "   " 3
at_xfail=no
(
  $as_echo "149. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:469: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var44.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:469"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var44.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:469"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:471: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var44.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:471"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var44.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:471"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:473: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var44.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:473"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var44.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:473"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_149
#AT_START_150
at_fn_group_banner 150 'mat5_uncompressed_readslab_le.at:477' \
  "Read slab of complex uint16 array from struct" "  " 3
at_xfail=no
(
  $as_echo "150. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:479: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var45.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:479"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var45.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:479"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:481: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var45.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:481"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var45.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:481"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:483: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var45.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:483"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var45.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:483"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_150
#AT_START_151
at_fn_group_banner 151 'mat5_uncompressed_readslab_le.at:487' \
  "Read slab of complex int8 array from struct" "    " 3
at_xfail=no
(
  $as_echo "151. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:489: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var46.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:489"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var46.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:489"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:491: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var46.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:491"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var46.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:491"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:493: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var46.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:493"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var46.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:493"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_151
#AT_START_152
at_fn_group_banner 152 'mat5_uncompressed_readslab_le.at:497' \
  "Read slab of complex uint8 array from struct" "   " 3
at_xfail=no
(
  $as_echo "152. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:499: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var47.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:499"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var47.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:499"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:501: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var47.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:501"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var47.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:501"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_le.at:503: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_le.mat var47.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_le.at:503"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_le.mat var47.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_le.at:503"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_152
#AT_START_153
at_fn_group_banner 153 'mat5_compressed_read_le.at:27' \
  "Read 2D double array" "                           " 4
at_xfail=no
(
  $as_echo "153. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:28" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:28"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:29: cp \$srcdir/results/read-var1.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var1"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:29"
( $at_check_trace; cp $srcdir/results/read-var1.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:29"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:31: cp \$srcdir/results/dump-var1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var1"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:31"
( $at_check_trace; cp $srcdir/results/dump-var1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:31"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_153
#AT_START_154
at_fn_group_banner 154 'mat5_compressed_read_le.at:35' \
  "Read 2D single array" "                           " 4
at_xfail=no
(
  $as_echo "154. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:36" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:36"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:37: cp \$srcdir/results/read-var2.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var2"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:37"
( $at_check_trace; cp $srcdir/results/read-var2.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:37"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_154
#AT_START_155
at_fn_group_banner 155 'mat5_compressed_read_le.at:41' \
  "Read 2D int64 array" "                            " 4
at_xfail=no
(
  $as_echo "155. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:42" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:42"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:43: cp \$srcdir/results/read-var3.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var3"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:43"
( $at_check_trace; cp $srcdir/results/read-var3.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var3
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:43"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_155
#AT_START_156
at_fn_group_banner 156 'mat5_compressed_read_le.at:47' \
  "Read 2D uint64 array" "                           " 4
at_xfail=no
(
  $as_echo "156. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:48" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:48"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:49: cp \$srcdir/results/read-var4.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var4"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:49"
( $at_check_trace; cp $srcdir/results/read-var4.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var4
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:49"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_156
#AT_START_157
at_fn_group_banner 157 'mat5_compressed_read_le.at:53' \
  "Read 2D int32 array" "                            " 4
at_xfail=no
(
  $as_echo "157. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:54" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:54"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:55: cp \$srcdir/results/read-var5.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var5"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:55"
( $at_check_trace; cp $srcdir/results/read-var5.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var5
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:55"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_157
#AT_START_158
at_fn_group_banner 158 'mat5_compressed_read_le.at:59' \
  "Read 2D uint32 array" "                           " 4
at_xfail=no
(
  $as_echo "158. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:60" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:60"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:61: cp \$srcdir/results/read-var6.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var6"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:61"
( $at_check_trace; cp $srcdir/results/read-var6.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var6
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:61"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_158
#AT_START_159
at_fn_group_banner 159 'mat5_compressed_read_le.at:65' \
  "Read 2D int16 array" "                            " 4
at_xfail=no
(
  $as_echo "159. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:66" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:66"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:67: cp \$srcdir/results/read-var7.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var7"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:67"
( $at_check_trace; cp $srcdir/results/read-var7.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var7
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:67"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_159
#AT_START_160
at_fn_group_banner 160 'mat5_compressed_read_le.at:71' \
  "Read 2D uint16 array" "                           " 4
at_xfail=no
(
  $as_echo "160. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:72" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:72"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:73: cp \$srcdir/results/read-var8.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var8"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:73"
( $at_check_trace; cp $srcdir/results/read-var8.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var8
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:73"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_160
#AT_START_161
at_fn_group_banner 161 'mat5_compressed_read_le.at:77' \
  "Read 2D int8 array" "                             " 4
at_xfail=no
(
  $as_echo "161. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:78" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:78"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:79: cp \$srcdir/results/read-var9.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var9"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:79"
( $at_check_trace; cp $srcdir/results/read-var9.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var9
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:79"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_161
#AT_START_162
at_fn_group_banner 162 'mat5_compressed_read_le.at:83' \
  "Read 2D uint8 array" "                            " 4
at_xfail=no
(
  $as_echo "162. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:84" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:84"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:85: cp \$srcdir/results/read-var10.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var10"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:85"
( $at_check_trace; cp $srcdir/results/read-var10.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var10
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:85"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_162
#AT_START_163
at_fn_group_banner 163 'mat5_compressed_read_le.at:89' \
  "Read 2D complex double array" "                   " 4
at_xfail=no
(
  $as_echo "163. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:90" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:90"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:91: cp \$srcdir/results/read-var11.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var11"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:91"
( $at_check_trace; cp $srcdir/results/read-var11.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var11
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:91"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:93: cp \$srcdir/results/dump-var11.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var11"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:93"
( $at_check_trace; cp $srcdir/results/dump-var11.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var11
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:93"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_163
#AT_START_164
at_fn_group_banner 164 'mat5_compressed_read_le.at:97' \
  "Read 2D complex single array" "                   " 4
at_xfail=no
(
  $as_echo "164. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:98" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:98"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:99: cp \$srcdir/results/read-var12.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var12"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:99"
( $at_check_trace; cp $srcdir/results/read-var12.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var12
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:99"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_164
#AT_START_165
at_fn_group_banner 165 'mat5_compressed_read_le.at:103' \
  "Read 2D complex int64 array" "                    " 4
at_xfail=no
(
  $as_echo "165. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:104" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:104"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:105: cp \$srcdir/results/read-var13.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var13"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:105"
( $at_check_trace; cp $srcdir/results/read-var13.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var13
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:105"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_165
#AT_START_166
at_fn_group_banner 166 'mat5_compressed_read_le.at:109' \
  "Read 2D complex uint64 array" "                   " 4
at_xfail=no
(
  $as_echo "166. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:110" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:110"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:111: cp \$srcdir/results/read-var14.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var14"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:111"
( $at_check_trace; cp $srcdir/results/read-var14.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var14
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:111"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_166
#AT_START_167
at_fn_group_banner 167 'mat5_compressed_read_le.at:115' \
  "Read 2D complex int32 array" "                    " 4
at_xfail=no
(
  $as_echo "167. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:116" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:116"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:117: cp \$srcdir/results/read-var15.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var15"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:117"
( $at_check_trace; cp $srcdir/results/read-var15.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var15
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:117"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_167
#AT_START_168
at_fn_group_banner 168 'mat5_compressed_read_le.at:121' \
  "Read 2D complex uint32 array" "                   " 4
at_xfail=no
(
  $as_echo "168. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:122" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:122"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:123: cp \$srcdir/results/read-var16.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var16"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:123"
( $at_check_trace; cp $srcdir/results/read-var16.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var16
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:123"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_168
#AT_START_169
at_fn_group_banner 169 'mat5_compressed_read_le.at:127' \
  "Read 2D complex int16 array" "                    " 4
at_xfail=no
(
  $as_echo "169. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:128" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:128"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:129: cp \$srcdir/results/read-var17.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var17"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:129"
( $at_check_trace; cp $srcdir/results/read-var17.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var17
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:129"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_169
#AT_START_170
at_fn_group_banner 170 'mat5_compressed_read_le.at:133' \
  "Read 2D complex uint16 array" "                   " 4
at_xfail=no
(
  $as_echo "170. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:134" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:134"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:135: cp \$srcdir/results/read-var18.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var18"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:135"
( $at_check_trace; cp $srcdir/results/read-var18.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var18
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:135"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_170
#AT_START_171
at_fn_group_banner 171 'mat5_compressed_read_le.at:139' \
  "Read 2D complex int8 array" "                     " 4
at_xfail=no
(
  $as_echo "171. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:140" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:140"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:141: cp \$srcdir/results/read-var19.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var19"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:141"
( $at_check_trace; cp $srcdir/results/read-var19.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var19
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:141"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_171
#AT_START_172
at_fn_group_banner 172 'mat5_compressed_read_le.at:145' \
  "Read 2D complex uint8 array" "                    " 4
at_xfail=no
(
  $as_echo "172. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:146" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:146"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:147: cp \$srcdir/results/read-var20.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var20"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:147"
( $at_check_trace; cp $srcdir/results/read-var20.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var20
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:147"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_172
#AT_START_173
at_fn_group_banner 173 'mat5_compressed_read_le.at:151' \
  "Read 2D logical array" "                          " 4
at_xfail=no
(
  $as_echo "173. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:152" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:152"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:153: cp \$srcdir/results/read-var90.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var90"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:153"
( $at_check_trace; cp $srcdir/results/read-var90.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var90
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:153"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_173
#AT_START_174
at_fn_group_banner 174 'mat5_compressed_read_le.at:157' \
  "Read sparse double array" "                       " 4
at_xfail=no
(
  $as_echo "174. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:158" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:158"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:159: cp \$srcdir/results/read-var21.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var21"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:159"
( $at_check_trace; cp $srcdir/results/read-var21.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var21
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:159"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_174
#AT_START_175
at_fn_group_banner 175 'mat5_compressed_read_le.at:163' \
  "Read sparse complex double array" "               " 4
at_xfail=no
(
  $as_echo "175. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:164" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:164"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:165: cp \$srcdir/results/read-var22.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var22"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:165"
( $at_check_trace; cp $srcdir/results/read-var22.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var22
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:165"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_175
#AT_START_176
at_fn_group_banner 176 'mat5_compressed_read_le.at:169' \
  "Read empty array" "                               " 4
at_xfail=no
(
  $as_echo "176. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_read_le.at:171" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:171"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:172: cp \$srcdir/results/read-var23.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var23"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:172"
( $at_check_trace; cp $srcdir/results/read-var23.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var23
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:172"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_176
#AT_START_177
at_fn_group_banner 177 'mat5_compressed_read_le.at:176' \
  "Read 2D character array" "                        " 4
at_xfail=no
(
  $as_echo "177. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:177" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:177"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:178: cp \$srcdir/results/read-var24.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var24"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:178"
( $at_check_trace; cp $srcdir/results/read-var24.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var24
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:178"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_177
#AT_START_178
at_fn_group_banner 178 'mat5_compressed_read_le.at:182' \
  "Read empty struct" "                              " 4
at_xfail=no
(
  $as_echo "178. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_read_le.at:184" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:184"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:185: cp \$srcdir/results/read-var25.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var25"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:185"
( $at_check_trace; cp $srcdir/results/read-var25.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var25
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:185"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_178
#AT_START_179
at_fn_group_banner 179 'mat5_compressed_read_le.at:189' \
  "Read empty struct with fields" "                  " 4
at_xfail=no
(
  $as_echo "179. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_read_le.at:191" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:191"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:192: cp \$srcdir/results/read-var26.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var26"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:192"
( $at_check_trace; cp $srcdir/results/read-var26.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var26
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:192"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_179
#AT_START_180
at_fn_group_banner 180 'mat5_compressed_read_le.at:196' \
  "Read struct with empty fields" "                  " 4
at_xfail=no
(
  $as_echo "180. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_read_le.at:198" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:198"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:199: cp \$srcdir/results/read-var27.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var27"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:199"
( $at_check_trace; cp $srcdir/results/read-var27.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var27
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:199"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_180
#AT_START_181
at_fn_group_banner 181 'mat5_compressed_read_le.at:203' \
  "Read struct with double fields" "                 " 4
at_xfail=no
(
  $as_echo "181. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:204" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:204"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:205: cp \$srcdir/results/read-var28.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var28"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:205"
( $at_check_trace; cp $srcdir/results/read-var28.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var28
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:205"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_181
#AT_START_182
at_fn_group_banner 182 'mat5_compressed_read_le.at:209' \
  "Read struct with single fields" "                 " 4
at_xfail=no
(
  $as_echo "182. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:210" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:210"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:211: cp \$srcdir/results/read-var29.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var29"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:211"
( $at_check_trace; cp $srcdir/results/read-var29.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var29
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:211"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_182
#AT_START_183
at_fn_group_banner 183 'mat5_compressed_read_le.at:215' \
  "Read struct with int64 fields" "                  " 4
at_xfail=no
(
  $as_echo "183. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:216" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:216"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:217: cp \$srcdir/results/read-var30.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var30"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:217"
( $at_check_trace; cp $srcdir/results/read-var30.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var30
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:217"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_183
#AT_START_184
at_fn_group_banner 184 'mat5_compressed_read_le.at:221' \
  "Read struct with uint64 fields" "                 " 4
at_xfail=no
(
  $as_echo "184. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:222" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:222"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:223: cp \$srcdir/results/read-var31.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var31"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:223"
( $at_check_trace; cp $srcdir/results/read-var31.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var31
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:223"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_184
#AT_START_185
at_fn_group_banner 185 'mat5_compressed_read_le.at:227' \
  "Read struct with int32 fields" "                  " 4
at_xfail=no
(
  $as_echo "185. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:228" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:228"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:229: cp \$srcdir/results/read-var32.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var32"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:229"
( $at_check_trace; cp $srcdir/results/read-var32.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var32
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:229"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_185
#AT_START_186
at_fn_group_banner 186 'mat5_compressed_read_le.at:233' \
  "Read struct with uint32 fields" "                 " 4
at_xfail=no
(
  $as_echo "186. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:234" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:234"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:235: cp \$srcdir/results/read-var33.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var33"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:235"
( $at_check_trace; cp $srcdir/results/read-var33.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var33
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:235"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_186
#AT_START_187
at_fn_group_banner 187 'mat5_compressed_read_le.at:239' \
  "Read struct with int16 fields" "                  " 4
at_xfail=no
(
  $as_echo "187. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:240" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:240"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:241: cp \$srcdir/results/read-var34.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var34"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:241"
( $at_check_trace; cp $srcdir/results/read-var34.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var34
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:241"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_187
#AT_START_188
at_fn_group_banner 188 'mat5_compressed_read_le.at:245' \
  "Read struct with uint16 fields" "                 " 4
at_xfail=no
(
  $as_echo "188. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:246" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:246"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:247: cp \$srcdir/results/read-var35.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var35"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:247"
( $at_check_trace; cp $srcdir/results/read-var35.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var35
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:247"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_188
#AT_START_189
at_fn_group_banner 189 'mat5_compressed_read_le.at:251' \
  "Read struct with int8 fields" "                   " 4
at_xfail=no
(
  $as_echo "189. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:252" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:252"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:253: cp \$srcdir/results/read-var36.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var36"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:253"
( $at_check_trace; cp $srcdir/results/read-var36.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var36
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:253"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_189
#AT_START_190
at_fn_group_banner 190 'mat5_compressed_read_le.at:257' \
  "Read struct with uint8 fields" "                  " 4
at_xfail=no
(
  $as_echo "190. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:258" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:258"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:259: cp \$srcdir/results/read-var37.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var37"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:259"
( $at_check_trace; cp $srcdir/results/read-var37.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var37
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:259"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_190
#AT_START_191
at_fn_group_banner 191 'mat5_compressed_read_le.at:263' \
  "Read struct with complex double fields" "         " 4
at_xfail=no
(
  $as_echo "191. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:264" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:264"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:265: cp \$srcdir/results/read-var38.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var38"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:265"
( $at_check_trace; cp $srcdir/results/read-var38.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var38
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:265"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_191
#AT_START_192
at_fn_group_banner 192 'mat5_compressed_read_le.at:269' \
  "Read struct with complex single fields" "         " 4
at_xfail=no
(
  $as_echo "192. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:270" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:270"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:271: cp \$srcdir/results/read-var39.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var39"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:271"
( $at_check_trace; cp $srcdir/results/read-var39.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var39
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:271"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_192
#AT_START_193
at_fn_group_banner 193 'mat5_compressed_read_le.at:275' \
  "Read struct with complex int64 fields" "          " 4
at_xfail=no
(
  $as_echo "193. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:276" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:276"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:277: cp \$srcdir/results/read-var40.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var40"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:277"
( $at_check_trace; cp $srcdir/results/read-var40.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var40
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:277"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_193
#AT_START_194
at_fn_group_banner 194 'mat5_compressed_read_le.at:281' \
  "Read struct with complex uint64 fields" "         " 4
at_xfail=no
(
  $as_echo "194. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:282" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:282"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:283: cp \$srcdir/results/read-var41.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var41"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:283"
( $at_check_trace; cp $srcdir/results/read-var41.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var41
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:283"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_194
#AT_START_195
at_fn_group_banner 195 'mat5_compressed_read_le.at:287' \
  "Read struct with complex int32 fields" "          " 4
at_xfail=no
(
  $as_echo "195. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:288" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:288"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:289: cp \$srcdir/results/read-var42.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var42"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:289"
( $at_check_trace; cp $srcdir/results/read-var42.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var42
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:289"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_195
#AT_START_196
at_fn_group_banner 196 'mat5_compressed_read_le.at:293' \
  "Read struct with complex uint32 fields" "         " 4
at_xfail=no
(
  $as_echo "196. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:294" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:294"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:295: cp \$srcdir/results/read-var43.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var43"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:295"
( $at_check_trace; cp $srcdir/results/read-var43.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var43
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:295"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_196
#AT_START_197
at_fn_group_banner 197 'mat5_compressed_read_le.at:299' \
  "Read struct with complex int16 fields" "          " 4
at_xfail=no
(
  $as_echo "197. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:300" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:300"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:301: cp \$srcdir/results/read-var44.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var44"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:301"
( $at_check_trace; cp $srcdir/results/read-var44.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var44
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:301"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_197
#AT_START_198
at_fn_group_banner 198 'mat5_compressed_read_le.at:305' \
  "Read struct with complex uint16 fields" "         " 4
at_xfail=no
(
  $as_echo "198. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:306" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:306"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:307: cp \$srcdir/results/read-var45.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var45"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:307"
( $at_check_trace; cp $srcdir/results/read-var45.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var45
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:307"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_198
#AT_START_199
at_fn_group_banner 199 'mat5_compressed_read_le.at:311' \
  "Read struct with complex int8 fields" "           " 4
at_xfail=no
(
  $as_echo "199. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:312" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:312"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:313: cp \$srcdir/results/read-var46.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var46"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:313"
( $at_check_trace; cp $srcdir/results/read-var46.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var46
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:313"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_199
#AT_START_200
at_fn_group_banner 200 'mat5_compressed_read_le.at:317' \
  "Read struct with complex uint8 fields" "          " 4
at_xfail=no
(
  $as_echo "200. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:318" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:318"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:319: cp \$srcdir/results/read-var47.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var47"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:319"
( $at_check_trace; cp $srcdir/results/read-var47.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var47
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:319"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_200
#AT_START_201
at_fn_group_banner 201 'mat5_compressed_read_le.at:323' \
  "Read struct with logical fields" "                " 4
at_xfail=no
(
  $as_echo "201. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:324" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:324"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:325: cp \$srcdir/results/read-var91.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var91"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:325"
( $at_check_trace; cp $srcdir/results/read-var91.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var91
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:325"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_201
#AT_START_202
at_fn_group_banner 202 'mat5_compressed_read_le.at:329' \
  "Read struct with sparse double fields" "          " 4
at_xfail=no
(
  $as_echo "202. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:330" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:330"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:331: cp \$srcdir/results/read-var48.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var48"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:331"
( $at_check_trace; cp $srcdir/results/read-var48.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var48
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:331"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_202
#AT_START_203
at_fn_group_banner 203 'mat5_compressed_read_le.at:335' \
  "Read struct with sparse complex double fields" "  " 4
at_xfail=no
(
  $as_echo "203. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:336" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:336"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:337: cp \$srcdir/results/read-var49.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var49"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:337"
( $at_check_trace; cp $srcdir/results/read-var49.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var49
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:337"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_203
#AT_START_204
at_fn_group_banner 204 'mat5_compressed_read_le.at:341' \
  "Read struct with character fields" "              " 4
at_xfail=no
(
  $as_echo "204. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:342" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:342"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:343: cp \$srcdir/results/read-var50.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var50"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:343"
( $at_check_trace; cp $srcdir/results/read-var50.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var50
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:343"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_204
#AT_START_205
at_fn_group_banner 205 'mat5_compressed_read_le.at:347' \
  "Read empty cell array" "                          " 4
at_xfail=no
(
  $as_echo "205. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_read_le.at:349" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:349"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:350: cp \$srcdir/results/read-var51.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var51"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:350"
( $at_check_trace; cp $srcdir/results/read-var51.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var51
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:350"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_205
#AT_START_206
at_fn_group_banner 206 'mat5_compressed_read_le.at:354' \
  "Read cell array with empty arrays" "              " 4
at_xfail=no
(
  $as_echo "206. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_read_le.at:356" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:356"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:357: cp \$srcdir/results/read-var52.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var52"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:357"
( $at_check_trace; cp $srcdir/results/read-var52.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var52
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:357"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_206
#AT_START_207
at_fn_group_banner 207 'mat5_compressed_read_le.at:361' \
  "Read cell array with double arrays" "             " 4
at_xfail=no
(
  $as_echo "207. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:362" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:362"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:363: cp \$srcdir/results/read-var53.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var53"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:363"
( $at_check_trace; cp $srcdir/results/read-var53.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var53
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:363"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_207
#AT_START_208
at_fn_group_banner 208 'mat5_compressed_read_le.at:367' \
  "Read cell array with single arrays" "             " 4
at_xfail=no
(
  $as_echo "208. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:368" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:368"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:369: cp \$srcdir/results/read-var54.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var54"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:369"
( $at_check_trace; cp $srcdir/results/read-var54.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var54
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:369"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_208
#AT_START_209
at_fn_group_banner 209 'mat5_compressed_read_le.at:373' \
  "Read cell array with int64 arrays" "              " 4
at_xfail=no
(
  $as_echo "209. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:374" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:374"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:375: cp \$srcdir/results/read-var55.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var55"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:375"
( $at_check_trace; cp $srcdir/results/read-var55.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var55
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:375"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_209
#AT_START_210
at_fn_group_banner 210 'mat5_compressed_read_le.at:379' \
  "Read cell array with uint64 arrays" "             " 4
at_xfail=no
(
  $as_echo "210. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:380" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:380"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:381: cp \$srcdir/results/read-var56.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var56"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:381"
( $at_check_trace; cp $srcdir/results/read-var56.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var56
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:381"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_210
#AT_START_211
at_fn_group_banner 211 'mat5_compressed_read_le.at:385' \
  "Read cell array with int32 arrays" "              " 4
at_xfail=no
(
  $as_echo "211. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:386" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:386"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:387: cp \$srcdir/results/read-var57.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var57"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:387"
( $at_check_trace; cp $srcdir/results/read-var57.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var57
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:387"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_211
#AT_START_212
at_fn_group_banner 212 'mat5_compressed_read_le.at:391' \
  "Read cell array with uint32 arrays" "             " 4
at_xfail=no
(
  $as_echo "212. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:392" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:392"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:393: cp \$srcdir/results/read-var58.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var58"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:393"
( $at_check_trace; cp $srcdir/results/read-var58.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var58
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:393"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_212
#AT_START_213
at_fn_group_banner 213 'mat5_compressed_read_le.at:397' \
  "Read cell array with int16 arrays" "              " 4
at_xfail=no
(
  $as_echo "213. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:398" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:398"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:399: cp \$srcdir/results/read-var59.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var59"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:399"
( $at_check_trace; cp $srcdir/results/read-var59.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var59
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:399"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_213
#AT_START_214
at_fn_group_banner 214 'mat5_compressed_read_le.at:403' \
  "Read cell array with uint16 arrays" "             " 4
at_xfail=no
(
  $as_echo "214. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:404" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:404"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:405: cp \$srcdir/results/read-var60.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var60"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:405"
( $at_check_trace; cp $srcdir/results/read-var60.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var60
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:405"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_214
#AT_START_215
at_fn_group_banner 215 'mat5_compressed_read_le.at:409' \
  "Read cell array with int8 arrays" "               " 4
at_xfail=no
(
  $as_echo "215. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:410" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:410"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:411: cp \$srcdir/results/read-var61.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var61"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:411"
( $at_check_trace; cp $srcdir/results/read-var61.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var61
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:411"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_215
#AT_START_216
at_fn_group_banner 216 'mat5_compressed_read_le.at:415' \
  "Read cell array with uint8 arrays" "              " 4
at_xfail=no
(
  $as_echo "216. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:416" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:416"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:417: cp \$srcdir/results/read-var62.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var62"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:417"
( $at_check_trace; cp $srcdir/results/read-var62.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var62
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:417"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_216
#AT_START_217
at_fn_group_banner 217 'mat5_compressed_read_le.at:421' \
  "Read cell array with logical arrays" "            " 4
at_xfail=no
(
  $as_echo "217. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:422" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:422"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:423: cp \$srcdir/results/read-var92.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var92"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:423"
( $at_check_trace; cp $srcdir/results/read-var92.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var92
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:423"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_217
#AT_START_218
at_fn_group_banner 218 'mat5_compressed_read_le.at:427' \
  "Read cell array with sparse double arrays" "      " 4
at_xfail=no
(
  $as_echo "218. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:428" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:428"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:429: cp \$srcdir/results/read-var63.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var63"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:429"
( $at_check_trace; cp $srcdir/results/read-var63.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var63
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:429"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_218
#AT_START_219
at_fn_group_banner 219 'mat5_compressed_read_le.at:433' \
  "Read cell array with sparse complex double arrays" "" 4
at_xfail=no
(
  $as_echo "219. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:434" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:434"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:435: cp \$srcdir/results/read-var64.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var64"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:435"
( $at_check_trace; cp $srcdir/results/read-var64.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var64
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:435"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_219
#AT_START_220
at_fn_group_banner 220 'mat5_compressed_read_le.at:439' \
  "Read cell array with character arrays" "          " 4
at_xfail=no
(
  $as_echo "220. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:440" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:440"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:441: cp \$srcdir/results/read-var65.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var65"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:441"
( $at_check_trace; cp $srcdir/results/read-var65.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var65
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:441"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_220
#AT_START_221
at_fn_group_banner 221 'mat5_compressed_read_le.at:445' \
  "Read cell array with empty structs" "             " 4
at_xfail=no
(
  $as_echo "221. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_read_le.at:447" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:447"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:448: cp \$srcdir/results/read-var66.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var66"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:448"
( $at_check_trace; cp $srcdir/results/read-var66.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var66
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:448"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_221
#AT_START_222
at_fn_group_banner 222 'mat5_compressed_read_le.at:452' \
  "Read cell array with structs (numeric fields)" "  " 4
at_xfail=no
(
  $as_echo "222. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:453" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:453"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:454: cp \$srcdir/results/read-var67.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var67"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:454"
( $at_check_trace; cp $srcdir/results/read-var67.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var67
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:454"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_222
#AT_START_223
at_fn_group_banner 223 'mat5_compressed_read_le.at:458' \
  "Read cell array with structs (sparse fields)" "   " 4
at_xfail=no
(
  $as_echo "223. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:459" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:459"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:460: cp \$srcdir/results/read-var68.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var68"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:460"
( $at_check_trace; cp $srcdir/results/read-var68.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var68
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:460"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_223
#AT_START_224
at_fn_group_banner 224 'mat5_compressed_read_le.at:464' \
  "Read cell array with structs (character fields)" "" 4
at_xfail=no
(
  $as_echo "224. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_le.at:465" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:465"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:466: cp \$srcdir/results/read-var69.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_le.mat var69"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:466"
( $at_check_trace; cp $srcdir/results/read-var69.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_le.mat var69
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:466"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_224
#AT_START_225
at_fn_group_banner 225 'mat5_compressed_read_le.at:470' \
  "Read large struct" "                              " 4
at_xfail=no
(
  $as_echo "225. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_read_le.at:472" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_le.at:472"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_le.at:473: cp \$srcdir/results/getstructfield-large_struct_compressed.out expout
          \$builddir/test_mat getstructfield \$srcdir/datasets/large_struct_compressed_le.mat MA C"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_le.at:473"
( $at_check_trace; cp $srcdir/results/getstructfield-large_struct_compressed.out expout
          $builddir/test_mat getstructfield $srcdir/datasets/large_struct_compressed_le.mat MA C
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_le.at:473"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_225
#AT_START_226
at_fn_group_banner 226 'mat5_compressed_readslab_le.at:27' \
  "Read slab of double array" "                      " 4
at_xfail=no
(
  $as_echo "226. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:29" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:29"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:30: cp \$srcdir/results/dump-var70-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var70\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:30"
( $at_check_trace; cp $srcdir/results/dump-var70-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var70\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:30"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:32: cp \$srcdir/results/dump-var70-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var70\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:32"
( $at_check_trace; cp $srcdir/results/dump-var70-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var70\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:32"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:34: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_le.mat var70"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var70" "mat5_compressed_readslab_le.at:34"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var70
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:34"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:35: cp \$srcdir/results/dump-var7x-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var70\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:35"
( $at_check_trace; cp $srcdir/results/dump-var7x-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var70\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:35"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_226
#AT_START_227
at_fn_group_banner 227 'mat5_compressed_readslab_le.at:39' \
  "Read slab of single array" "                      " 4
at_xfail=no
(
  $as_echo "227. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:41" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:41"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:42: cp \$srcdir/results/dump-var71-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var71\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:42"
( $at_check_trace; cp $srcdir/results/dump-var71-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var71\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:42"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:44: cp \$srcdir/results/dump-var71-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var71\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:44"
( $at_check_trace; cp $srcdir/results/dump-var71-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var71\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:44"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:46: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_le.mat var71"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var71" "mat5_compressed_readslab_le.at:46"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var71
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:46"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:47: cp \$srcdir/results/dump-var7x-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var71\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:47"
( $at_check_trace; cp $srcdir/results/dump-var7x-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var71\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:47"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_227
#AT_START_228
at_fn_group_banner 228 'mat5_compressed_readslab_le.at:51' \
  "Read slab of int64 array" "                       " 4
at_xfail=no
(
  $as_echo "228. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:53" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:53"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:54: cp \$srcdir/results/dump-var72-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var72\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:54"
( $at_check_trace; cp $srcdir/results/dump-var72-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var72\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:54"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:56: cp \$srcdir/results/dump-var72-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var72\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:56"
( $at_check_trace; cp $srcdir/results/dump-var72-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var72\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:56"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:58: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_le.mat var72"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var72" "mat5_compressed_readslab_le.at:58"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var72
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:58"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:59: cp \$srcdir/results/dump-var7x-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var72\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:59"
( $at_check_trace; cp $srcdir/results/dump-var7x-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var72\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:59"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_228
#AT_START_229
at_fn_group_banner 229 'mat5_compressed_readslab_le.at:63' \
  "Read slab of uint64 array" "                      " 4
at_xfail=no
(
  $as_echo "229. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:65" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:65"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:66: cp \$srcdir/results/dump-var73-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var73\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:66"
( $at_check_trace; cp $srcdir/results/dump-var73-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var73\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:66"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:68: cp \$srcdir/results/dump-var73-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var73\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:68"
( $at_check_trace; cp $srcdir/results/dump-var73-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var73\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:68"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:70: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_le.mat var73"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var73" "mat5_compressed_readslab_le.at:70"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var73
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:70"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:71: cp \$srcdir/results/dump-var7x-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var73\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:71"
( $at_check_trace; cp $srcdir/results/dump-var7x-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var73\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:71"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_229
#AT_START_230
at_fn_group_banner 230 'mat5_compressed_readslab_le.at:75' \
  "Read slab of int32 array" "                       " 4
at_xfail=no
(
  $as_echo "230. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:77" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:77"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:78: cp \$srcdir/results/dump-var74-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var74\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:78"
( $at_check_trace; cp $srcdir/results/dump-var74-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var74\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:78"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:80: cp \$srcdir/results/dump-var74-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var74\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:80"
( $at_check_trace; cp $srcdir/results/dump-var74-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var74\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:80"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:82: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_le.mat var74"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var74" "mat5_compressed_readslab_le.at:82"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var74
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:82"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:83: cp \$srcdir/results/dump-var7x-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var74\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:83"
( $at_check_trace; cp $srcdir/results/dump-var7x-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var74\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:83"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_230
#AT_START_231
at_fn_group_banner 231 'mat5_compressed_readslab_le.at:87' \
  "Read slab of uint32 array" "                      " 4
at_xfail=no
(
  $as_echo "231. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:89" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:89"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:90: cp \$srcdir/results/dump-var75-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var75\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:90"
( $at_check_trace; cp $srcdir/results/dump-var75-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var75\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:90"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:92: cp \$srcdir/results/dump-var75-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var75\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:92"
( $at_check_trace; cp $srcdir/results/dump-var75-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var75\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:92"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:94: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_le.mat var75"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var75" "mat5_compressed_readslab_le.at:94"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var75
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:94"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:95: cp \$srcdir/results/dump-var7x-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var75\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:95"
( $at_check_trace; cp $srcdir/results/dump-var7x-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var75\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:95"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_231
#AT_START_232
at_fn_group_banner 232 'mat5_compressed_readslab_le.at:99' \
  "Read slab of int16 array" "                       " 4
at_xfail=no
(
  $as_echo "232. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:101" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:101"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:102: cp \$srcdir/results/dump-var76-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var76\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:102"
( $at_check_trace; cp $srcdir/results/dump-var76-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var76\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:102"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:104: cp \$srcdir/results/dump-var76-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var76\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:104"
( $at_check_trace; cp $srcdir/results/dump-var76-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var76\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:104"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:106: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_le.mat var76"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var76" "mat5_compressed_readslab_le.at:106"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var76
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:106"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:107: cp \$srcdir/results/dump-var7x-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var76\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:107"
( $at_check_trace; cp $srcdir/results/dump-var7x-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var76\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:107"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_232
#AT_START_233
at_fn_group_banner 233 'mat5_compressed_readslab_le.at:111' \
  "Read slab of uint16 array" "                      " 4
at_xfail=no
(
  $as_echo "233. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:113" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:113"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:114: cp \$srcdir/results/dump-var77-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var77\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:114"
( $at_check_trace; cp $srcdir/results/dump-var77-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var77\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:114"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:116: cp \$srcdir/results/dump-var77-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var77\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:116"
( $at_check_trace; cp $srcdir/results/dump-var77-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var77\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:116"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:118: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_le.mat var77"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var77" "mat5_compressed_readslab_le.at:118"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var77
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:118"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:119: cp \$srcdir/results/dump-var7x-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var77\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:119"
( $at_check_trace; cp $srcdir/results/dump-var7x-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var77\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:119"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_233
#AT_START_234
at_fn_group_banner 234 'mat5_compressed_readslab_le.at:123' \
  "Read slab of int8 array" "                        " 4
at_xfail=no
(
  $as_echo "234. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:125" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:125"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:126: cp \$srcdir/results/dump-var78-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var78\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:126"
( $at_check_trace; cp $srcdir/results/dump-var78-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var78\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:126"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:128: cp \$srcdir/results/dump-var78-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var78\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:128"
( $at_check_trace; cp $srcdir/results/dump-var78-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var78\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:128"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:130: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_le.mat var78"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var78" "mat5_compressed_readslab_le.at:130"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var78
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:130"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:131: cp \$srcdir/results/dump-var78-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var78\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:131"
( $at_check_trace; cp $srcdir/results/dump-var78-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var78\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:131"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_234
#AT_START_235
at_fn_group_banner 235 'mat5_compressed_readslab_le.at:135' \
  "Read slab of uint8 array" "                       " 4
at_xfail=no
(
  $as_echo "235. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:137" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:137"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:138: cp \$srcdir/results/dump-var79-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var79\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:138"
( $at_check_trace; cp $srcdir/results/dump-var79-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var79\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:138"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:140: cp \$srcdir/results/dump-var79-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var79\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:140"
( $at_check_trace; cp $srcdir/results/dump-var79-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var79\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:140"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:142: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_le.mat var79"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var79" "mat5_compressed_readslab_le.at:142"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var79
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:142"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:143: cp \$srcdir/results/dump-var79-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var79\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:143"
( $at_check_trace; cp $srcdir/results/dump-var79-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var79\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:143"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_235
#AT_START_236
at_fn_group_banner 236 'mat5_compressed_readslab_le.at:147' \
  "Read slab of complex double array" "              " 4
at_xfail=no
(
  $as_echo "236. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:149" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:149"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:150: cp \$srcdir/results/dump-var80-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var80\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:150"
( $at_check_trace; cp $srcdir/results/dump-var80-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var80\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:150"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:152: cp \$srcdir/results/dump-var80-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var80\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:152"
( $at_check_trace; cp $srcdir/results/dump-var80-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var80\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:152"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:154: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_le.mat var80"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var80" "mat5_compressed_readslab_le.at:154"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var80
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:154"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:155: cp \$srcdir/results/dump-var8x-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var80\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:155"
( $at_check_trace; cp $srcdir/results/dump-var8x-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var80\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:155"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_236
#AT_START_237
at_fn_group_banner 237 'mat5_compressed_readslab_le.at:159' \
  "Read slab of complex single array" "              " 4
at_xfail=no
(
  $as_echo "237. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:161" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:161"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:162: cp \$srcdir/results/dump-var81-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var81\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:162"
( $at_check_trace; cp $srcdir/results/dump-var81-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var81\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:162"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:164: cp \$srcdir/results/dump-var81-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var81\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:164"
( $at_check_trace; cp $srcdir/results/dump-var81-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var81\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:164"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:166: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_le.mat var81"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var81" "mat5_compressed_readslab_le.at:166"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var81
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:166"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:167: cp \$srcdir/results/dump-var8x-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var81\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:167"
( $at_check_trace; cp $srcdir/results/dump-var8x-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var81\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:167"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_237
#AT_START_238
at_fn_group_banner 238 'mat5_compressed_readslab_le.at:171' \
  "Read slab of complex int64 array" "               " 4
at_xfail=no
(
  $as_echo "238. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:173" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:173"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:174: cp \$srcdir/results/dump-var82-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var82\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:174"
( $at_check_trace; cp $srcdir/results/dump-var82-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var82\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:174"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:176: cp \$srcdir/results/dump-var82-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var82\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:176"
( $at_check_trace; cp $srcdir/results/dump-var82-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var82\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:176"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:178: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_le.mat var82"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var82" "mat5_compressed_readslab_le.at:178"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var82
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:178"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:179: cp \$srcdir/results/dump-var8x-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var82\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:179"
( $at_check_trace; cp $srcdir/results/dump-var8x-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var82\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:179"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_238
#AT_START_239
at_fn_group_banner 239 'mat5_compressed_readslab_le.at:183' \
  "Read slab of complex uint64 array" "              " 4
at_xfail=no
(
  $as_echo "239. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:185" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:185"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:186: cp \$srcdir/results/dump-var83-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var83\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:186"
( $at_check_trace; cp $srcdir/results/dump-var83-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var83\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:186"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:188: cp \$srcdir/results/dump-var83-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var83\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:188"
( $at_check_trace; cp $srcdir/results/dump-var83-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var83\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:188"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:190: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_le.mat var83"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var83" "mat5_compressed_readslab_le.at:190"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var83
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:190"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:191: cp \$srcdir/results/dump-var8x-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var83\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:191"
( $at_check_trace; cp $srcdir/results/dump-var8x-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var83\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:191"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_239
#AT_START_240
at_fn_group_banner 240 'mat5_compressed_readslab_le.at:195' \
  "Read slab of complex int32 array" "               " 4
at_xfail=no
(
  $as_echo "240. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:197" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:197"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:198: cp \$srcdir/results/dump-var84-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var84\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:198"
( $at_check_trace; cp $srcdir/results/dump-var84-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var84\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:198"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:200: cp \$srcdir/results/dump-var84-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var84\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:200"
( $at_check_trace; cp $srcdir/results/dump-var84-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var84\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:200"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:202: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_le.mat var84"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var84" "mat5_compressed_readslab_le.at:202"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var84
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:202"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:203: cp \$srcdir/results/dump-var8x-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var84\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:203"
( $at_check_trace; cp $srcdir/results/dump-var8x-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var84\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:203"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_240
#AT_START_241
at_fn_group_banner 241 'mat5_compressed_readslab_le.at:207' \
  "Read slab of complex uint32 array" "              " 4
at_xfail=no
(
  $as_echo "241. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:209" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:209"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:210: cp \$srcdir/results/dump-var85-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var85\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:210"
( $at_check_trace; cp $srcdir/results/dump-var85-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var85\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:210"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:212: cp \$srcdir/results/dump-var85-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var85\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:212"
( $at_check_trace; cp $srcdir/results/dump-var85-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var85\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:212"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:214: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_le.mat var85"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var85" "mat5_compressed_readslab_le.at:214"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var85
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:214"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:215: cp \$srcdir/results/dump-var8x-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var85\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:215"
( $at_check_trace; cp $srcdir/results/dump-var8x-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var85\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:215"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_241
#AT_START_242
at_fn_group_banner 242 'mat5_compressed_readslab_le.at:219' \
  "Read slab of complex int16 array" "               " 4
at_xfail=no
(
  $as_echo "242. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:221" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:221"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:222: cp \$srcdir/results/dump-var86-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var86\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:222"
( $at_check_trace; cp $srcdir/results/dump-var86-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var86\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:222"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:224: cp \$srcdir/results/dump-var86-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var86\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:224"
( $at_check_trace; cp $srcdir/results/dump-var86-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var86\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:224"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:226: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_le.mat var86"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var86" "mat5_compressed_readslab_le.at:226"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var86
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:226"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:227: cp \$srcdir/results/dump-var86-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var86\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:227"
( $at_check_trace; cp $srcdir/results/dump-var86-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var86\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:227"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_242
#AT_START_243
at_fn_group_banner 243 'mat5_compressed_readslab_le.at:231' \
  "Read slab of complex uint16 array" "              " 4
at_xfail=no
(
  $as_echo "243. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:233" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:233"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:234: cp \$srcdir/results/dump-var87-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var87\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:234"
( $at_check_trace; cp $srcdir/results/dump-var87-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var87\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:234"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:236: cp \$srcdir/results/dump-var87-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var87\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:236"
( $at_check_trace; cp $srcdir/results/dump-var87-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var87\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:236"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:238: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_le.mat var87"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var87" "mat5_compressed_readslab_le.at:238"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var87
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:238"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:239: cp \$srcdir/results/dump-var87-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var87\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:239"
( $at_check_trace; cp $srcdir/results/dump-var87-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var87\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:239"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_243
#AT_START_244
at_fn_group_banner 244 'mat5_compressed_readslab_le.at:243' \
  "Read slab of complex int8 array" "                " 4
at_xfail=no
(
  $as_echo "244. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:245" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:245"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:246: cp \$srcdir/results/dump-var88-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var88\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:246"
( $at_check_trace; cp $srcdir/results/dump-var88-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var88\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:246"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:248: cp \$srcdir/results/dump-var88-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var88\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:248"
( $at_check_trace; cp $srcdir/results/dump-var88-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var88\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:248"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:250: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_le.mat var88"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var88" "mat5_compressed_readslab_le.at:250"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var88
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:250"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:251: cp \$srcdir/results/dump-var88-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var88\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:251"
( $at_check_trace; cp $srcdir/results/dump-var88-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var88\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:251"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_244
#AT_START_245
at_fn_group_banner 245 'mat5_compressed_readslab_le.at:255' \
  "Read slab of complex uint8 array" "               " 4
at_xfail=no
(
  $as_echo "245. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:257" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:257"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:258: cp \$srcdir/results/dump-var89-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var89\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:258"
( $at_check_trace; cp $srcdir/results/dump-var89-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var89\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:258"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:260: cp \$srcdir/results/dump-var89-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var89\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:260"
( $at_check_trace; cp $srcdir/results/dump-var89-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var89\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:260"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:262: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_le.mat var89"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var89" "mat5_compressed_readslab_le.at:262"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_le.mat var89
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:262"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:263: cp \$srcdir/results/dump-var89-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var89\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:263"
( $at_check_trace; cp $srcdir/results/dump-var89-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var89\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:263"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_245
#AT_START_246
at_fn_group_banner 246 'mat5_compressed_readslab_le.at:267' \
  "Read linear slab of double array" "               " 4
at_xfail=no
(
  $as_echo "246. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:269" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:269"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:270: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var70\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:270"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var70\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:270"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_246
#AT_START_247
at_fn_group_banner 247 'mat5_compressed_readslab_le.at:274' \
  "Read linear slab of single array" "               " 4
at_xfail=no
(
  $as_echo "247. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:276" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:276"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:277: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var71\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:277"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var71\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:277"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_247
#AT_START_248
at_fn_group_banner 248 'mat5_compressed_readslab_le.at:281' \
  "Read linear slab of int64 array" "                " 4
at_xfail=no
(
  $as_echo "248. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:283" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:283"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:284: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var72\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:284"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var72\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:284"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_248
#AT_START_249
at_fn_group_banner 249 'mat5_compressed_readslab_le.at:288' \
  "Read linear slab of uint64 array" "               " 4
at_xfail=no
(
  $as_echo "249. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:290" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:290"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:291: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var73\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:291"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var73\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:291"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_249
#AT_START_250
at_fn_group_banner 250 'mat5_compressed_readslab_le.at:295' \
  "Read linear slab of int32 array" "                " 4
at_xfail=no
(
  $as_echo "250. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:297" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:297"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:298: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var74\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:298"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var74\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:298"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_250
#AT_START_251
at_fn_group_banner 251 'mat5_compressed_readslab_le.at:302' \
  "Read linear slab of uint32 array" "               " 4
at_xfail=no
(
  $as_echo "251. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:304" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:304"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:305: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var75\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:305"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var75\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:305"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_251
#AT_START_252
at_fn_group_banner 252 'mat5_compressed_readslab_le.at:309' \
  "Read linear slab of int16 array" "                " 4
at_xfail=no
(
  $as_echo "252. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:311" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:311"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:312: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var76\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:312"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var76\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:312"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_252
#AT_START_253
at_fn_group_banner 253 'mat5_compressed_readslab_le.at:316' \
  "Read linear slab of uint16 array" "               " 4
at_xfail=no
(
  $as_echo "253. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:318" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:318"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:319: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var77\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:319"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var77\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:319"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_253
#AT_START_254
at_fn_group_banner 254 'mat5_compressed_readslab_le.at:323' \
  "Read linear slab of int8 array" "                 " 4
at_xfail=no
(
  $as_echo "254. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:325" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:325"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:326: cp \$srcdir/results/dump-var78-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var78\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:326"
( $at_check_trace; cp $srcdir/results/dump-var78-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var78\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:326"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_254
#AT_START_255
at_fn_group_banner 255 'mat5_compressed_readslab_le.at:330' \
  "Read linear slab of uint8 array" "                " 4
at_xfail=no
(
  $as_echo "255. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:332" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:332"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:333: cp \$srcdir/results/dump-var79-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var79\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:333"
( $at_check_trace; cp $srcdir/results/dump-var79-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var79\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:333"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_255
#AT_START_256
at_fn_group_banner 256 'mat5_compressed_readslab_le.at:337' \
  "Read linear slab of complex double array" "       " 4
at_xfail=no
(
  $as_echo "256. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:339" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:339"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:340: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var80\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:340"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var80\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:340"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_256
#AT_START_257
at_fn_group_banner 257 'mat5_compressed_readslab_le.at:344' \
  "Read linear slab of complex single array" "       " 4
at_xfail=no
(
  $as_echo "257. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:346" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:346"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:347: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var81\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:347"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var81\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:347"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_257
#AT_START_258
at_fn_group_banner 258 'mat5_compressed_readslab_le.at:351' \
  "Read linear slab of complex int64 array" "        " 4
at_xfail=no
(
  $as_echo "258. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:353" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:353"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:354: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var82\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:354"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var82\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:354"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_258
#AT_START_259
at_fn_group_banner 259 'mat5_compressed_readslab_le.at:358' \
  "Read linear slab of complex uint64 array" "       " 4
at_xfail=no
(
  $as_echo "259. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:360" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:360"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:361: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var83\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:361"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var83\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:361"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_259
#AT_START_260
at_fn_group_banner 260 'mat5_compressed_readslab_le.at:365' \
  "Read linear slab of complex int32 array" "        " 4
at_xfail=no
(
  $as_echo "260. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:367" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:367"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:368: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var84\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:368"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var84\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:368"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_260
#AT_START_261
at_fn_group_banner 261 'mat5_compressed_readslab_le.at:372' \
  "Read linear slab of complex uint32 array" "       " 4
at_xfail=no
(
  $as_echo "261. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:374" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:374"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:375: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var85\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:375"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var85\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:375"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_261
#AT_START_262
at_fn_group_banner 262 'mat5_compressed_readslab_le.at:379' \
  "Read linear slab of complex int16 array" "        " 4
at_xfail=no
(
  $as_echo "262. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:381" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:381"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:382: cp \$srcdir/results/dump-var86-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var86\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:382"
( $at_check_trace; cp $srcdir/results/dump-var86-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var86\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:382"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_262
#AT_START_263
at_fn_group_banner 263 'mat5_compressed_readslab_le.at:386' \
  "Read linear slab of complex uint16 array" "       " 4
at_xfail=no
(
  $as_echo "263. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:388" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:388"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:389: cp \$srcdir/results/dump-var87-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var87\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:389"
( $at_check_trace; cp $srcdir/results/dump-var87-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var87\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:389"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_263
#AT_START_264
at_fn_group_banner 264 'mat5_compressed_readslab_le.at:393' \
  "Read linear slab of complex int8 array" "         " 4
at_xfail=no
(
  $as_echo "264. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:395" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:395"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:396: cp \$srcdir/results/dump-var88-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var88\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:396"
( $at_check_trace; cp $srcdir/results/dump-var88-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var88\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:396"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_264
#AT_START_265
at_fn_group_banner 265 'mat5_compressed_readslab_le.at:400' \
  "Read linear slab of complex uint8 array" "        " 4
at_xfail=no
(
  $as_echo "265. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:402" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:402"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:403: cp \$srcdir/results/dump-var89-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var89\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:403"
( $at_check_trace; cp $srcdir/results/dump-var89-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var89\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:403"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_265
#AT_START_266
at_fn_group_banner 266 'mat5_compressed_readslab_le.at:407' \
  "Read slab of double array from struct" "          " 4
at_xfail=no
(
  $as_echo "266. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:409" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:409"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:410: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var28.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:410"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var28.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:410"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:412: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var28.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:412"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var28.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:412"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:414: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var28.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:414"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var28.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:414"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_266
#AT_START_267
at_fn_group_banner 267 'mat5_compressed_readslab_le.at:418' \
  "Read slab of single array from struct" "          " 4
at_xfail=no
(
  $as_echo "267. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:420" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:420"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:421: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var29.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:421"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var29.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:421"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:423: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var29.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:423"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var29.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:423"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:425: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var29.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:425"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var29.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:425"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_267
#AT_START_268
at_fn_group_banner 268 'mat5_compressed_readslab_le.at:429' \
  "Read slab of int64 array from struct" "           " 4
at_xfail=no
(
  $as_echo "268. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:431" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:431"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:432: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var30.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:432"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var30.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:432"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:434: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var30.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:434"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var30.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:434"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:436: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var30.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:436"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var30.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:436"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_268
#AT_START_269
at_fn_group_banner 269 'mat5_compressed_readslab_le.at:440' \
  "Read slab of uint64 array from struct" "          " 4
at_xfail=no
(
  $as_echo "269. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:442" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:442"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:443: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var31.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:443"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var31.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:443"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:445: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var31.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:445"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var31.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:445"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:447: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var31.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:447"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var31.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:447"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_269
#AT_START_270
at_fn_group_banner 270 'mat5_compressed_readslab_le.at:451' \
  "Read slab of int32 array from struct" "           " 4
at_xfail=no
(
  $as_echo "270. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:453" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:453"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:454: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var32.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:454"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var32.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:454"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:456: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var32.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:456"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var32.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:456"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:458: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var32.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:458"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var32.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:458"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_270
#AT_START_271
at_fn_group_banner 271 'mat5_compressed_readslab_le.at:462' \
  "Read slab of uint32 array from struct" "          " 4
at_xfail=no
(
  $as_echo "271. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:464" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:464"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:465: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var33.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:465"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var33.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:465"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:467: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var33.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:467"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var33.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:467"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:469: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var33.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:469"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var33.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:469"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_271
#AT_START_272
at_fn_group_banner 272 'mat5_compressed_readslab_le.at:473' \
  "Read slab of int16 array from struct" "           " 4
at_xfail=no
(
  $as_echo "272. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:475" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:475"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:476: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var34.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:476"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var34.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:476"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:478: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var34.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:478"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var34.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:478"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:480: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var34.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:480"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var34.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:480"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_272
#AT_START_273
at_fn_group_banner 273 'mat5_compressed_readslab_le.at:484' \
  "Read slab of uint16 array from struct" "          " 4
at_xfail=no
(
  $as_echo "273. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:486" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:486"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:487: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var35.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:487"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var35.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:487"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:489: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var35.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:489"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var35.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:489"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:491: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var35.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:491"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var35.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:491"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_273
#AT_START_274
at_fn_group_banner 274 'mat5_compressed_readslab_le.at:495' \
  "Read slab of int8 array from struct" "            " 4
at_xfail=no
(
  $as_echo "274. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:497" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:497"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:498: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var36.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:498"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var36.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:498"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:500: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var36.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:500"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var36.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:500"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:502: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var36.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:502"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var36.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:502"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_274
#AT_START_275
at_fn_group_banner 275 'mat5_compressed_readslab_le.at:506' \
  "Read slab of uint8 array from struct" "           " 4
at_xfail=no
(
  $as_echo "275. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:508" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:508"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:509: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var37.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:509"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var37.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:509"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:511: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var37.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:511"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var37.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:511"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:513: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var37.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:513"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var37.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:513"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_275
#AT_START_276
at_fn_group_banner 276 'mat5_compressed_readslab_le.at:517' \
  "Read slab of complex double array from struct" "  " 4
at_xfail=no
(
  $as_echo "276. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:519" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:519"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:520: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var38.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:520"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var38.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:520"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:522: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var38.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:522"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var38.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:522"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:524: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var38.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:524"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var38.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:524"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_276
#AT_START_277
at_fn_group_banner 277 'mat5_compressed_readslab_le.at:528' \
  "Read slab of complex single array from struct" "  " 4
at_xfail=no
(
  $as_echo "277. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:530" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:530"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:531: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var39.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:531"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var39.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:531"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:533: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var39.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:533"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var39.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:533"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:535: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var39.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:535"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var39.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:535"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_277
#AT_START_278
at_fn_group_banner 278 'mat5_compressed_readslab_le.at:539' \
  "Read slab of complex int64 array from struct" "   " 4
at_xfail=no
(
  $as_echo "278. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:541" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:541"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:542: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var40.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:542"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var40.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:542"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:544: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var40.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:544"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var40.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:544"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:546: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var40.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:546"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var40.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:546"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_278
#AT_START_279
at_fn_group_banner 279 'mat5_compressed_readslab_le.at:550' \
  "Read slab of complex uint64 array from struct" "  " 4
at_xfail=no
(
  $as_echo "279. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:552" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:552"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:553: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var41.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:553"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var41.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:553"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:555: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var41.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:555"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var41.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:555"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:557: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var41.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:557"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var41.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:557"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_279
#AT_START_280
at_fn_group_banner 280 'mat5_compressed_readslab_le.at:561' \
  "Read slab of complex int32 array from struct" "   " 4
at_xfail=no
(
  $as_echo "280. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:563" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:563"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:564: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var42.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:564"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var42.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:564"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:566: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var42.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:566"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var42.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:566"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:568: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var42.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:568"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var42.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:568"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_280
#AT_START_281
at_fn_group_banner 281 'mat5_compressed_readslab_le.at:572' \
  "Read slab of complex uint32 array from struct" "  " 4
at_xfail=no
(
  $as_echo "281. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:574" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:574"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:575: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var43.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:575"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var43.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:575"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:577: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var43.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:577"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var43.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:577"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:579: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var43.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:579"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var43.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:579"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_281
#AT_START_282
at_fn_group_banner 282 'mat5_compressed_readslab_le.at:583' \
  "Read slab of complex int16 array from struct" "   " 4
at_xfail=no
(
  $as_echo "282. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:585" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:585"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:586: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var44.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:586"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var44.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:586"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:588: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var44.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:588"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var44.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:588"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:590: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var44.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:590"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var44.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:590"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_282
#AT_START_283
at_fn_group_banner 283 'mat5_compressed_readslab_le.at:594' \
  "Read slab of complex uint16 array from struct" "  " 4
at_xfail=no
(
  $as_echo "283. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:596" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:596"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:597: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var45.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:597"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var45.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:597"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:599: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var45.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:599"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var45.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:599"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:601: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var45.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:601"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var45.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:601"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_283
#AT_START_284
at_fn_group_banner 284 'mat5_compressed_readslab_le.at:605' \
  "Read slab of complex int8 array from struct" "    " 4
at_xfail=no
(
  $as_echo "284. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:607" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:607"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:608: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var46.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:608"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var46.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:608"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:610: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var46.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:610"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var46.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:610"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:612: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var46.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:612"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var46.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:612"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_284
#AT_START_285
at_fn_group_banner 285 'mat5_compressed_readslab_le.at:616' \
  "Read slab of complex uint8 array from struct" "   " 4
at_xfail=no
(
  $as_echo "285. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_le.at:618" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_le.at:618"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:619: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var47.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:619"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var47.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:619"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:621: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var47.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:621"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var47.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:621"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_le.at:623: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_le.mat var47.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_le.at:623"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_le.mat var47.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_le.at:623"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_285
#AT_START_286
at_fn_group_banner 286 'mat5_uncompressed_read_be.at:27' \
  "Read 2D double array" "                           " 5
at_xfail=no
(
  $as_echo "286. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:28: cp \$srcdir/results/read-var1.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var1"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:28"
( $at_check_trace; cp $srcdir/results/read-var1.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:28"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:30: cp \$srcdir/results/dump-var1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var1"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:30"
( $at_check_trace; cp $srcdir/results/dump-var1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:30"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_286
#AT_START_287
at_fn_group_banner 287 'mat5_uncompressed_read_be.at:34' \
  "Read 2D single array" "                           " 5
at_xfail=no
(
  $as_echo "287. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:35: cp \$srcdir/results/read-var2.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var2"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:35"
( $at_check_trace; cp $srcdir/results/read-var2.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:35"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_287
#AT_START_288
at_fn_group_banner 288 'mat5_uncompressed_read_be.at:39' \
  "Read 2D int64 array" "                            " 5
at_xfail=no
(
  $as_echo "288. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:40: cp \$srcdir/results/read-var3.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var3"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:40"
( $at_check_trace; cp $srcdir/results/read-var3.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var3
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:40"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_288
#AT_START_289
at_fn_group_banner 289 'mat5_uncompressed_read_be.at:44' \
  "Read 2D uint64 array" "                           " 5
at_xfail=no
(
  $as_echo "289. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:45: cp \$srcdir/results/read-var4.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var4"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:45"
( $at_check_trace; cp $srcdir/results/read-var4.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var4
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:45"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_289
#AT_START_290
at_fn_group_banner 290 'mat5_uncompressed_read_be.at:49' \
  "Read 2D int32 array" "                            " 5
at_xfail=no
(
  $as_echo "290. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:50: cp \$srcdir/results/read-var5.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var5"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:50"
( $at_check_trace; cp $srcdir/results/read-var5.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var5
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:50"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_290
#AT_START_291
at_fn_group_banner 291 'mat5_uncompressed_read_be.at:54' \
  "Read 2D uint32 array" "                           " 5
at_xfail=no
(
  $as_echo "291. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:55: cp \$srcdir/results/read-var6.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var6"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:55"
( $at_check_trace; cp $srcdir/results/read-var6.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var6
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:55"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_291
#AT_START_292
at_fn_group_banner 292 'mat5_uncompressed_read_be.at:59' \
  "Read 2D int16 array" "                            " 5
at_xfail=no
(
  $as_echo "292. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:60: cp \$srcdir/results/read-var7.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var7"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:60"
( $at_check_trace; cp $srcdir/results/read-var7.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var7
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:60"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_292
#AT_START_293
at_fn_group_banner 293 'mat5_uncompressed_read_be.at:64' \
  "Read 2D uint16 array" "                           " 5
at_xfail=no
(
  $as_echo "293. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:65: cp \$srcdir/results/read-var8.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var8"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:65"
( $at_check_trace; cp $srcdir/results/read-var8.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var8
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:65"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_293
#AT_START_294
at_fn_group_banner 294 'mat5_uncompressed_read_be.at:69' \
  "Read 2D int8 array" "                             " 5
at_xfail=no
(
  $as_echo "294. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:70: cp \$srcdir/results/read-var9.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var9"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:70"
( $at_check_trace; cp $srcdir/results/read-var9.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var9
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:70"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_294
#AT_START_295
at_fn_group_banner 295 'mat5_uncompressed_read_be.at:74' \
  "Read 2D uint8 array" "                            " 5
at_xfail=no
(
  $as_echo "295. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:75: cp \$srcdir/results/read-var10.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var10"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:75"
( $at_check_trace; cp $srcdir/results/read-var10.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var10
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:75"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_295
#AT_START_296
at_fn_group_banner 296 'mat5_uncompressed_read_be.at:79' \
  "Read 2D complex double array" "                   " 5
at_xfail=no
(
  $as_echo "296. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:80: cp \$srcdir/results/read-var11.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var11"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:80"
( $at_check_trace; cp $srcdir/results/read-var11.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var11
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:80"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:82: cp \$srcdir/results/dump-var11.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var11"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:82"
( $at_check_trace; cp $srcdir/results/dump-var11.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var11
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:82"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_296
#AT_START_297
at_fn_group_banner 297 'mat5_uncompressed_read_be.at:86' \
  "Read 2D complex single array" "                   " 5
at_xfail=no
(
  $as_echo "297. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:87: cp \$srcdir/results/read-var12.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var12"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:87"
( $at_check_trace; cp $srcdir/results/read-var12.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var12
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:87"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_297
#AT_START_298
at_fn_group_banner 298 'mat5_uncompressed_read_be.at:91' \
  "Read 2D complex int64 array" "                    " 5
at_xfail=no
(
  $as_echo "298. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:92: cp \$srcdir/results/read-var13.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var13"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:92"
( $at_check_trace; cp $srcdir/results/read-var13.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var13
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:92"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_298
#AT_START_299
at_fn_group_banner 299 'mat5_uncompressed_read_be.at:96' \
  "Read 2D complex uint64 array" "                   " 5
at_xfail=no
(
  $as_echo "299. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:97: cp \$srcdir/results/read-var14.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var14"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:97"
( $at_check_trace; cp $srcdir/results/read-var14.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var14
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:97"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_299
#AT_START_300
at_fn_group_banner 300 'mat5_uncompressed_read_be.at:101' \
  "Read 2D complex int32 array" "                    " 5
at_xfail=no
(
  $as_echo "300. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:102: cp \$srcdir/results/read-var15.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var15"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:102"
( $at_check_trace; cp $srcdir/results/read-var15.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var15
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:102"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_300
#AT_START_301
at_fn_group_banner 301 'mat5_uncompressed_read_be.at:106' \
  "Read 2D complex uint32 array" "                   " 5
at_xfail=no
(
  $as_echo "301. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:107: cp \$srcdir/results/read-var16.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var16"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:107"
( $at_check_trace; cp $srcdir/results/read-var16.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var16
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:107"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_301
#AT_START_302
at_fn_group_banner 302 'mat5_uncompressed_read_be.at:111' \
  "Read 2D complex int16 array" "                    " 5
at_xfail=no
(
  $as_echo "302. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:112: cp \$srcdir/results/read-var17.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var17"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:112"
( $at_check_trace; cp $srcdir/results/read-var17.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var17
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:112"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_302
#AT_START_303
at_fn_group_banner 303 'mat5_uncompressed_read_be.at:116' \
  "Read 2D complex uint16 array" "                   " 5
at_xfail=no
(
  $as_echo "303. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:117: cp \$srcdir/results/read-var18.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var18"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:117"
( $at_check_trace; cp $srcdir/results/read-var18.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var18
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:117"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_303
#AT_START_304
at_fn_group_banner 304 'mat5_uncompressed_read_be.at:121' \
  "Read 2D complex int8 array" "                     " 5
at_xfail=no
(
  $as_echo "304. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:122: cp \$srcdir/results/read-var19.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var19"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:122"
( $at_check_trace; cp $srcdir/results/read-var19.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var19
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:122"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_304
#AT_START_305
at_fn_group_banner 305 'mat5_uncompressed_read_be.at:126' \
  "Read 2D complex uint8 array" "                    " 5
at_xfail=no
(
  $as_echo "305. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:127: cp \$srcdir/results/read-var20.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var20"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:127"
( $at_check_trace; cp $srcdir/results/read-var20.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var20
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:127"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_305
#AT_START_306
at_fn_group_banner 306 'mat5_uncompressed_read_be.at:131' \
  "Read 2D logical array" "                          " 5
at_xfail=no
(
  $as_echo "306. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:132: cp \$srcdir/results/read-var90.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var90"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:132"
( $at_check_trace; cp $srcdir/results/read-var90.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var90
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:132"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_306
#AT_START_307
at_fn_group_banner 307 'mat5_uncompressed_read_be.at:136' \
  "Read sparse double array" "                       " 5
at_xfail=no
(
  $as_echo "307. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:137: cp \$srcdir/results/read-var21.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var21"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:137"
( $at_check_trace; cp $srcdir/results/read-var21.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var21
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:137"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_307
#AT_START_308
at_fn_group_banner 308 'mat5_uncompressed_read_be.at:141' \
  "Read sparse complex double array" "               " 5
at_xfail=no
(
  $as_echo "308. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:142: cp \$srcdir/results/read-var22.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var22"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:142"
( $at_check_trace; cp $srcdir/results/read-var22.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var22
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:142"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_308
#AT_START_309
at_fn_group_banner 309 'mat5_uncompressed_read_be.at:146' \
  "Read empty array" "                               " 5
at_xfail=no
(
  $as_echo "309. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:148: cp \$srcdir/results/read-var23.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var23"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:148"
( $at_check_trace; cp $srcdir/results/read-var23.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var23
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:148"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_309
#AT_START_310
at_fn_group_banner 310 'mat5_uncompressed_read_be.at:152' \
  "Read 2D character array" "                        " 5
at_xfail=no
(
  $as_echo "310. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:153: cp \$srcdir/results/read-var24.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var24"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:153"
( $at_check_trace; cp $srcdir/results/read-var24.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var24
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:153"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_310
#AT_START_311
at_fn_group_banner 311 'mat5_uncompressed_read_be.at:157' \
  "Read empty struct" "                              " 5
at_xfail=no
(
  $as_echo "311. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:159: cp \$srcdir/results/read-var25.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var25"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:159"
( $at_check_trace; cp $srcdir/results/read-var25.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var25
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:159"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_311
#AT_START_312
at_fn_group_banner 312 'mat5_uncompressed_read_be.at:163' \
  "Read empty struct with fields" "                  " 5
at_xfail=no
(
  $as_echo "312. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:165: cp \$srcdir/results/read-var26.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var26"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:165"
( $at_check_trace; cp $srcdir/results/read-var26.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var26
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:165"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_312
#AT_START_313
at_fn_group_banner 313 'mat5_uncompressed_read_be.at:169' \
  "Read struct with empty fields" "                  " 5
at_xfail=no
(
  $as_echo "313. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:171: cp \$srcdir/results/read-var27.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var27"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:171"
( $at_check_trace; cp $srcdir/results/read-var27.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var27
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:171"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_313
#AT_START_314
at_fn_group_banner 314 'mat5_uncompressed_read_be.at:175' \
  "Read struct with double fields" "                 " 5
at_xfail=no
(
  $as_echo "314. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:176: cp \$srcdir/results/read-var28.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var28"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:176"
( $at_check_trace; cp $srcdir/results/read-var28.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var28
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:176"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_314
#AT_START_315
at_fn_group_banner 315 'mat5_uncompressed_read_be.at:180' \
  "Read struct with single fields" "                 " 5
at_xfail=no
(
  $as_echo "315. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:181: cp \$srcdir/results/read-var29.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var29"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:181"
( $at_check_trace; cp $srcdir/results/read-var29.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var29
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:181"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_315
#AT_START_316
at_fn_group_banner 316 'mat5_uncompressed_read_be.at:185' \
  "Read struct with int64 fields" "                  " 5
at_xfail=no
(
  $as_echo "316. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:186: cp \$srcdir/results/read-var30.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var30"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:186"
( $at_check_trace; cp $srcdir/results/read-var30.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var30
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:186"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_316
#AT_START_317
at_fn_group_banner 317 'mat5_uncompressed_read_be.at:190' \
  "Read struct with uint64 fields" "                 " 5
at_xfail=no
(
  $as_echo "317. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:191: cp \$srcdir/results/read-var31.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var31"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:191"
( $at_check_trace; cp $srcdir/results/read-var31.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var31
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:191"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_317
#AT_START_318
at_fn_group_banner 318 'mat5_uncompressed_read_be.at:195' \
  "Read struct with int32 fields" "                  " 5
at_xfail=no
(
  $as_echo "318. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:196: cp \$srcdir/results/read-var32.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var32"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:196"
( $at_check_trace; cp $srcdir/results/read-var32.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var32
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:196"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_318
#AT_START_319
at_fn_group_banner 319 'mat5_uncompressed_read_be.at:200' \
  "Read struct with uint32 fields" "                 " 5
at_xfail=no
(
  $as_echo "319. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:201: cp \$srcdir/results/read-var33.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var33"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:201"
( $at_check_trace; cp $srcdir/results/read-var33.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var33
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:201"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_319
#AT_START_320
at_fn_group_banner 320 'mat5_uncompressed_read_be.at:205' \
  "Read struct with int16 fields" "                  " 5
at_xfail=no
(
  $as_echo "320. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:206: cp \$srcdir/results/read-var34.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var34"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:206"
( $at_check_trace; cp $srcdir/results/read-var34.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var34
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:206"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_320
#AT_START_321
at_fn_group_banner 321 'mat5_uncompressed_read_be.at:210' \
  "Read struct with uint16 fields" "                 " 5
at_xfail=no
(
  $as_echo "321. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:211: cp \$srcdir/results/read-var35.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var35"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:211"
( $at_check_trace; cp $srcdir/results/read-var35.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var35
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:211"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_321
#AT_START_322
at_fn_group_banner 322 'mat5_uncompressed_read_be.at:215' \
  "Read struct with int8 fields" "                   " 5
at_xfail=no
(
  $as_echo "322. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:216: cp \$srcdir/results/read-var36.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var36"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:216"
( $at_check_trace; cp $srcdir/results/read-var36.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var36
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:216"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_322
#AT_START_323
at_fn_group_banner 323 'mat5_uncompressed_read_be.at:220' \
  "Read struct with uint8 fields" "                  " 5
at_xfail=no
(
  $as_echo "323. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:221: cp \$srcdir/results/read-var37.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var37"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:221"
( $at_check_trace; cp $srcdir/results/read-var37.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var37
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:221"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_323
#AT_START_324
at_fn_group_banner 324 'mat5_uncompressed_read_be.at:225' \
  "Read struct with complex double fields" "         " 5
at_xfail=no
(
  $as_echo "324. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:226: cp \$srcdir/results/read-var38.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var38"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:226"
( $at_check_trace; cp $srcdir/results/read-var38.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var38
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:226"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_324
#AT_START_325
at_fn_group_banner 325 'mat5_uncompressed_read_be.at:230' \
  "Read struct with complex single fields" "         " 5
at_xfail=no
(
  $as_echo "325. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:231: cp \$srcdir/results/read-var39.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var39"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:231"
( $at_check_trace; cp $srcdir/results/read-var39.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var39
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:231"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_325
#AT_START_326
at_fn_group_banner 326 'mat5_uncompressed_read_be.at:235' \
  "Read struct with complex int64 fields" "          " 5
at_xfail=no
(
  $as_echo "326. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:236: cp \$srcdir/results/read-var40.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var40"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:236"
( $at_check_trace; cp $srcdir/results/read-var40.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var40
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:236"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_326
#AT_START_327
at_fn_group_banner 327 'mat5_uncompressed_read_be.at:240' \
  "Read struct with complex uint64 fields" "         " 5
at_xfail=no
(
  $as_echo "327. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:241: cp \$srcdir/results/read-var41.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var41"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:241"
( $at_check_trace; cp $srcdir/results/read-var41.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var41
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:241"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_327
#AT_START_328
at_fn_group_banner 328 'mat5_uncompressed_read_be.at:245' \
  "Read struct with complex int32 fields" "          " 5
at_xfail=no
(
  $as_echo "328. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:246: cp \$srcdir/results/read-var42.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var42"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:246"
( $at_check_trace; cp $srcdir/results/read-var42.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var42
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:246"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_328
#AT_START_329
at_fn_group_banner 329 'mat5_uncompressed_read_be.at:250' \
  "Read struct with complex uint32 fields" "         " 5
at_xfail=no
(
  $as_echo "329. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:251: cp \$srcdir/results/read-var43.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var43"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:251"
( $at_check_trace; cp $srcdir/results/read-var43.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var43
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:251"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_329
#AT_START_330
at_fn_group_banner 330 'mat5_uncompressed_read_be.at:255' \
  "Read struct with complex int16 fields" "          " 5
at_xfail=no
(
  $as_echo "330. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:256: cp \$srcdir/results/read-var44.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var44"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:256"
( $at_check_trace; cp $srcdir/results/read-var44.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var44
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:256"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_330
#AT_START_331
at_fn_group_banner 331 'mat5_uncompressed_read_be.at:260' \
  "Read struct with complex uint16 fields" "         " 5
at_xfail=no
(
  $as_echo "331. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:261: cp \$srcdir/results/read-var45.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var45"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:261"
( $at_check_trace; cp $srcdir/results/read-var45.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var45
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:261"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_331
#AT_START_332
at_fn_group_banner 332 'mat5_uncompressed_read_be.at:265' \
  "Read struct with complex int8 fields" "           " 5
at_xfail=no
(
  $as_echo "332. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:266: cp \$srcdir/results/read-var46.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var46"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:266"
( $at_check_trace; cp $srcdir/results/read-var46.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var46
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:266"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_332
#AT_START_333
at_fn_group_banner 333 'mat5_uncompressed_read_be.at:270' \
  "Read struct with complex uint8 fields" "          " 5
at_xfail=no
(
  $as_echo "333. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:271: cp \$srcdir/results/read-var47.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var47"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:271"
( $at_check_trace; cp $srcdir/results/read-var47.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var47
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:271"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_333
#AT_START_334
at_fn_group_banner 334 'mat5_uncompressed_read_be.at:275' \
  "Read struct with logical fields" "                " 5
at_xfail=no
(
  $as_echo "334. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:276: cp \$srcdir/results/read-var91.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var91"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:276"
( $at_check_trace; cp $srcdir/results/read-var91.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var91
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:276"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_334
#AT_START_335
at_fn_group_banner 335 'mat5_uncompressed_read_be.at:280' \
  "Read struct with sparse double fields" "          " 5
at_xfail=no
(
  $as_echo "335. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:281: cp \$srcdir/results/read-var48.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var48"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:281"
( $at_check_trace; cp $srcdir/results/read-var48.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var48
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:281"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_335
#AT_START_336
at_fn_group_banner 336 'mat5_uncompressed_read_be.at:285' \
  "Read struct with sparse complex double fields" "  " 5
at_xfail=no
(
  $as_echo "336. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:286: cp \$srcdir/results/read-var49.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var49"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:286"
( $at_check_trace; cp $srcdir/results/read-var49.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var49
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:286"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_336
#AT_START_337
at_fn_group_banner 337 'mat5_uncompressed_read_be.at:290' \
  "Read struct with character fields" "              " 5
at_xfail=no
(
  $as_echo "337. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:291: cp \$srcdir/results/read-var50.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var50"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:291"
( $at_check_trace; cp $srcdir/results/read-var50.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var50
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:291"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_337
#AT_START_338
at_fn_group_banner 338 'mat5_uncompressed_read_be.at:295' \
  "Read empty cell array" "                          " 5
at_xfail=no
(
  $as_echo "338. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:297: cp \$srcdir/results/read-var51.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var51"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:297"
( $at_check_trace; cp $srcdir/results/read-var51.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var51
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:297"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_338
#AT_START_339
at_fn_group_banner 339 'mat5_uncompressed_read_be.at:301' \
  "Read cell array with empty arrays" "              " 5
at_xfail=no
(
  $as_echo "339. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:303: cp \$srcdir/results/read-var52.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var52"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:303"
( $at_check_trace; cp $srcdir/results/read-var52.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var52
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:303"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_339
#AT_START_340
at_fn_group_banner 340 'mat5_uncompressed_read_be.at:307' \
  "Read cell array with double arrays" "             " 5
at_xfail=no
(
  $as_echo "340. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:308: cp \$srcdir/results/read-var53.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var53"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:308"
( $at_check_trace; cp $srcdir/results/read-var53.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var53
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:308"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_340
#AT_START_341
at_fn_group_banner 341 'mat5_uncompressed_read_be.at:312' \
  "Read cell array with single arrays" "             " 5
at_xfail=no
(
  $as_echo "341. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:313: cp \$srcdir/results/read-var54.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var54"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:313"
( $at_check_trace; cp $srcdir/results/read-var54.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var54
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:313"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_341
#AT_START_342
at_fn_group_banner 342 'mat5_uncompressed_read_be.at:317' \
  "Read cell array with int64 arrays" "              " 5
at_xfail=no
(
  $as_echo "342. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:318: cp \$srcdir/results/read-var55.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var55"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:318"
( $at_check_trace; cp $srcdir/results/read-var55.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var55
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:318"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_342
#AT_START_343
at_fn_group_banner 343 'mat5_uncompressed_read_be.at:322' \
  "Read cell array with uint64 arrays" "             " 5
at_xfail=no
(
  $as_echo "343. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:323: cp \$srcdir/results/read-var56.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var56"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:323"
( $at_check_trace; cp $srcdir/results/read-var56.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var56
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:323"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_343
#AT_START_344
at_fn_group_banner 344 'mat5_uncompressed_read_be.at:327' \
  "Read cell array with int32 arrays" "              " 5
at_xfail=no
(
  $as_echo "344. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:328: cp \$srcdir/results/read-var57.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var57"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:328"
( $at_check_trace; cp $srcdir/results/read-var57.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var57
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:328"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_344
#AT_START_345
at_fn_group_banner 345 'mat5_uncompressed_read_be.at:332' \
  "Read cell array with uint32 arrays" "             " 5
at_xfail=no
(
  $as_echo "345. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:333: cp \$srcdir/results/read-var58.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var58"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:333"
( $at_check_trace; cp $srcdir/results/read-var58.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var58
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:333"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_345
#AT_START_346
at_fn_group_banner 346 'mat5_uncompressed_read_be.at:337' \
  "Read cell array with int16 arrays" "              " 5
at_xfail=no
(
  $as_echo "346. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:338: cp \$srcdir/results/read-var59.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var59"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:338"
( $at_check_trace; cp $srcdir/results/read-var59.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var59
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:338"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_346
#AT_START_347
at_fn_group_banner 347 'mat5_uncompressed_read_be.at:342' \
  "Read cell array with uint16 arrays" "             " 5
at_xfail=no
(
  $as_echo "347. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:343: cp \$srcdir/results/read-var60.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var60"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:343"
( $at_check_trace; cp $srcdir/results/read-var60.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var60
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:343"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_347
#AT_START_348
at_fn_group_banner 348 'mat5_uncompressed_read_be.at:347' \
  "Read cell array with int8 arrays" "               " 5
at_xfail=no
(
  $as_echo "348. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:348: cp \$srcdir/results/read-var61.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var61"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:348"
( $at_check_trace; cp $srcdir/results/read-var61.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var61
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:348"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_348
#AT_START_349
at_fn_group_banner 349 'mat5_uncompressed_read_be.at:352' \
  "Read cell array with uint8 arrays" "              " 5
at_xfail=no
(
  $as_echo "349. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:353: cp \$srcdir/results/read-var62.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var62"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:353"
( $at_check_trace; cp $srcdir/results/read-var62.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var62
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:353"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_349
#AT_START_350
at_fn_group_banner 350 'mat5_uncompressed_read_be.at:357' \
  "Read cell array with logical arrays" "            " 5
at_xfail=no
(
  $as_echo "350. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:358: cp \$srcdir/results/read-var92.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var92"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:358"
( $at_check_trace; cp $srcdir/results/read-var92.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var92
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:358"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_350
#AT_START_351
at_fn_group_banner 351 'mat5_uncompressed_read_be.at:362' \
  "Read cell array with sparse double arrays" "      " 5
at_xfail=no
(
  $as_echo "351. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:363: cp \$srcdir/results/read-var63.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var63"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:363"
( $at_check_trace; cp $srcdir/results/read-var63.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var63
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:363"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_351
#AT_START_352
at_fn_group_banner 352 'mat5_uncompressed_read_be.at:367' \
  "Read cell array with sparse complex double arrays" "" 5
at_xfail=no
(
  $as_echo "352. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:368: cp \$srcdir/results/read-var64.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var64"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:368"
( $at_check_trace; cp $srcdir/results/read-var64.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var64
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:368"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_352
#AT_START_353
at_fn_group_banner 353 'mat5_uncompressed_read_be.at:372' \
  "Read cell array with character arrays" "          " 5
at_xfail=no
(
  $as_echo "353. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:373: cp \$srcdir/results/read-var65.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var65"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:373"
( $at_check_trace; cp $srcdir/results/read-var65.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var65
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:373"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_353
#AT_START_354
at_fn_group_banner 354 'mat5_uncompressed_read_be.at:377' \
  "Read cell array with empty structs" "             " 5
at_xfail=no
(
  $as_echo "354. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:379: cp \$srcdir/results/read-var66.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var66"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:379"
( $at_check_trace; cp $srcdir/results/read-var66.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var66
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:379"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_354
#AT_START_355
at_fn_group_banner 355 'mat5_uncompressed_read_be.at:383' \
  "Read cell array with structs (numeric fields)" "  " 5
at_xfail=no
(
  $as_echo "355. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:384: cp \$srcdir/results/read-var67.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var67"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:384"
( $at_check_trace; cp $srcdir/results/read-var67.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var67
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:384"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_355
#AT_START_356
at_fn_group_banner 356 'mat5_uncompressed_read_be.at:388' \
  "Read cell array with structs (sparse fields)" "   " 5
at_xfail=no
(
  $as_echo "356. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:389: cp \$srcdir/results/read-var68.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var68"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:389"
( $at_check_trace; cp $srcdir/results/read-var68.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var68
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:389"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_356
#AT_START_357
at_fn_group_banner 357 'mat5_uncompressed_read_be.at:393' \
  "Read cell array with structs (character fields)" "" 5
at_xfail=no
(
  $as_echo "357. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_read_be.at:394: cp \$srcdir/results/read-var69.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var69"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_read_be.at:394"
( $at_check_trace; cp $srcdir/results/read-var69.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_uncompressed_be.mat var69
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_read_be.at:394"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_357
#AT_START_358
at_fn_group_banner 358 'mat5_uncompressed_readslab_be.at:27' \
  "Read slab of double array" "                      " 5
at_xfail=no
(
  $as_echo "358. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:29: cp \$srcdir/results/dump-var70-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var70\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:29"
( $at_check_trace; cp $srcdir/results/dump-var70-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var70\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:29"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:31: cp \$srcdir/results/dump-var70-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var70\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:31"
( $at_check_trace; cp $srcdir/results/dump-var70-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var70\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:31"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_358
#AT_START_359
at_fn_group_banner 359 'mat5_uncompressed_readslab_be.at:35' \
  "Read slab of single array" "                      " 5
at_xfail=no
(
  $as_echo "359. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:37: cp \$srcdir/results/dump-var71-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var71\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:37"
( $at_check_trace; cp $srcdir/results/dump-var71-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var71\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:37"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:39: cp \$srcdir/results/dump-var71-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var71\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:39"
( $at_check_trace; cp $srcdir/results/dump-var71-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var71\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:39"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_359
#AT_START_360
at_fn_group_banner 360 'mat5_uncompressed_readslab_be.at:43' \
  "Read slab of int64 array" "                       " 5
at_xfail=no
(
  $as_echo "360. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:45: cp \$srcdir/results/dump-var72-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var72\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:45"
( $at_check_trace; cp $srcdir/results/dump-var72-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var72\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:45"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:47: cp \$srcdir/results/dump-var72-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var72\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:47"
( $at_check_trace; cp $srcdir/results/dump-var72-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var72\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:47"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_360
#AT_START_361
at_fn_group_banner 361 'mat5_uncompressed_readslab_be.at:51' \
  "Read slab of uint64 array" "                      " 5
at_xfail=no
(
  $as_echo "361. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:53: cp \$srcdir/results/dump-var73-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var73\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:53"
( $at_check_trace; cp $srcdir/results/dump-var73-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var73\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:53"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:55: cp \$srcdir/results/dump-var73-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var73\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:55"
( $at_check_trace; cp $srcdir/results/dump-var73-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var73\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:55"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_361
#AT_START_362
at_fn_group_banner 362 'mat5_uncompressed_readslab_be.at:59' \
  "Read slab of int32 array" "                       " 5
at_xfail=no
(
  $as_echo "362. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:61: cp \$srcdir/results/dump-var74-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var74\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:61"
( $at_check_trace; cp $srcdir/results/dump-var74-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var74\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:61"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:63: cp \$srcdir/results/dump-var74-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var74\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:63"
( $at_check_trace; cp $srcdir/results/dump-var74-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var74\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:63"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_362
#AT_START_363
at_fn_group_banner 363 'mat5_uncompressed_readslab_be.at:67' \
  "Read slab of uint32 array" "                      " 5
at_xfail=no
(
  $as_echo "363. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:69: cp \$srcdir/results/dump-var75-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var75\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:69"
( $at_check_trace; cp $srcdir/results/dump-var75-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var75\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:69"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:71: cp \$srcdir/results/dump-var75-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var75\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:71"
( $at_check_trace; cp $srcdir/results/dump-var75-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var75\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:71"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_363
#AT_START_364
at_fn_group_banner 364 'mat5_uncompressed_readslab_be.at:75' \
  "Read slab of int16 array" "                       " 5
at_xfail=no
(
  $as_echo "364. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:77: cp \$srcdir/results/dump-var76-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var76\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:77"
( $at_check_trace; cp $srcdir/results/dump-var76-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var76\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:77"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:79: cp \$srcdir/results/dump-var76-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var76\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:79"
( $at_check_trace; cp $srcdir/results/dump-var76-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var76\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:79"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_364
#AT_START_365
at_fn_group_banner 365 'mat5_uncompressed_readslab_be.at:83' \
  "Read slab of uint16 array" "                      " 5
at_xfail=no
(
  $as_echo "365. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:85: cp \$srcdir/results/dump-var77-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var77\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:85"
( $at_check_trace; cp $srcdir/results/dump-var77-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var77\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:85"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:87: cp \$srcdir/results/dump-var77-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var77\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:87"
( $at_check_trace; cp $srcdir/results/dump-var77-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var77\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:87"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_365
#AT_START_366
at_fn_group_banner 366 'mat5_uncompressed_readslab_be.at:91' \
  "Read slab of int8 array" "                        " 5
at_xfail=no
(
  $as_echo "366. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:93: cp \$srcdir/results/dump-var78-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var78\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:93"
( $at_check_trace; cp $srcdir/results/dump-var78-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var78\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:93"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:95: cp \$srcdir/results/dump-var78-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var78\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:95"
( $at_check_trace; cp $srcdir/results/dump-var78-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var78\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:95"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_366
#AT_START_367
at_fn_group_banner 367 'mat5_uncompressed_readslab_be.at:99' \
  "Read slab of uint8 array" "                       " 5
at_xfail=no
(
  $as_echo "367. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:101: cp \$srcdir/results/dump-var79-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var79\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:101"
( $at_check_trace; cp $srcdir/results/dump-var79-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var79\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:101"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:103: cp \$srcdir/results/dump-var79-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var79\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:103"
( $at_check_trace; cp $srcdir/results/dump-var79-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var79\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:103"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_367
#AT_START_368
at_fn_group_banner 368 'mat5_uncompressed_readslab_be.at:107' \
  "Read slab of complex double array" "              " 5
at_xfail=no
(
  $as_echo "368. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:109: cp \$srcdir/results/dump-var80-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var80\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:109"
( $at_check_trace; cp $srcdir/results/dump-var80-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var80\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:109"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:111: cp \$srcdir/results/dump-var80-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var80\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:111"
( $at_check_trace; cp $srcdir/results/dump-var80-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var80\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:111"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_368
#AT_START_369
at_fn_group_banner 369 'mat5_uncompressed_readslab_be.at:115' \
  "Read slab of complex single array" "              " 5
at_xfail=no
(
  $as_echo "369. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:117: cp \$srcdir/results/dump-var81-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var81\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:117"
( $at_check_trace; cp $srcdir/results/dump-var81-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var81\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:117"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:119: cp \$srcdir/results/dump-var81-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var81\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:119"
( $at_check_trace; cp $srcdir/results/dump-var81-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var81\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:119"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_369
#AT_START_370
at_fn_group_banner 370 'mat5_uncompressed_readslab_be.at:123' \
  "Read slab of complex int64 array" "               " 5
at_xfail=no
(
  $as_echo "370. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:125: cp \$srcdir/results/dump-var82-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var82\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:125"
( $at_check_trace; cp $srcdir/results/dump-var82-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var82\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:125"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:127: cp \$srcdir/results/dump-var82-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var82\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:127"
( $at_check_trace; cp $srcdir/results/dump-var82-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var82\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:127"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_370
#AT_START_371
at_fn_group_banner 371 'mat5_uncompressed_readslab_be.at:131' \
  "Read slab of complex uint64 array" "              " 5
at_xfail=no
(
  $as_echo "371. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:133: cp \$srcdir/results/dump-var83-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var83\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:133"
( $at_check_trace; cp $srcdir/results/dump-var83-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var83\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:133"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:135: cp \$srcdir/results/dump-var83-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var83\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:135"
( $at_check_trace; cp $srcdir/results/dump-var83-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var83\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:135"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_371
#AT_START_372
at_fn_group_banner 372 'mat5_uncompressed_readslab_be.at:139' \
  "Read slab of complex int32 array" "               " 5
at_xfail=no
(
  $as_echo "372. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:141: cp \$srcdir/results/dump-var84-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var84\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:141"
( $at_check_trace; cp $srcdir/results/dump-var84-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var84\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:141"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:143: cp \$srcdir/results/dump-var84-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var84\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:143"
( $at_check_trace; cp $srcdir/results/dump-var84-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var84\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:143"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_372
#AT_START_373
at_fn_group_banner 373 'mat5_uncompressed_readslab_be.at:147' \
  "Read slab of complex uint32 array" "              " 5
at_xfail=no
(
  $as_echo "373. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:149: cp \$srcdir/results/dump-var85-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var85\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:149"
( $at_check_trace; cp $srcdir/results/dump-var85-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var85\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:149"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:151: cp \$srcdir/results/dump-var85-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var85\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:151"
( $at_check_trace; cp $srcdir/results/dump-var85-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var85\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:151"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_373
#AT_START_374
at_fn_group_banner 374 'mat5_uncompressed_readslab_be.at:155' \
  "Read slab of complex int16 array" "               " 5
at_xfail=no
(
  $as_echo "374. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:157: cp \$srcdir/results/dump-var86-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var86\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:157"
( $at_check_trace; cp $srcdir/results/dump-var86-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var86\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:157"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:159: cp \$srcdir/results/dump-var86-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var86\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:159"
( $at_check_trace; cp $srcdir/results/dump-var86-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var86\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:159"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_374
#AT_START_375
at_fn_group_banner 375 'mat5_uncompressed_readslab_be.at:163' \
  "Read slab of complex uint16 array" "              " 5
at_xfail=no
(
  $as_echo "375. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:165: cp \$srcdir/results/dump-var87-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var87\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:165"
( $at_check_trace; cp $srcdir/results/dump-var87-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var87\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:165"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:167: cp \$srcdir/results/dump-var87-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var87\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:167"
( $at_check_trace; cp $srcdir/results/dump-var87-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var87\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:167"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_375
#AT_START_376
at_fn_group_banner 376 'mat5_uncompressed_readslab_be.at:171' \
  "Read slab of complex int8 array" "                " 5
at_xfail=no
(
  $as_echo "376. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:173: cp \$srcdir/results/dump-var88-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var88\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:173"
( $at_check_trace; cp $srcdir/results/dump-var88-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var88\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:173"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:175: cp \$srcdir/results/dump-var88-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var88\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:175"
( $at_check_trace; cp $srcdir/results/dump-var88-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var88\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:175"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_376
#AT_START_377
at_fn_group_banner 377 'mat5_uncompressed_readslab_be.at:179' \
  "Read slab of complex uint8 array" "               " 5
at_xfail=no
(
  $as_echo "377. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:181: cp \$srcdir/results/dump-var89-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var89\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:181"
( $at_check_trace; cp $srcdir/results/dump-var89-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var89\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:181"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:183: cp \$srcdir/results/dump-var89-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var89\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:183"
( $at_check_trace; cp $srcdir/results/dump-var89-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var89\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:183"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_377
#AT_START_378
at_fn_group_banner 378 'mat5_uncompressed_readslab_be.at:187' \
  "Read linear slab of double array" "               " 5
at_xfail=no
(
  $as_echo "378. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:189: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var70\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:189"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var70\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:189"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_378
#AT_START_379
at_fn_group_banner 379 'mat5_uncompressed_readslab_be.at:193' \
  "Read linear slab of single array" "               " 5
at_xfail=no
(
  $as_echo "379. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:195: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var71\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:195"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var71\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:195"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_379
#AT_START_380
at_fn_group_banner 380 'mat5_uncompressed_readslab_be.at:199' \
  "Read linear slab of int64 array" "                " 5
at_xfail=no
(
  $as_echo "380. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:201: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var72\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:201"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var72\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:201"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_380
#AT_START_381
at_fn_group_banner 381 'mat5_uncompressed_readslab_be.at:205' \
  "Read linear slab of uint64 array" "               " 5
at_xfail=no
(
  $as_echo "381. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:207: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var73\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:207"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var73\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:207"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_381
#AT_START_382
at_fn_group_banner 382 'mat5_uncompressed_readslab_be.at:211' \
  "Read linear slab of int32 array" "                " 5
at_xfail=no
(
  $as_echo "382. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:213: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var74\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:213"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var74\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:213"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_382
#AT_START_383
at_fn_group_banner 383 'mat5_uncompressed_readslab_be.at:217' \
  "Read linear slab of uint32 array" "               " 5
at_xfail=no
(
  $as_echo "383. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:219: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var75\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:219"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var75\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:219"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_383
#AT_START_384
at_fn_group_banner 384 'mat5_uncompressed_readslab_be.at:223' \
  "Read linear slab of int16 array" "                " 5
at_xfail=no
(
  $as_echo "384. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:225: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var76\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:225"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var76\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:225"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_384
#AT_START_385
at_fn_group_banner 385 'mat5_uncompressed_readslab_be.at:229' \
  "Read linear slab of uint16 array" "               " 5
at_xfail=no
(
  $as_echo "385. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:231: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var77\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:231"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var77\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:231"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_385
#AT_START_386
at_fn_group_banner 386 'mat5_uncompressed_readslab_be.at:235' \
  "Read linear slab of int8 array" "                 " 5
at_xfail=no
(
  $as_echo "386. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:237: cp \$srcdir/results/dump-var78-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var78\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:237"
( $at_check_trace; cp $srcdir/results/dump-var78-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var78\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:237"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_386
#AT_START_387
at_fn_group_banner 387 'mat5_uncompressed_readslab_be.at:241' \
  "Read linear slab of uint8 array" "                " 5
at_xfail=no
(
  $as_echo "387. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:243: cp \$srcdir/results/dump-var79-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var79\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:243"
( $at_check_trace; cp $srcdir/results/dump-var79-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var79\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:243"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_387
#AT_START_388
at_fn_group_banner 388 'mat5_uncompressed_readslab_be.at:247' \
  "Read linear slab of complex double array" "       " 5
at_xfail=no
(
  $as_echo "388. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:249: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var80\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:249"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var80\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:249"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_388
#AT_START_389
at_fn_group_banner 389 'mat5_uncompressed_readslab_be.at:253' \
  "Read linear slab of complex single array" "       " 5
at_xfail=no
(
  $as_echo "389. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:255: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var81\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:255"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var81\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:255"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_389
#AT_START_390
at_fn_group_banner 390 'mat5_uncompressed_readslab_be.at:259' \
  "Read linear slab of complex int64 array" "        " 5
at_xfail=no
(
  $as_echo "390. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:261: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var82\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:261"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var82\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:261"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_390
#AT_START_391
at_fn_group_banner 391 'mat5_uncompressed_readslab_be.at:265' \
  "Read linear slab of complex uint64 array" "       " 5
at_xfail=no
(
  $as_echo "391. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:267: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var83\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:267"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var83\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:267"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_391
#AT_START_392
at_fn_group_banner 392 'mat5_uncompressed_readslab_be.at:271' \
  "Read linear slab of complex int32 array" "        " 5
at_xfail=no
(
  $as_echo "392. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:273: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var84\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:273"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var84\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:273"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_392
#AT_START_393
at_fn_group_banner 393 'mat5_uncompressed_readslab_be.at:277' \
  "Read linear slab of complex uint32 array" "       " 5
at_xfail=no
(
  $as_echo "393. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:279: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var85\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:279"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var85\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:279"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_393
#AT_START_394
at_fn_group_banner 394 'mat5_uncompressed_readslab_be.at:283' \
  "Read linear slab of complex int16 array" "        " 5
at_xfail=no
(
  $as_echo "394. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:285: cp \$srcdir/results/dump-var86-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var86\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:285"
( $at_check_trace; cp $srcdir/results/dump-var86-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var86\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:285"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_394
#AT_START_395
at_fn_group_banner 395 'mat5_uncompressed_readslab_be.at:289' \
  "Read linear slab of complex uint16 array" "       " 5
at_xfail=no
(
  $as_echo "395. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:291: cp \$srcdir/results/dump-var87-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var87\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:291"
( $at_check_trace; cp $srcdir/results/dump-var87-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var87\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:291"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_395
#AT_START_396
at_fn_group_banner 396 'mat5_uncompressed_readslab_be.at:295' \
  "Read linear slab of complex int8 array" "         " 5
at_xfail=no
(
  $as_echo "396. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:297: cp \$srcdir/results/dump-var88-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var88\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:297"
( $at_check_trace; cp $srcdir/results/dump-var88-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var88\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:297"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_396
#AT_START_397
at_fn_group_banner 397 'mat5_uncompressed_readslab_be.at:301' \
  "Read linear slab of complex uint8 array" "        " 5
at_xfail=no
(
  $as_echo "397. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:303: cp \$srcdir/results/dump-var89-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var89\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:303"
( $at_check_trace; cp $srcdir/results/dump-var89-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var89\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:303"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_397
#AT_START_398
at_fn_group_banner 398 'mat5_uncompressed_readslab_be.at:307' \
  "Read slab of double array from struct" "          " 5
at_xfail=no
(
  $as_echo "398. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:309: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var28.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:309"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var28.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:309"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:311: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var28.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:311"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var28.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:311"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:313: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var28.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:313"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var28.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:313"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_398
#AT_START_399
at_fn_group_banner 399 'mat5_uncompressed_readslab_be.at:317' \
  "Read slab of single array from struct" "          " 5
at_xfail=no
(
  $as_echo "399. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:319: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var29.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:319"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var29.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:319"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:321: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var29.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:321"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var29.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:321"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:323: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var29.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:323"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var29.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:323"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_399
#AT_START_400
at_fn_group_banner 400 'mat5_uncompressed_readslab_be.at:327' \
  "Read slab of int64 array from struct" "           " 5
at_xfail=no
(
  $as_echo "400. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:329: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var30.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:329"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var30.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:329"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:331: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var30.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:331"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var30.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:331"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:333: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var30.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:333"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var30.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:333"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_400
#AT_START_401
at_fn_group_banner 401 'mat5_uncompressed_readslab_be.at:337' \
  "Read slab of uint64 array from struct" "          " 5
at_xfail=no
(
  $as_echo "401. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:339: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var31.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:339"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var31.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:339"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:341: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var31.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:341"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var31.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:341"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:343: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var31.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:343"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var31.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:343"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_401
#AT_START_402
at_fn_group_banner 402 'mat5_uncompressed_readslab_be.at:347' \
  "Read slab of int32 array from struct" "           " 5
at_xfail=no
(
  $as_echo "402. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:349: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var32.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:349"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var32.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:349"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:351: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var32.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:351"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var32.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:351"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:353: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var32.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:353"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var32.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:353"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_402
#AT_START_403
at_fn_group_banner 403 'mat5_uncompressed_readslab_be.at:357' \
  "Read slab of uint32 array from struct" "          " 5
at_xfail=no
(
  $as_echo "403. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:359: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var33.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:359"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var33.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:359"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:361: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var33.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:361"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var33.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:361"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:363: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var33.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:363"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var33.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:363"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_403
#AT_START_404
at_fn_group_banner 404 'mat5_uncompressed_readslab_be.at:367' \
  "Read slab of int16 array from struct" "           " 5
at_xfail=no
(
  $as_echo "404. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:369: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var34.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:369"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var34.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:369"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:371: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var34.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:371"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var34.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:371"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:373: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var34.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:373"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var34.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:373"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_404
#AT_START_405
at_fn_group_banner 405 'mat5_uncompressed_readslab_be.at:377' \
  "Read slab of uint16 array from struct" "          " 5
at_xfail=no
(
  $as_echo "405. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:379: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var35.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:379"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var35.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:379"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:381: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var35.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:381"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var35.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:381"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:383: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var35.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:383"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var35.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:383"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_405
#AT_START_406
at_fn_group_banner 406 'mat5_uncompressed_readslab_be.at:387' \
  "Read slab of int8 array from struct" "            " 5
at_xfail=no
(
  $as_echo "406. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:389: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var36.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:389"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var36.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:389"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:391: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var36.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:391"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var36.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:391"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:393: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var36.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:393"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var36.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:393"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_406
#AT_START_407
at_fn_group_banner 407 'mat5_uncompressed_readslab_be.at:397' \
  "Read slab of uint8 array from struct" "           " 5
at_xfail=no
(
  $as_echo "407. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:399: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var37.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:399"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var37.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:399"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:401: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var37.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:401"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var37.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:401"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:403: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var37.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:403"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var37.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:403"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_407
#AT_START_408
at_fn_group_banner 408 'mat5_uncompressed_readslab_be.at:407' \
  "Read slab of complex double array from struct" "  " 5
at_xfail=no
(
  $as_echo "408. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:409: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var38.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:409"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var38.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:409"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:411: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var38.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:411"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var38.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:411"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:413: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var38.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:413"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var38.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:413"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_408
#AT_START_409
at_fn_group_banner 409 'mat5_uncompressed_readslab_be.at:417' \
  "Read slab of complex single array from struct" "  " 5
at_xfail=no
(
  $as_echo "409. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:419: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var39.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:419"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var39.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:419"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:421: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var39.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:421"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var39.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:421"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:423: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var39.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:423"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var39.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:423"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_409
#AT_START_410
at_fn_group_banner 410 'mat5_uncompressed_readslab_be.at:427' \
  "Read slab of complex int64 array from struct" "   " 5
at_xfail=no
(
  $as_echo "410. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:429: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var40.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:429"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var40.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:429"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:431: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var40.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:431"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var40.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:431"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:433: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var40.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:433"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var40.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:433"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_410
#AT_START_411
at_fn_group_banner 411 'mat5_uncompressed_readslab_be.at:437' \
  "Read slab of complex uint64 array from struct" "  " 5
at_xfail=no
(
  $as_echo "411. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:439: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var41.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:439"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var41.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:439"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:441: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var41.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:441"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var41.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:441"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:443: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var41.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:443"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var41.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:443"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_411
#AT_START_412
at_fn_group_banner 412 'mat5_uncompressed_readslab_be.at:447' \
  "Read slab of complex int32 array from struct" "   " 5
at_xfail=no
(
  $as_echo "412. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:449: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var42.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:449"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var42.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:449"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:451: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var42.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:451"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var42.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:451"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:453: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var42.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:453"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var42.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:453"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_412
#AT_START_413
at_fn_group_banner 413 'mat5_uncompressed_readslab_be.at:457' \
  "Read slab of complex uint32 array from struct" "  " 5
at_xfail=no
(
  $as_echo "413. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:459: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var43.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:459"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var43.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:459"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:461: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var43.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:461"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var43.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:461"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:463: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var43.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:463"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var43.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:463"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_413
#AT_START_414
at_fn_group_banner 414 'mat5_uncompressed_readslab_be.at:467' \
  "Read slab of complex int16 array from struct" "   " 5
at_xfail=no
(
  $as_echo "414. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:469: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var44.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:469"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var44.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:469"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:471: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var44.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:471"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var44.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:471"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:473: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var44.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:473"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var44.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:473"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_414
#AT_START_415
at_fn_group_banner 415 'mat5_uncompressed_readslab_be.at:477' \
  "Read slab of complex uint16 array from struct" "  " 5
at_xfail=no
(
  $as_echo "415. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:479: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var45.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:479"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var45.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:479"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:481: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var45.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:481"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var45.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:481"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:483: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var45.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:483"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var45.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:483"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_415
#AT_START_416
at_fn_group_banner 416 'mat5_uncompressed_readslab_be.at:487' \
  "Read slab of complex int8 array from struct" "    " 5
at_xfail=no
(
  $as_echo "416. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:489: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var46.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:489"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var46.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:489"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:491: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var46.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:491"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var46.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:491"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:493: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var46.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:493"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var46.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:493"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_416
#AT_START_417
at_fn_group_banner 417 'mat5_uncompressed_readslab_be.at:497' \
  "Read slab of complex uint8 array from struct" "   " 5
at_xfail=no
(
  $as_echo "417. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:499: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var47.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:499"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var47.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:499"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:501: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var47.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:501"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var47.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:501"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readslab_be.at:503: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_uncompressed_be.mat var47.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readslab_be.at:503"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_uncompressed_be.mat var47.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readslab_be.at:503"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_417
#AT_START_418
at_fn_group_banner 418 'mat5_compressed_read_be.at:27' \
  "Read 2D double array" "                           " 6
at_xfail=no
(
  $as_echo "418. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:28" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:28"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:29: cp \$srcdir/results/read-var1.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var1"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:29"
( $at_check_trace; cp $srcdir/results/read-var1.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:29"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:31: cp \$srcdir/results/dump-var1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var1"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:31"
( $at_check_trace; cp $srcdir/results/dump-var1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:31"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_418
#AT_START_419
at_fn_group_banner 419 'mat5_compressed_read_be.at:35' \
  "Read 2D single array" "                           " 6
at_xfail=no
(
  $as_echo "419. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:36" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:36"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:37: cp \$srcdir/results/read-var2.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var2"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:37"
( $at_check_trace; cp $srcdir/results/read-var2.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:37"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_419
#AT_START_420
at_fn_group_banner 420 'mat5_compressed_read_be.at:41' \
  "Read 2D int64 array" "                            " 6
at_xfail=no
(
  $as_echo "420. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:42" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:42"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:43: cp \$srcdir/results/read-var3.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var3"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:43"
( $at_check_trace; cp $srcdir/results/read-var3.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var3
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:43"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_420
#AT_START_421
at_fn_group_banner 421 'mat5_compressed_read_be.at:47' \
  "Read 2D uint64 array" "                           " 6
at_xfail=no
(
  $as_echo "421. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:48" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:48"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:49: cp \$srcdir/results/read-var4.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var4"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:49"
( $at_check_trace; cp $srcdir/results/read-var4.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var4
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:49"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_421
#AT_START_422
at_fn_group_banner 422 'mat5_compressed_read_be.at:53' \
  "Read 2D int32 array" "                            " 6
at_xfail=no
(
  $as_echo "422. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:54" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:54"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:55: cp \$srcdir/results/read-var5.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var5"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:55"
( $at_check_trace; cp $srcdir/results/read-var5.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var5
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:55"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_422
#AT_START_423
at_fn_group_banner 423 'mat5_compressed_read_be.at:59' \
  "Read 2D uint32 array" "                           " 6
at_xfail=no
(
  $as_echo "423. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:60" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:60"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:61: cp \$srcdir/results/read-var6.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var6"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:61"
( $at_check_trace; cp $srcdir/results/read-var6.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var6
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:61"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_423
#AT_START_424
at_fn_group_banner 424 'mat5_compressed_read_be.at:65' \
  "Read 2D int16 array" "                            " 6
at_xfail=no
(
  $as_echo "424. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:66" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:66"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:67: cp \$srcdir/results/read-var7.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var7"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:67"
( $at_check_trace; cp $srcdir/results/read-var7.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var7
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:67"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_424
#AT_START_425
at_fn_group_banner 425 'mat5_compressed_read_be.at:71' \
  "Read 2D uint16 array" "                           " 6
at_xfail=no
(
  $as_echo "425. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:72" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:72"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:73: cp \$srcdir/results/read-var8.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var8"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:73"
( $at_check_trace; cp $srcdir/results/read-var8.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var8
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:73"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_425
#AT_START_426
at_fn_group_banner 426 'mat5_compressed_read_be.at:77' \
  "Read 2D int8 array" "                             " 6
at_xfail=no
(
  $as_echo "426. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:78" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:78"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:79: cp \$srcdir/results/read-var9.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var9"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:79"
( $at_check_trace; cp $srcdir/results/read-var9.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var9
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:79"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_426
#AT_START_427
at_fn_group_banner 427 'mat5_compressed_read_be.at:83' \
  "Read 2D uint8 array" "                            " 6
at_xfail=no
(
  $as_echo "427. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:84" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:84"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:85: cp \$srcdir/results/read-var10.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var10"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:85"
( $at_check_trace; cp $srcdir/results/read-var10.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var10
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:85"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_427
#AT_START_428
at_fn_group_banner 428 'mat5_compressed_read_be.at:89' \
  "Read 2D complex double array" "                   " 6
at_xfail=no
(
  $as_echo "428. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:90" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:90"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:91: cp \$srcdir/results/read-var11.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var11"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:91"
( $at_check_trace; cp $srcdir/results/read-var11.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var11
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:91"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:93: cp \$srcdir/results/dump-var11.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var11"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:93"
( $at_check_trace; cp $srcdir/results/dump-var11.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var11
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:93"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_428
#AT_START_429
at_fn_group_banner 429 'mat5_compressed_read_be.at:97' \
  "Read 2D complex single array" "                   " 6
at_xfail=no
(
  $as_echo "429. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:98" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:98"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:99: cp \$srcdir/results/read-var12.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var12"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:99"
( $at_check_trace; cp $srcdir/results/read-var12.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var12
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:99"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_429
#AT_START_430
at_fn_group_banner 430 'mat5_compressed_read_be.at:103' \
  "Read 2D complex int64 array" "                    " 6
at_xfail=no
(
  $as_echo "430. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:104" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:104"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:105: cp \$srcdir/results/read-var13.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var13"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:105"
( $at_check_trace; cp $srcdir/results/read-var13.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var13
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:105"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_430
#AT_START_431
at_fn_group_banner 431 'mat5_compressed_read_be.at:109' \
  "Read 2D complex uint64 array" "                   " 6
at_xfail=no
(
  $as_echo "431. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:110" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:110"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:111: cp \$srcdir/results/read-var14.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var14"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:111"
( $at_check_trace; cp $srcdir/results/read-var14.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var14
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:111"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_431
#AT_START_432
at_fn_group_banner 432 'mat5_compressed_read_be.at:115' \
  "Read 2D complex int32 array" "                    " 6
at_xfail=no
(
  $as_echo "432. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:116" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:116"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:117: cp \$srcdir/results/read-var15.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var15"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:117"
( $at_check_trace; cp $srcdir/results/read-var15.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var15
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:117"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_432
#AT_START_433
at_fn_group_banner 433 'mat5_compressed_read_be.at:121' \
  "Read 2D complex uint32 array" "                   " 6
at_xfail=no
(
  $as_echo "433. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:122" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:122"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:123: cp \$srcdir/results/read-var16.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var16"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:123"
( $at_check_trace; cp $srcdir/results/read-var16.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var16
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:123"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_433
#AT_START_434
at_fn_group_banner 434 'mat5_compressed_read_be.at:127' \
  "Read 2D complex int16 array" "                    " 6
at_xfail=no
(
  $as_echo "434. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:128" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:128"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:129: cp \$srcdir/results/read-var17.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var17"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:129"
( $at_check_trace; cp $srcdir/results/read-var17.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var17
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:129"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_434
#AT_START_435
at_fn_group_banner 435 'mat5_compressed_read_be.at:133' \
  "Read 2D complex uint16 array" "                   " 6
at_xfail=no
(
  $as_echo "435. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:134" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:134"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:135: cp \$srcdir/results/read-var18.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var18"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:135"
( $at_check_trace; cp $srcdir/results/read-var18.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var18
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:135"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_435
#AT_START_436
at_fn_group_banner 436 'mat5_compressed_read_be.at:139' \
  "Read 2D complex int8 array" "                     " 6
at_xfail=no
(
  $as_echo "436. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:140" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:140"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:141: cp \$srcdir/results/read-var19.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var19"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:141"
( $at_check_trace; cp $srcdir/results/read-var19.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var19
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:141"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_436
#AT_START_437
at_fn_group_banner 437 'mat5_compressed_read_be.at:145' \
  "Read 2D complex uint8 array" "                    " 6
at_xfail=no
(
  $as_echo "437. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:146" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:146"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:147: cp \$srcdir/results/read-var20.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var20"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:147"
( $at_check_trace; cp $srcdir/results/read-var20.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var20
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:147"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_437
#AT_START_438
at_fn_group_banner 438 'mat5_compressed_read_be.at:151' \
  "Read 2D logical array" "                          " 6
at_xfail=no
(
  $as_echo "438. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:152" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:152"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:153: cp \$srcdir/results/read-var90.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var90"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:153"
( $at_check_trace; cp $srcdir/results/read-var90.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var90
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:153"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_438
#AT_START_439
at_fn_group_banner 439 'mat5_compressed_read_be.at:157' \
  "Read sparse double array" "                       " 6
at_xfail=no
(
  $as_echo "439. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:158" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:158"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:159: cp \$srcdir/results/read-var21.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var21"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:159"
( $at_check_trace; cp $srcdir/results/read-var21.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var21
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:159"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_439
#AT_START_440
at_fn_group_banner 440 'mat5_compressed_read_be.at:163' \
  "Read sparse complex double array" "               " 6
at_xfail=no
(
  $as_echo "440. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:164" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:164"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:165: cp \$srcdir/results/read-var22.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var22"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:165"
( $at_check_trace; cp $srcdir/results/read-var22.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var22
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:165"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_440
#AT_START_441
at_fn_group_banner 441 'mat5_compressed_read_be.at:169' \
  "Read empty array" "                               " 6
at_xfail=no
(
  $as_echo "441. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_read_be.at:171" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:171"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:172: cp \$srcdir/results/read-var23.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var23"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:172"
( $at_check_trace; cp $srcdir/results/read-var23.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var23
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:172"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_441
#AT_START_442
at_fn_group_banner 442 'mat5_compressed_read_be.at:176' \
  "Read 2D character array" "                        " 6
at_xfail=no
(
  $as_echo "442. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:177" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:177"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:178: cp \$srcdir/results/read-var24.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var24"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:178"
( $at_check_trace; cp $srcdir/results/read-var24.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var24
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:178"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_442
#AT_START_443
at_fn_group_banner 443 'mat5_compressed_read_be.at:182' \
  "Read empty struct" "                              " 6
at_xfail=no
(
  $as_echo "443. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_read_be.at:184" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:184"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:185: cp \$srcdir/results/read-var25.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var25"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:185"
( $at_check_trace; cp $srcdir/results/read-var25.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var25
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:185"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_443
#AT_START_444
at_fn_group_banner 444 'mat5_compressed_read_be.at:189' \
  "Read empty struct with fields" "                  " 6
at_xfail=no
(
  $as_echo "444. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_read_be.at:191" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:191"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:192: cp \$srcdir/results/read-var26.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var26"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:192"
( $at_check_trace; cp $srcdir/results/read-var26.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var26
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:192"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_444
#AT_START_445
at_fn_group_banner 445 'mat5_compressed_read_be.at:196' \
  "Read struct with empty fields" "                  " 6
at_xfail=no
(
  $as_echo "445. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_read_be.at:198" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:198"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:199: cp \$srcdir/results/read-var27.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var27"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:199"
( $at_check_trace; cp $srcdir/results/read-var27.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var27
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:199"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_445
#AT_START_446
at_fn_group_banner 446 'mat5_compressed_read_be.at:203' \
  "Read struct with double fields" "                 " 6
at_xfail=no
(
  $as_echo "446. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:204" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:204"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:205: cp \$srcdir/results/read-var28.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var28"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:205"
( $at_check_trace; cp $srcdir/results/read-var28.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var28
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:205"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_446
#AT_START_447
at_fn_group_banner 447 'mat5_compressed_read_be.at:209' \
  "Read struct with single fields" "                 " 6
at_xfail=no
(
  $as_echo "447. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:210" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:210"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:211: cp \$srcdir/results/read-var29.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var29"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:211"
( $at_check_trace; cp $srcdir/results/read-var29.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var29
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:211"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_447
#AT_START_448
at_fn_group_banner 448 'mat5_compressed_read_be.at:215' \
  "Read struct with int64 fields" "                  " 6
at_xfail=no
(
  $as_echo "448. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:216" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:216"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:217: cp \$srcdir/results/read-var30.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var30"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:217"
( $at_check_trace; cp $srcdir/results/read-var30.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var30
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:217"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_448
#AT_START_449
at_fn_group_banner 449 'mat5_compressed_read_be.at:221' \
  "Read struct with uint64 fields" "                 " 6
at_xfail=no
(
  $as_echo "449. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:222" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:222"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:223: cp \$srcdir/results/read-var31.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var31"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:223"
( $at_check_trace; cp $srcdir/results/read-var31.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var31
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:223"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_449
#AT_START_450
at_fn_group_banner 450 'mat5_compressed_read_be.at:227' \
  "Read struct with int32 fields" "                  " 6
at_xfail=no
(
  $as_echo "450. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:228" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:228"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:229: cp \$srcdir/results/read-var32.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var32"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:229"
( $at_check_trace; cp $srcdir/results/read-var32.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var32
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:229"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_450
#AT_START_451
at_fn_group_banner 451 'mat5_compressed_read_be.at:233' \
  "Read struct with uint32 fields" "                 " 6
at_xfail=no
(
  $as_echo "451. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:234" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:234"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:235: cp \$srcdir/results/read-var33.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var33"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:235"
( $at_check_trace; cp $srcdir/results/read-var33.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var33
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:235"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_451
#AT_START_452
at_fn_group_banner 452 'mat5_compressed_read_be.at:239' \
  "Read struct with int16 fields" "                  " 6
at_xfail=no
(
  $as_echo "452. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:240" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:240"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:241: cp \$srcdir/results/read-var34.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var34"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:241"
( $at_check_trace; cp $srcdir/results/read-var34.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var34
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:241"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_452
#AT_START_453
at_fn_group_banner 453 'mat5_compressed_read_be.at:245' \
  "Read struct with uint16 fields" "                 " 6
at_xfail=no
(
  $as_echo "453. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:246" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:246"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:247: cp \$srcdir/results/read-var35.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var35"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:247"
( $at_check_trace; cp $srcdir/results/read-var35.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var35
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:247"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_453
#AT_START_454
at_fn_group_banner 454 'mat5_compressed_read_be.at:251' \
  "Read struct with int8 fields" "                   " 6
at_xfail=no
(
  $as_echo "454. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:252" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:252"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:253: cp \$srcdir/results/read-var36.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var36"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:253"
( $at_check_trace; cp $srcdir/results/read-var36.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var36
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:253"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_454
#AT_START_455
at_fn_group_banner 455 'mat5_compressed_read_be.at:257' \
  "Read struct with uint8 fields" "                  " 6
at_xfail=no
(
  $as_echo "455. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:258" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:258"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:259: cp \$srcdir/results/read-var37.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var37"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:259"
( $at_check_trace; cp $srcdir/results/read-var37.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var37
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:259"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_455
#AT_START_456
at_fn_group_banner 456 'mat5_compressed_read_be.at:263' \
  "Read struct with complex double fields" "         " 6
at_xfail=no
(
  $as_echo "456. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:264" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:264"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:265: cp \$srcdir/results/read-var38.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var38"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:265"
( $at_check_trace; cp $srcdir/results/read-var38.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var38
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:265"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_456
#AT_START_457
at_fn_group_banner 457 'mat5_compressed_read_be.at:269' \
  "Read struct with complex single fields" "         " 6
at_xfail=no
(
  $as_echo "457. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:270" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:270"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:271: cp \$srcdir/results/read-var39.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var39"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:271"
( $at_check_trace; cp $srcdir/results/read-var39.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var39
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:271"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_457
#AT_START_458
at_fn_group_banner 458 'mat5_compressed_read_be.at:275' \
  "Read struct with complex int64 fields" "          " 6
at_xfail=no
(
  $as_echo "458. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:276" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:276"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:277: cp \$srcdir/results/read-var40.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var40"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:277"
( $at_check_trace; cp $srcdir/results/read-var40.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var40
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:277"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_458
#AT_START_459
at_fn_group_banner 459 'mat5_compressed_read_be.at:281' \
  "Read struct with complex uint64 fields" "         " 6
at_xfail=no
(
  $as_echo "459. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:282" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:282"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:283: cp \$srcdir/results/read-var41.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var41"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:283"
( $at_check_trace; cp $srcdir/results/read-var41.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var41
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:283"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_459
#AT_START_460
at_fn_group_banner 460 'mat5_compressed_read_be.at:287' \
  "Read struct with complex int32 fields" "          " 6
at_xfail=no
(
  $as_echo "460. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:288" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:288"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:289: cp \$srcdir/results/read-var42.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var42"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:289"
( $at_check_trace; cp $srcdir/results/read-var42.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var42
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:289"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_460
#AT_START_461
at_fn_group_banner 461 'mat5_compressed_read_be.at:293' \
  "Read struct with complex uint32 fields" "         " 6
at_xfail=no
(
  $as_echo "461. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:294" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:294"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:295: cp \$srcdir/results/read-var43.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var43"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:295"
( $at_check_trace; cp $srcdir/results/read-var43.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var43
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:295"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_461
#AT_START_462
at_fn_group_banner 462 'mat5_compressed_read_be.at:299' \
  "Read struct with complex int16 fields" "          " 6
at_xfail=no
(
  $as_echo "462. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:300" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:300"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:301: cp \$srcdir/results/read-var44.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var44"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:301"
( $at_check_trace; cp $srcdir/results/read-var44.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var44
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:301"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_462
#AT_START_463
at_fn_group_banner 463 'mat5_compressed_read_be.at:305' \
  "Read struct with complex uint16 fields" "         " 6
at_xfail=no
(
  $as_echo "463. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:306" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:306"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:307: cp \$srcdir/results/read-var45.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var45"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:307"
( $at_check_trace; cp $srcdir/results/read-var45.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var45
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:307"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_463
#AT_START_464
at_fn_group_banner 464 'mat5_compressed_read_be.at:311' \
  "Read struct with complex int8 fields" "           " 6
at_xfail=no
(
  $as_echo "464. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:312" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:312"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:313: cp \$srcdir/results/read-var46.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var46"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:313"
( $at_check_trace; cp $srcdir/results/read-var46.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var46
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:313"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_464
#AT_START_465
at_fn_group_banner 465 'mat5_compressed_read_be.at:317' \
  "Read struct with complex uint8 fields" "          " 6
at_xfail=no
(
  $as_echo "465. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:318" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:318"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:319: cp \$srcdir/results/read-var47.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var47"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:319"
( $at_check_trace; cp $srcdir/results/read-var47.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var47
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:319"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_465
#AT_START_466
at_fn_group_banner 466 'mat5_compressed_read_be.at:323' \
  "Read struct with logical fields" "                " 6
at_xfail=no
(
  $as_echo "466. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:324" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:324"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:325: cp \$srcdir/results/read-var91.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var91"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:325"
( $at_check_trace; cp $srcdir/results/read-var91.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var91
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:325"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_466
#AT_START_467
at_fn_group_banner 467 'mat5_compressed_read_be.at:329' \
  "Read struct with sparse double fields" "          " 6
at_xfail=no
(
  $as_echo "467. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:330" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:330"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:331: cp \$srcdir/results/read-var48.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var48"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:331"
( $at_check_trace; cp $srcdir/results/read-var48.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var48
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:331"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_467
#AT_START_468
at_fn_group_banner 468 'mat5_compressed_read_be.at:335' \
  "Read struct with sparse complex double fields" "  " 6
at_xfail=no
(
  $as_echo "468. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:336" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:336"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:337: cp \$srcdir/results/read-var49.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var49"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:337"
( $at_check_trace; cp $srcdir/results/read-var49.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var49
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:337"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_468
#AT_START_469
at_fn_group_banner 469 'mat5_compressed_read_be.at:341' \
  "Read struct with character fields" "              " 6
at_xfail=no
(
  $as_echo "469. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:342" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:342"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:343: cp \$srcdir/results/read-var50.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var50"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:343"
( $at_check_trace; cp $srcdir/results/read-var50.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var50
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:343"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_469
#AT_START_470
at_fn_group_banner 470 'mat5_compressed_read_be.at:347' \
  "Read empty cell array" "                          " 6
at_xfail=no
(
  $as_echo "470. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_read_be.at:349" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:349"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:350: cp \$srcdir/results/read-var51.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var51"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:350"
( $at_check_trace; cp $srcdir/results/read-var51.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var51
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:350"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_470
#AT_START_471
at_fn_group_banner 471 'mat5_compressed_read_be.at:354' \
  "Read cell array with empty arrays" "              " 6
at_xfail=no
(
  $as_echo "471. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_read_be.at:356" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:356"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:357: cp \$srcdir/results/read-var52.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var52"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:357"
( $at_check_trace; cp $srcdir/results/read-var52.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var52
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:357"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_471
#AT_START_472
at_fn_group_banner 472 'mat5_compressed_read_be.at:361' \
  "Read cell array with double arrays" "             " 6
at_xfail=no
(
  $as_echo "472. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:362" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:362"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:363: cp \$srcdir/results/read-var53.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var53"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:363"
( $at_check_trace; cp $srcdir/results/read-var53.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var53
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:363"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_472
#AT_START_473
at_fn_group_banner 473 'mat5_compressed_read_be.at:367' \
  "Read cell array with single arrays" "             " 6
at_xfail=no
(
  $as_echo "473. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:368" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:368"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:369: cp \$srcdir/results/read-var54.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var54"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:369"
( $at_check_trace; cp $srcdir/results/read-var54.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var54
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:369"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_473
#AT_START_474
at_fn_group_banner 474 'mat5_compressed_read_be.at:373' \
  "Read cell array with int64 arrays" "              " 6
at_xfail=no
(
  $as_echo "474. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:374" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:374"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:375: cp \$srcdir/results/read-var55.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var55"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:375"
( $at_check_trace; cp $srcdir/results/read-var55.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var55
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:375"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_474
#AT_START_475
at_fn_group_banner 475 'mat5_compressed_read_be.at:379' \
  "Read cell array with uint64 arrays" "             " 6
at_xfail=no
(
  $as_echo "475. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:380" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:380"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:381: cp \$srcdir/results/read-var56.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var56"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:381"
( $at_check_trace; cp $srcdir/results/read-var56.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var56
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:381"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_475
#AT_START_476
at_fn_group_banner 476 'mat5_compressed_read_be.at:385' \
  "Read cell array with int32 arrays" "              " 6
at_xfail=no
(
  $as_echo "476. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:386" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:386"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:387: cp \$srcdir/results/read-var57.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var57"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:387"
( $at_check_trace; cp $srcdir/results/read-var57.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var57
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:387"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_476
#AT_START_477
at_fn_group_banner 477 'mat5_compressed_read_be.at:391' \
  "Read cell array with uint32 arrays" "             " 6
at_xfail=no
(
  $as_echo "477. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:392" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:392"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:393: cp \$srcdir/results/read-var58.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var58"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:393"
( $at_check_trace; cp $srcdir/results/read-var58.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var58
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:393"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_477
#AT_START_478
at_fn_group_banner 478 'mat5_compressed_read_be.at:397' \
  "Read cell array with int16 arrays" "              " 6
at_xfail=no
(
  $as_echo "478. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:398" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:398"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:399: cp \$srcdir/results/read-var59.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var59"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:399"
( $at_check_trace; cp $srcdir/results/read-var59.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var59
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:399"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_478
#AT_START_479
at_fn_group_banner 479 'mat5_compressed_read_be.at:403' \
  "Read cell array with uint16 arrays" "             " 6
at_xfail=no
(
  $as_echo "479. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:404" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:404"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:405: cp \$srcdir/results/read-var60.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var60"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:405"
( $at_check_trace; cp $srcdir/results/read-var60.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var60
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:405"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_479
#AT_START_480
at_fn_group_banner 480 'mat5_compressed_read_be.at:409' \
  "Read cell array with int8 arrays" "               " 6
at_xfail=no
(
  $as_echo "480. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:410" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:410"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:411: cp \$srcdir/results/read-var61.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var61"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:411"
( $at_check_trace; cp $srcdir/results/read-var61.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var61
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:411"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_480
#AT_START_481
at_fn_group_banner 481 'mat5_compressed_read_be.at:415' \
  "Read cell array with uint8 arrays" "              " 6
at_xfail=no
(
  $as_echo "481. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:416" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:416"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:417: cp \$srcdir/results/read-var62.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var62"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:417"
( $at_check_trace; cp $srcdir/results/read-var62.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var62
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:417"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_481
#AT_START_482
at_fn_group_banner 482 'mat5_compressed_read_be.at:421' \
  "Read cell array with logical arrays" "            " 6
at_xfail=no
(
  $as_echo "482. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:422" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:422"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:423: cp \$srcdir/results/read-var92.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var92"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:423"
( $at_check_trace; cp $srcdir/results/read-var92.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var92
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:423"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_482
#AT_START_483
at_fn_group_banner 483 'mat5_compressed_read_be.at:427' \
  "Read cell array with sparse double arrays" "      " 6
at_xfail=no
(
  $as_echo "483. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:428" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:428"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:429: cp \$srcdir/results/read-var63.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var63"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:429"
( $at_check_trace; cp $srcdir/results/read-var63.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var63
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:429"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_483
#AT_START_484
at_fn_group_banner 484 'mat5_compressed_read_be.at:433' \
  "Read cell array with sparse complex double arrays" "" 6
at_xfail=no
(
  $as_echo "484. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:434" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:434"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:435: cp \$srcdir/results/read-var64.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var64"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:435"
( $at_check_trace; cp $srcdir/results/read-var64.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var64
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:435"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_484
#AT_START_485
at_fn_group_banner 485 'mat5_compressed_read_be.at:439' \
  "Read cell array with character arrays" "          " 6
at_xfail=no
(
  $as_echo "485. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:440" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:440"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:441: cp \$srcdir/results/read-var65.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var65"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:441"
( $at_check_trace; cp $srcdir/results/read-var65.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var65
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:441"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_485
#AT_START_486
at_fn_group_banner 486 'mat5_compressed_read_be.at:445' \
  "Read cell array with empty structs" "             " 6
at_xfail=no
(
  $as_echo "486. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_read_be.at:447" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:447"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:448: cp \$srcdir/results/read-var66.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var66"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:448"
( $at_check_trace; cp $srcdir/results/read-var66.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var66
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:448"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_486
#AT_START_487
at_fn_group_banner 487 'mat5_compressed_read_be.at:452' \
  "Read cell array with structs (numeric fields)" "  " 6
at_xfail=no
(
  $as_echo "487. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:453" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:453"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:454: cp \$srcdir/results/read-var67.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var67"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:454"
( $at_check_trace; cp $srcdir/results/read-var67.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var67
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:454"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_487
#AT_START_488
at_fn_group_banner 488 'mat5_compressed_read_be.at:458' \
  "Read cell array with structs (sparse fields)" "   " 6
at_xfail=no
(
  $as_echo "488. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:459" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:459"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:460: cp \$srcdir/results/read-var68.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var68"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:460"
( $at_check_trace; cp $srcdir/results/read-var68.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var68
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:460"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_488
#AT_START_489
at_fn_group_banner 489 'mat5_compressed_read_be.at:464' \
  "Read cell array with structs (character fields)" "" 6
at_xfail=no
(
  $as_echo "489. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_read_be.at:465" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_read_be.at:465"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_read_be.at:466: cp \$srcdir/results/read-var69.out expout
          \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_compressed_be.mat var69"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_read_be.at:466"
( $at_check_trace; cp $srcdir/results/read-var69.out expout
          $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_compressed_be.mat var69
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_read_be.at:466"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_489
#AT_START_490
at_fn_group_banner 490 'mat5_compressed_readslab_be.at:27' \
  "Read slab of double array" "                      " 6
at_xfail=no
(
  $as_echo "490. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:29" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:29"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:30: cp \$srcdir/results/dump-var70-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var70\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:30"
( $at_check_trace; cp $srcdir/results/dump-var70-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var70\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:30"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:32: cp \$srcdir/results/dump-var70-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var70\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:32"
( $at_check_trace; cp $srcdir/results/dump-var70-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var70\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:32"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:34: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_be.mat var70"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var70" "mat5_compressed_readslab_be.at:34"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var70
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:34"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:35: cp \$srcdir/results/dump-var7x-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var70\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:35"
( $at_check_trace; cp $srcdir/results/dump-var7x-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var70\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:35"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_490
#AT_START_491
at_fn_group_banner 491 'mat5_compressed_readslab_be.at:39' \
  "Read slab of single array" "                      " 6
at_xfail=no
(
  $as_echo "491. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:41" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:41"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:42: cp \$srcdir/results/dump-var71-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var71\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:42"
( $at_check_trace; cp $srcdir/results/dump-var71-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var71\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:42"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:44: cp \$srcdir/results/dump-var71-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var71\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:44"
( $at_check_trace; cp $srcdir/results/dump-var71-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var71\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:44"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:46: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_be.mat var71"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var71" "mat5_compressed_readslab_be.at:46"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var71
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:46"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:47: cp \$srcdir/results/dump-var7x-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var71\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:47"
( $at_check_trace; cp $srcdir/results/dump-var7x-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var71\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:47"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_491
#AT_START_492
at_fn_group_banner 492 'mat5_compressed_readslab_be.at:51' \
  "Read slab of int64 array" "                       " 6
at_xfail=no
(
  $as_echo "492. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:53" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:53"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:54: cp \$srcdir/results/dump-var72-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var72\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:54"
( $at_check_trace; cp $srcdir/results/dump-var72-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var72\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:54"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:56: cp \$srcdir/results/dump-var72-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var72\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:56"
( $at_check_trace; cp $srcdir/results/dump-var72-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var72\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:56"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:58: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_be.mat var72"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var72" "mat5_compressed_readslab_be.at:58"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var72
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:58"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:59: cp \$srcdir/results/dump-var7x-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var72\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:59"
( $at_check_trace; cp $srcdir/results/dump-var7x-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var72\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:59"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_492
#AT_START_493
at_fn_group_banner 493 'mat5_compressed_readslab_be.at:63' \
  "Read slab of uint64 array" "                      " 6
at_xfail=no
(
  $as_echo "493. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:65" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:65"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:66: cp \$srcdir/results/dump-var73-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var73\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:66"
( $at_check_trace; cp $srcdir/results/dump-var73-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var73\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:66"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:68: cp \$srcdir/results/dump-var73-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var73\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:68"
( $at_check_trace; cp $srcdir/results/dump-var73-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var73\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:68"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:70: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_be.mat var73"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var73" "mat5_compressed_readslab_be.at:70"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var73
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:70"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:71: cp \$srcdir/results/dump-var7x-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var73\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:71"
( $at_check_trace; cp $srcdir/results/dump-var7x-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var73\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:71"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_493
#AT_START_494
at_fn_group_banner 494 'mat5_compressed_readslab_be.at:75' \
  "Read slab of int32 array" "                       " 6
at_xfail=no
(
  $as_echo "494. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:77" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:77"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:78: cp \$srcdir/results/dump-var74-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var74\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:78"
( $at_check_trace; cp $srcdir/results/dump-var74-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var74\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:78"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:80: cp \$srcdir/results/dump-var74-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var74\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:80"
( $at_check_trace; cp $srcdir/results/dump-var74-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var74\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:80"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:82: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_be.mat var74"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var74" "mat5_compressed_readslab_be.at:82"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var74
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:82"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:83: cp \$srcdir/results/dump-var7x-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var74\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:83"
( $at_check_trace; cp $srcdir/results/dump-var7x-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var74\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:83"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_494
#AT_START_495
at_fn_group_banner 495 'mat5_compressed_readslab_be.at:87' \
  "Read slab of uint32 array" "                      " 6
at_xfail=no
(
  $as_echo "495. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:89" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:89"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:90: cp \$srcdir/results/dump-var75-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var75\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:90"
( $at_check_trace; cp $srcdir/results/dump-var75-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var75\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:90"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:92: cp \$srcdir/results/dump-var75-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var75\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:92"
( $at_check_trace; cp $srcdir/results/dump-var75-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var75\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:92"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:94: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_be.mat var75"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var75" "mat5_compressed_readslab_be.at:94"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var75
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:94"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:95: cp \$srcdir/results/dump-var7x-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var75\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:95"
( $at_check_trace; cp $srcdir/results/dump-var7x-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var75\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:95"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_495
#AT_START_496
at_fn_group_banner 496 'mat5_compressed_readslab_be.at:99' \
  "Read slab of int16 array" "                       " 6
at_xfail=no
(
  $as_echo "496. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:101" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:101"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:102: cp \$srcdir/results/dump-var76-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var76\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:102"
( $at_check_trace; cp $srcdir/results/dump-var76-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var76\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:102"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:104: cp \$srcdir/results/dump-var76-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var76\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:104"
( $at_check_trace; cp $srcdir/results/dump-var76-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var76\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:104"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:106: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_be.mat var76"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var76" "mat5_compressed_readslab_be.at:106"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var76
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:106"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:107: cp \$srcdir/results/dump-var7x-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var76\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:107"
( $at_check_trace; cp $srcdir/results/dump-var7x-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var76\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:107"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_496
#AT_START_497
at_fn_group_banner 497 'mat5_compressed_readslab_be.at:111' \
  "Read slab of uint16 array" "                      " 6
at_xfail=no
(
  $as_echo "497. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:113" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:113"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:114: cp \$srcdir/results/dump-var77-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var77\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:114"
( $at_check_trace; cp $srcdir/results/dump-var77-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var77\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:114"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:116: cp \$srcdir/results/dump-var77-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var77\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:116"
( $at_check_trace; cp $srcdir/results/dump-var77-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var77\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:116"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:118: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_be.mat var77"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var77" "mat5_compressed_readslab_be.at:118"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var77
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:118"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:119: cp \$srcdir/results/dump-var7x-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var77\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:119"
( $at_check_trace; cp $srcdir/results/dump-var7x-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var77\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:119"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_497
#AT_START_498
at_fn_group_banner 498 'mat5_compressed_readslab_be.at:123' \
  "Read slab of int8 array" "                        " 6
at_xfail=no
(
  $as_echo "498. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:125" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:125"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:126: cp \$srcdir/results/dump-var78-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var78\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:126"
( $at_check_trace; cp $srcdir/results/dump-var78-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var78\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:126"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:128: cp \$srcdir/results/dump-var78-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var78\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:128"
( $at_check_trace; cp $srcdir/results/dump-var78-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var78\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:128"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:130: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_be.mat var78"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var78" "mat5_compressed_readslab_be.at:130"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var78
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:130"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:131: cp \$srcdir/results/dump-var78-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var78\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:131"
( $at_check_trace; cp $srcdir/results/dump-var78-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var78\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:131"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_498
#AT_START_499
at_fn_group_banner 499 'mat5_compressed_readslab_be.at:135' \
  "Read slab of uint8 array" "                       " 6
at_xfail=no
(
  $as_echo "499. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:137" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:137"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:138: cp \$srcdir/results/dump-var79-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var79\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:138"
( $at_check_trace; cp $srcdir/results/dump-var79-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var79\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:138"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:140: cp \$srcdir/results/dump-var79-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var79\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:140"
( $at_check_trace; cp $srcdir/results/dump-var79-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var79\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:140"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:142: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_be.mat var79"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var79" "mat5_compressed_readslab_be.at:142"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var79
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:142"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:143: cp \$srcdir/results/dump-var79-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var79\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:143"
( $at_check_trace; cp $srcdir/results/dump-var79-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var79\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:143"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_499
#AT_START_500
at_fn_group_banner 500 'mat5_compressed_readslab_be.at:147' \
  "Read slab of complex double array" "              " 6
at_xfail=no
(
  $as_echo "500. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:149" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:149"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:150: cp \$srcdir/results/dump-var80-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var80\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:150"
( $at_check_trace; cp $srcdir/results/dump-var80-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var80\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:150"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:152: cp \$srcdir/results/dump-var80-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var80\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:152"
( $at_check_trace; cp $srcdir/results/dump-var80-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var80\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:152"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:154: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_be.mat var80"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var80" "mat5_compressed_readslab_be.at:154"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var80
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:154"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:155: cp \$srcdir/results/dump-var8x-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var80\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:155"
( $at_check_trace; cp $srcdir/results/dump-var8x-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var80\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:155"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_500
#AT_START_501
at_fn_group_banner 501 'mat5_compressed_readslab_be.at:159' \
  "Read slab of complex single array" "              " 6
at_xfail=no
(
  $as_echo "501. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:161" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:161"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:162: cp \$srcdir/results/dump-var81-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var81\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:162"
( $at_check_trace; cp $srcdir/results/dump-var81-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var81\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:162"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:164: cp \$srcdir/results/dump-var81-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var81\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:164"
( $at_check_trace; cp $srcdir/results/dump-var81-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var81\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:164"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:166: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_be.mat var81"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var81" "mat5_compressed_readslab_be.at:166"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var81
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:166"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:167: cp \$srcdir/results/dump-var8x-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var81\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:167"
( $at_check_trace; cp $srcdir/results/dump-var8x-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var81\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:167"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_501
#AT_START_502
at_fn_group_banner 502 'mat5_compressed_readslab_be.at:171' \
  "Read slab of complex int64 array" "               " 6
at_xfail=no
(
  $as_echo "502. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:173" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:173"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:174: cp \$srcdir/results/dump-var82-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var82\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:174"
( $at_check_trace; cp $srcdir/results/dump-var82-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var82\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:174"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:176: cp \$srcdir/results/dump-var82-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var82\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:176"
( $at_check_trace; cp $srcdir/results/dump-var82-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var82\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:176"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:178: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_be.mat var82"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var82" "mat5_compressed_readslab_be.at:178"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var82
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:178"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:179: cp \$srcdir/results/dump-var8x-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var82\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:179"
( $at_check_trace; cp $srcdir/results/dump-var8x-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var82\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:179"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_502
#AT_START_503
at_fn_group_banner 503 'mat5_compressed_readslab_be.at:183' \
  "Read slab of complex uint64 array" "              " 6
at_xfail=no
(
  $as_echo "503. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:185" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:185"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:186: cp \$srcdir/results/dump-var83-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var83\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:186"
( $at_check_trace; cp $srcdir/results/dump-var83-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var83\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:186"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:188: cp \$srcdir/results/dump-var83-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var83\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:188"
( $at_check_trace; cp $srcdir/results/dump-var83-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var83\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:188"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:190: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_be.mat var83"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var83" "mat5_compressed_readslab_be.at:190"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var83
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:190"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:191: cp \$srcdir/results/dump-var8x-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var83\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:191"
( $at_check_trace; cp $srcdir/results/dump-var8x-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var83\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:191"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_503
#AT_START_504
at_fn_group_banner 504 'mat5_compressed_readslab_be.at:195' \
  "Read slab of complex int32 array" "               " 6
at_xfail=no
(
  $as_echo "504. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:197" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:197"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:198: cp \$srcdir/results/dump-var84-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var84\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:198"
( $at_check_trace; cp $srcdir/results/dump-var84-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var84\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:198"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:200: cp \$srcdir/results/dump-var84-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var84\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:200"
( $at_check_trace; cp $srcdir/results/dump-var84-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var84\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:200"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:202: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_be.mat var84"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var84" "mat5_compressed_readslab_be.at:202"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var84
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:202"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:203: cp \$srcdir/results/dump-var8x-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var84\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:203"
( $at_check_trace; cp $srcdir/results/dump-var8x-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var84\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:203"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_504
#AT_START_505
at_fn_group_banner 505 'mat5_compressed_readslab_be.at:207' \
  "Read slab of complex uint32 array" "              " 6
at_xfail=no
(
  $as_echo "505. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:209" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:209"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:210: cp \$srcdir/results/dump-var85-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var85\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:210"
( $at_check_trace; cp $srcdir/results/dump-var85-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var85\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:210"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:212: cp \$srcdir/results/dump-var85-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var85\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:212"
( $at_check_trace; cp $srcdir/results/dump-var85-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var85\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:212"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:214: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_be.mat var85"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var85" "mat5_compressed_readslab_be.at:214"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var85
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:214"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:215: cp \$srcdir/results/dump-var8x-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var85\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:215"
( $at_check_trace; cp $srcdir/results/dump-var8x-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var85\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:215"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_505
#AT_START_506
at_fn_group_banner 506 'mat5_compressed_readslab_be.at:219' \
  "Read slab of complex int16 array" "               " 6
at_xfail=no
(
  $as_echo "506. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:221" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:221"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:222: cp \$srcdir/results/dump-var86-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var86\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:222"
( $at_check_trace; cp $srcdir/results/dump-var86-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var86\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:222"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:224: cp \$srcdir/results/dump-var86-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var86\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:224"
( $at_check_trace; cp $srcdir/results/dump-var86-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var86\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:224"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:226: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_be.mat var86"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var86" "mat5_compressed_readslab_be.at:226"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var86
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:226"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:227: cp \$srcdir/results/dump-var86-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var86\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:227"
( $at_check_trace; cp $srcdir/results/dump-var86-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var86\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:227"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_506
#AT_START_507
at_fn_group_banner 507 'mat5_compressed_readslab_be.at:231' \
  "Read slab of complex uint16 array" "              " 6
at_xfail=no
(
  $as_echo "507. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:233" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:233"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:234: cp \$srcdir/results/dump-var87-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var87\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:234"
( $at_check_trace; cp $srcdir/results/dump-var87-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var87\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:234"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:236: cp \$srcdir/results/dump-var87-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var87\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:236"
( $at_check_trace; cp $srcdir/results/dump-var87-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var87\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:236"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:238: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_be.mat var87"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var87" "mat5_compressed_readslab_be.at:238"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var87
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:238"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:239: cp \$srcdir/results/dump-var87-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var87\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:239"
( $at_check_trace; cp $srcdir/results/dump-var87-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var87\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:239"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_507
#AT_START_508
at_fn_group_banner 508 'mat5_compressed_readslab_be.at:243' \
  "Read slab of complex int8 array" "                " 6
at_xfail=no
(
  $as_echo "508. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:245" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:245"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:246: cp \$srcdir/results/dump-var88-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var88\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:246"
( $at_check_trace; cp $srcdir/results/dump-var88-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var88\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:246"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:248: cp \$srcdir/results/dump-var88-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var88\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:248"
( $at_check_trace; cp $srcdir/results/dump-var88-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var88\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:248"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:250: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_be.mat var88"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var88" "mat5_compressed_readslab_be.at:250"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var88
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:250"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:251: cp \$srcdir/results/dump-var88-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var88\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:251"
( $at_check_trace; cp $srcdir/results/dump-var88-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var88\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:251"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_508
#AT_START_509
at_fn_group_banner 509 'mat5_compressed_readslab_be.at:255' \
  "Read slab of complex uint8 array" "               " 6
at_xfail=no
(
  $as_echo "509. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:257" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:257"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:258: cp \$srcdir/results/dump-var89-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var89\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:258"
( $at_check_trace; cp $srcdir/results/dump-var89-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var89\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:258"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:260: cp \$srcdir/results/dump-var89-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var89\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:260"
( $at_check_trace; cp $srcdir/results/dump-var89-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var89\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:260"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:262: \$builddir/test_mat reshape32x32x32 -v 5 -z \$srcdir/datasets/matio_test_cases_compressed_be.mat var89"
at_fn_check_prepare_dynamic "$builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var89" "mat5_compressed_readslab_be.at:262"
( $at_check_trace; $builddir/test_mat reshape32x32x32 -v 5 -z $srcdir/datasets/matio_test_cases_compressed_be.mat var89
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:262"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:263: cp \$srcdir/results/dump-var89-3.out expout
          \$builddir/../tools/matdump -d test_write_reshape32x32x32.mat var89\\(2:30:end,4:50:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:263"
( $at_check_trace; cp $srcdir/results/dump-var89-3.out expout
          $builddir/../tools/matdump -d test_write_reshape32x32x32.mat var89\(2:30:end,4:50:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:263"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_509
#AT_START_510
at_fn_group_banner 510 'mat5_compressed_readslab_be.at:267' \
  "Read linear slab of double array" "               " 6
at_xfail=no
(
  $as_echo "510. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:269" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:269"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:270: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var70\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:270"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var70\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:270"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_510
#AT_START_511
at_fn_group_banner 511 'mat5_compressed_readslab_be.at:274' \
  "Read linear slab of single array" "               " 6
at_xfail=no
(
  $as_echo "511. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:276" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:276"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:277: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var71\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:277"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var71\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:277"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_511
#AT_START_512
at_fn_group_banner 512 'mat5_compressed_readslab_be.at:281' \
  "Read linear slab of int64 array" "                " 6
at_xfail=no
(
  $as_echo "512. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:283" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:283"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:284: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var72\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:284"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var72\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:284"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_512
#AT_START_513
at_fn_group_banner 513 'mat5_compressed_readslab_be.at:288' \
  "Read linear slab of uint64 array" "               " 6
at_xfail=no
(
  $as_echo "513. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:290" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:290"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:291: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var73\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:291"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var73\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:291"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_513
#AT_START_514
at_fn_group_banner 514 'mat5_compressed_readslab_be.at:295' \
  "Read linear slab of int32 array" "                " 6
at_xfail=no
(
  $as_echo "514. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:297" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:297"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:298: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var74\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:298"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var74\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:298"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_514
#AT_START_515
at_fn_group_banner 515 'mat5_compressed_readslab_be.at:302' \
  "Read linear slab of uint32 array" "               " 6
at_xfail=no
(
  $as_echo "515. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:304" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:304"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:305: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var75\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:305"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var75\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:305"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_515
#AT_START_516
at_fn_group_banner 516 'mat5_compressed_readslab_be.at:309' \
  "Read linear slab of int16 array" "                " 6
at_xfail=no
(
  $as_echo "516. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:311" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:311"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:312: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var76\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:312"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var76\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:312"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_516
#AT_START_517
at_fn_group_banner 517 'mat5_compressed_readslab_be.at:316' \
  "Read linear slab of uint16 array" "               " 6
at_xfail=no
(
  $as_echo "517. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:318" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:318"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:319: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var77\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:319"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var77\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:319"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_517
#AT_START_518
at_fn_group_banner 518 'mat5_compressed_readslab_be.at:323' \
  "Read linear slab of int8 array" "                 " 6
at_xfail=no
(
  $as_echo "518. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:325" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:325"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:326: cp \$srcdir/results/dump-var78-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var78\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:326"
( $at_check_trace; cp $srcdir/results/dump-var78-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var78\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:326"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_518
#AT_START_519
at_fn_group_banner 519 'mat5_compressed_readslab_be.at:330' \
  "Read linear slab of uint8 array" "                " 6
at_xfail=no
(
  $as_echo "519. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:332" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:332"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:333: cp \$srcdir/results/dump-var79-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var79\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:333"
( $at_check_trace; cp $srcdir/results/dump-var79-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var79\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:333"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_519
#AT_START_520
at_fn_group_banner 520 'mat5_compressed_readslab_be.at:337' \
  "Read linear slab of complex double array" "       " 6
at_xfail=no
(
  $as_echo "520. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:339" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:339"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:340: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var80\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:340"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var80\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:340"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_520
#AT_START_521
at_fn_group_banner 521 'mat5_compressed_readslab_be.at:344' \
  "Read linear slab of complex single array" "       " 6
at_xfail=no
(
  $as_echo "521. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:346" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:346"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:347: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var81\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:347"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var81\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:347"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_521
#AT_START_522
at_fn_group_banner 522 'mat5_compressed_readslab_be.at:351' \
  "Read linear slab of complex int64 array" "        " 6
at_xfail=no
(
  $as_echo "522. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:353" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:353"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:354: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var82\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:354"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var82\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:354"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_522
#AT_START_523
at_fn_group_banner 523 'mat5_compressed_readslab_be.at:358' \
  "Read linear slab of complex uint64 array" "       " 6
at_xfail=no
(
  $as_echo "523. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:360" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:360"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:361: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var83\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:361"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var83\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:361"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_523
#AT_START_524
at_fn_group_banner 524 'mat5_compressed_readslab_be.at:365' \
  "Read linear slab of complex int32 array" "        " 6
at_xfail=no
(
  $as_echo "524. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:367" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:367"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:368: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var84\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:368"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var84\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:368"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_524
#AT_START_525
at_fn_group_banner 525 'mat5_compressed_readslab_be.at:372' \
  "Read linear slab of complex uint32 array" "       " 6
at_xfail=no
(
  $as_echo "525. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:374" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:374"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:375: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var85\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:375"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var85\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:375"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_525
#AT_START_526
at_fn_group_banner 526 'mat5_compressed_readslab_be.at:379' \
  "Read linear slab of complex int16 array" "        " 6
at_xfail=no
(
  $as_echo "526. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:381" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:381"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:382: cp \$srcdir/results/dump-var86-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var86\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:382"
( $at_check_trace; cp $srcdir/results/dump-var86-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var86\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:382"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_526
#AT_START_527
at_fn_group_banner 527 'mat5_compressed_readslab_be.at:386' \
  "Read linear slab of complex uint16 array" "       " 6
at_xfail=no
(
  $as_echo "527. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:388" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:388"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:389: cp \$srcdir/results/dump-var87-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var87\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:389"
( $at_check_trace; cp $srcdir/results/dump-var87-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var87\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:389"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_527
#AT_START_528
at_fn_group_banner 528 'mat5_compressed_readslab_be.at:393' \
  "Read linear slab of complex int8 array" "         " 6
at_xfail=no
(
  $as_echo "528. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:395" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:395"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:396: cp \$srcdir/results/dump-var88-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var88\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:396"
( $at_check_trace; cp $srcdir/results/dump-var88-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var88\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:396"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_528
#AT_START_529
at_fn_group_banner 529 'mat5_compressed_readslab_be.at:400' \
  "Read linear slab of complex uint8 array" "        " 6
at_xfail=no
(
  $as_echo "529. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:402" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:402"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:403: cp \$srcdir/results/dump-var89-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var89\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:403"
( $at_check_trace; cp $srcdir/results/dump-var89-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var89\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:403"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_529
#AT_START_530
at_fn_group_banner 530 'mat5_compressed_readslab_be.at:407' \
  "Read slab of double array from struct" "          " 6
at_xfail=no
(
  $as_echo "530. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:409" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:409"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:410: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var28.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:410"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var28.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:410"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:412: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var28.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:412"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var28.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:412"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:414: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var28.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:414"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var28.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:414"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_530
#AT_START_531
at_fn_group_banner 531 'mat5_compressed_readslab_be.at:418' \
  "Read slab of single array from struct" "          " 6
at_xfail=no
(
  $as_echo "531. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:420" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:420"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:421: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var29.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:421"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var29.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:421"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:423: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var29.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:423"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var29.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:423"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:425: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var29.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:425"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var29.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:425"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_531
#AT_START_532
at_fn_group_banner 532 'mat5_compressed_readslab_be.at:429' \
  "Read slab of int64 array from struct" "           " 6
at_xfail=no
(
  $as_echo "532. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:431" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:431"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:432: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var30.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:432"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var30.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:432"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:434: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var30.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:434"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var30.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:434"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:436: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var30.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:436"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var30.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:436"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_532
#AT_START_533
at_fn_group_banner 533 'mat5_compressed_readslab_be.at:440' \
  "Read slab of uint64 array from struct" "          " 6
at_xfail=no
(
  $as_echo "533. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:442" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:442"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:443: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var31.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:443"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var31.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:443"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:445: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var31.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:445"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var31.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:445"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:447: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var31.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:447"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var31.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:447"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_533
#AT_START_534
at_fn_group_banner 534 'mat5_compressed_readslab_be.at:451' \
  "Read slab of int32 array from struct" "           " 6
at_xfail=no
(
  $as_echo "534. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:453" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:453"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:454: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var32.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:454"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var32.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:454"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:456: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var32.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:456"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var32.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:456"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:458: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var32.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:458"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var32.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:458"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_534
#AT_START_535
at_fn_group_banner 535 'mat5_compressed_readslab_be.at:462' \
  "Read slab of uint32 array from struct" "          " 6
at_xfail=no
(
  $as_echo "535. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:464" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:464"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:465: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var33.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:465"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var33.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:465"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:467: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var33.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:467"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var33.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:467"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:469: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var33.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:469"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var33.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:469"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_535
#AT_START_536
at_fn_group_banner 536 'mat5_compressed_readslab_be.at:473' \
  "Read slab of int16 array from struct" "           " 6
at_xfail=no
(
  $as_echo "536. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:475" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:475"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:476: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var34.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:476"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var34.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:476"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:478: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var34.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:478"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var34.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:478"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:480: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var34.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:480"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var34.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:480"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_536
#AT_START_537
at_fn_group_banner 537 'mat5_compressed_readslab_be.at:484' \
  "Read slab of uint16 array from struct" "          " 6
at_xfail=no
(
  $as_echo "537. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:486" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:486"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:487: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var35.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:487"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var35.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:487"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:489: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var35.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:489"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var35.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:489"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:491: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var35.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:491"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var35.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:491"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_537
#AT_START_538
at_fn_group_banner 538 'mat5_compressed_readslab_be.at:495' \
  "Read slab of int8 array from struct" "            " 6
at_xfail=no
(
  $as_echo "538. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:497" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:497"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:498: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var36.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:498"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var36.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:498"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:500: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var36.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:500"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var36.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:500"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:502: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var36.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:502"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var36.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:502"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_538
#AT_START_539
at_fn_group_banner 539 'mat5_compressed_readslab_be.at:506' \
  "Read slab of uint8 array from struct" "           " 6
at_xfail=no
(
  $as_echo "539. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:508" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:508"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:509: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var37.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:509"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var37.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:509"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:511: cp \$srcdir/results/dump-var2x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var37.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:511"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var37.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:511"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:513: cp \$srcdir/results/dump-var2x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var37.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:513"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var37.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:513"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_539
#AT_START_540
at_fn_group_banner 540 'mat5_compressed_readslab_be.at:517' \
  "Read slab of complex double array from struct" "  " 6
at_xfail=no
(
  $as_echo "540. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:519" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:519"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:520: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var38.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:520"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var38.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:520"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:522: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var38.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:522"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var38.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:522"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:524: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var38.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:524"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var38.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:524"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_540
#AT_START_541
at_fn_group_banner 541 'mat5_compressed_readslab_be.at:528' \
  "Read slab of complex single array from struct" "  " 6
at_xfail=no
(
  $as_echo "541. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:530" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:530"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:531: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var39.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:531"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var39.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:531"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:533: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var39.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:533"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var39.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:533"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:535: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var39.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:535"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var39.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:535"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_541
#AT_START_542
at_fn_group_banner 542 'mat5_compressed_readslab_be.at:539' \
  "Read slab of complex int64 array from struct" "   " 6
at_xfail=no
(
  $as_echo "542. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:541" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:541"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:542: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var40.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:542"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var40.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:542"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:544: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var40.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:544"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var40.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:544"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:546: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var40.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:546"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var40.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:546"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_542
#AT_START_543
at_fn_group_banner 543 'mat5_compressed_readslab_be.at:550' \
  "Read slab of complex uint64 array from struct" "  " 6
at_xfail=no
(
  $as_echo "543. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:552" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:552"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:553: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var41.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:553"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var41.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:553"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:555: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var41.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:555"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var41.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:555"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:557: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var41.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:557"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var41.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:557"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_543
#AT_START_544
at_fn_group_banner 544 'mat5_compressed_readslab_be.at:561' \
  "Read slab of complex int32 array from struct" "   " 6
at_xfail=no
(
  $as_echo "544. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:563" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:563"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:564: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var42.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:564"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var42.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:564"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:566: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var42.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:566"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var42.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:566"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:568: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var42.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:568"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var42.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:568"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_544
#AT_START_545
at_fn_group_banner 545 'mat5_compressed_readslab_be.at:572' \
  "Read slab of complex uint32 array from struct" "  " 6
at_xfail=no
(
  $as_echo "545. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:574" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:574"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:575: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var43.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:575"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var43.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:575"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:577: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var43.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:577"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var43.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:577"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:579: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var43.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:579"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var43.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:579"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_545
#AT_START_546
at_fn_group_banner 546 'mat5_compressed_readslab_be.at:583' \
  "Read slab of complex int16 array from struct" "   " 6
at_xfail=no
(
  $as_echo "546. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:585" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:585"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:586: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var44.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:586"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var44.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:586"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:588: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var44.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:588"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var44.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:588"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:590: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var44.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:590"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var44.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:590"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_546
#AT_START_547
at_fn_group_banner 547 'mat5_compressed_readslab_be.at:594' \
  "Read slab of complex uint16 array from struct" "  " 6
at_xfail=no
(
  $as_echo "547. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:596" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:596"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:597: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var45.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:597"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var45.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:597"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:599: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var45.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:599"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var45.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:599"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:601: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var45.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:601"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var45.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:601"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_547
#AT_START_548
at_fn_group_banner 548 'mat5_compressed_readslab_be.at:605' \
  "Read slab of complex int8 array from struct" "    " 6
at_xfail=no
(
  $as_echo "548. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:607" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:607"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:608: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var46.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:608"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var46.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:608"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:610: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var46.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:610"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var46.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:610"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:612: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var46.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:612"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var46.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:612"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_548
#AT_START_549
at_fn_group_banner 549 'mat5_compressed_readslab_be.at:616' \
  "Read slab of complex uint8 array from struct" "   " 6
at_xfail=no
(
  $as_echo "549. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readslab_be.at:618" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readslab_be.at:618"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:619: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var47.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:619"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var47.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:619"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:621: cp \$srcdir/results/dump-var3x-field2-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var47.field2\\(1:2:3,2:2:4\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:621"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var47.field2\(1:2:3,2:2:4\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:621"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readslab_be.at:623: cp \$srcdir/results/dump-var3x-field2-3.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_compressed_be.mat var47.field2\\(2:3:10\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readslab_be.at:623"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-3.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_compressed_be.mat var47.field2\(2:3:10\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readslab_be.at:623"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_549
#AT_START_550
at_fn_group_banner 550 'mat73_read_le.at:27' \
  "Read 2D double array" "                           " 7
at_xfail=no
(
  $as_echo "550. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:28" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:28"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:29: cp \$srcdir/results/read-var1.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var1"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:29"
( $at_check_trace; cp $srcdir/results/read-var1.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:29"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:31: cp \$srcdir/results/dump-var1.out expout
         \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var1"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:31"
( $at_check_trace; cp $srcdir/results/dump-var1.out expout
         $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:31"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_550
#AT_START_551
at_fn_group_banner 551 'mat73_read_le.at:35' \
  "Read 2D single array" "                           " 7
at_xfail=no
(
  $as_echo "551. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:36" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:36"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:37: cp \$srcdir/results/read-var2.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var2"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:37"
( $at_check_trace; cp $srcdir/results/read-var2.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:37"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_551
#AT_START_552
at_fn_group_banner 552 'mat73_read_le.at:41' \
  "Read 2D int64 array" "                            " 7
at_xfail=no
(
  $as_echo "552. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:42" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:42"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:43: cp \$srcdir/results/read-var3.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var3"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:43"
( $at_check_trace; cp $srcdir/results/read-var3.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var3
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:43"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_552
#AT_START_553
at_fn_group_banner 553 'mat73_read_le.at:47' \
  "Read 2D uint64 array" "                           " 7
at_xfail=no
(
  $as_echo "553. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:48" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:48"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:49: cp \$srcdir/results/read-var4.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var4"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:49"
( $at_check_trace; cp $srcdir/results/read-var4.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var4
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:49"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_553
#AT_START_554
at_fn_group_banner 554 'mat73_read_le.at:53' \
  "Read 2D int32 array" "                            " 7
at_xfail=no
(
  $as_echo "554. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:54" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:54"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:55: cp \$srcdir/results/read-var5.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var5"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:55"
( $at_check_trace; cp $srcdir/results/read-var5.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var5
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:55"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_554
#AT_START_555
at_fn_group_banner 555 'mat73_read_le.at:59' \
  "Read 2D uint32 array" "                           " 7
at_xfail=no
(
  $as_echo "555. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:60" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:60"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:61: cp \$srcdir/results/read-var6.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var6"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:61"
( $at_check_trace; cp $srcdir/results/read-var6.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var6
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:61"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_555
#AT_START_556
at_fn_group_banner 556 'mat73_read_le.at:65' \
  "Read 2D int16 array" "                            " 7
at_xfail=no
(
  $as_echo "556. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:66" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:66"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:67: cp \$srcdir/results/read-var7.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var7"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:67"
( $at_check_trace; cp $srcdir/results/read-var7.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var7
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:67"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_556
#AT_START_557
at_fn_group_banner 557 'mat73_read_le.at:71' \
  "Read 2D uint16 array" "                           " 7
at_xfail=no
(
  $as_echo "557. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:72" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:72"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:73: cp \$srcdir/results/read-var8.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var8"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:73"
( $at_check_trace; cp $srcdir/results/read-var8.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var8
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:73"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_557
#AT_START_558
at_fn_group_banner 558 'mat73_read_le.at:77' \
  "Read 2D int8 array" "                             " 7
at_xfail=no
(
  $as_echo "558. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:78" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:78"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:79: cp \$srcdir/results/read-var9.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var9"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:79"
( $at_check_trace; cp $srcdir/results/read-var9.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var9
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:79"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_558
#AT_START_559
at_fn_group_banner 559 'mat73_read_le.at:83' \
  "Read 2D uint8 array" "                            " 7
at_xfail=no
(
  $as_echo "559. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:84" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:84"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:85: cp \$srcdir/results/read-var10.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var10"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:85"
( $at_check_trace; cp $srcdir/results/read-var10.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var10
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:85"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_559
#AT_START_560
at_fn_group_banner 560 'mat73_read_le.at:89' \
  "Read 2D complex double array" "                   " 7
at_xfail=no
(
  $as_echo "560. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:90" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:90"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:91: cp \$srcdir/results/read-var11.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var11"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:91"
( $at_check_trace; cp $srcdir/results/read-var11.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var11
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:91"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:93: cp \$srcdir/results/dump-var11.out expout
         \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var11"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:93"
( $at_check_trace; cp $srcdir/results/dump-var11.out expout
         $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var11
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:93"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_560
#AT_START_561
at_fn_group_banner 561 'mat73_read_le.at:97' \
  "Read 2D complex single array" "                   " 7
at_xfail=no
(
  $as_echo "561. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:98" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:98"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:99: cp \$srcdir/results/read-var12.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var12"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:99"
( $at_check_trace; cp $srcdir/results/read-var12.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var12
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:99"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_561
#AT_START_562
at_fn_group_banner 562 'mat73_read_le.at:103' \
  "Read 2D complex int64 array" "                    " 7
at_xfail=no
(
  $as_echo "562. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:104" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:104"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:105: cp \$srcdir/results/read-var13.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var13"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:105"
( $at_check_trace; cp $srcdir/results/read-var13.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var13
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:105"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_562
#AT_START_563
at_fn_group_banner 563 'mat73_read_le.at:109' \
  "Read 2D complex uint64 array" "                   " 7
at_xfail=no
(
  $as_echo "563. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:110" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:110"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:111: cp \$srcdir/results/read-var14.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var14"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:111"
( $at_check_trace; cp $srcdir/results/read-var14.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var14
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:111"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_563
#AT_START_564
at_fn_group_banner 564 'mat73_read_le.at:115' \
  "Read 2D complex int32 array" "                    " 7
at_xfail=no
(
  $as_echo "564. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:116" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:116"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:117: cp \$srcdir/results/read-var15.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var15"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:117"
( $at_check_trace; cp $srcdir/results/read-var15.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var15
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:117"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_564
#AT_START_565
at_fn_group_banner 565 'mat73_read_le.at:121' \
  "Read 2D complex uint32 array" "                   " 7
at_xfail=no
(
  $as_echo "565. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:122" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:122"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:123: cp \$srcdir/results/read-var16.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var16"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:123"
( $at_check_trace; cp $srcdir/results/read-var16.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var16
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:123"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_565
#AT_START_566
at_fn_group_banner 566 'mat73_read_le.at:127' \
  "Read 2D complex int16 array" "                    " 7
at_xfail=no
(
  $as_echo "566. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:128" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:128"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:129: cp \$srcdir/results/read-var17.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var17"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:129"
( $at_check_trace; cp $srcdir/results/read-var17.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var17
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:129"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_566
#AT_START_567
at_fn_group_banner 567 'mat73_read_le.at:133' \
  "Read 2D complex uint16 array" "                   " 7
at_xfail=no
(
  $as_echo "567. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:134" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:134"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:135: cp \$srcdir/results/read-var18.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var18"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:135"
( $at_check_trace; cp $srcdir/results/read-var18.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var18
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:135"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_567
#AT_START_568
at_fn_group_banner 568 'mat73_read_le.at:139' \
  "Read 2D complex int8 array" "                     " 7
at_xfail=no
(
  $as_echo "568. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:140" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:140"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:141: cp \$srcdir/results/read-var19.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var19"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:141"
( $at_check_trace; cp $srcdir/results/read-var19.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var19
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:141"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_568
#AT_START_569
at_fn_group_banner 569 'mat73_read_le.at:145' \
  "Read 2D complex uint8 array" "                    " 7
at_xfail=no
(
  $as_echo "569. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:146" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:146"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:147: cp \$srcdir/results/read-var20.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var20"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:147"
( $at_check_trace; cp $srcdir/results/read-var20.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var20
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:147"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_569
#AT_START_570
at_fn_group_banner 570 'mat73_read_le.at:151' \
  "Read 2D logical array" "                          " 7
at_xfail=no
(
  $as_echo "570. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:152" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:152"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:153: cp \$srcdir/results/read-var90.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var90"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:153"
( $at_check_trace; cp $srcdir/results/read-var90.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var90
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:153"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_570
#AT_START_571
at_fn_group_banner 571 'mat73_read_le.at:157' \
  "Read 2D logical array" "                          " 7
at_xfail=no
(
  $as_echo "571. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:158: if test \$MAT73 -ne 1;then exit 77;fi"
at_fn_check_prepare_dynamic "if test $MAT73 -ne 1;then exit 77;fi" "mat73_read_le.at:158"
( $at_check_trace; if test $MAT73 -ne 1;then exit 77;fi
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:158"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:159: cp \$srcdir/results/read-var90.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var90"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:159"
( $at_check_trace; cp $srcdir/results/read-var90.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var90
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:159"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_571
#AT_START_572
at_fn_group_banner 572 'mat73_read_le.at:164' \
  "Read sparse double array" "                       " 7
at_xfail=no
(
  $as_echo "572. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:165" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:165"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:166: cp \$srcdir/results/read-var21.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var21"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:166"
( $at_check_trace; cp $srcdir/results/read-var21.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var21
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:166"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_572
#AT_START_573
at_fn_group_banner 573 'mat73_read_le.at:170' \
  "Read sparse complex double array" "               " 7
at_xfail=no
(
  $as_echo "573. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:171" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:171"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:172: cp \$srcdir/results/read-var22.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var22"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:172"
( $at_check_trace; cp $srcdir/results/read-var22.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var22
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:172"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_573
#AT_START_574
at_fn_group_banner 574 'mat73_read_le.at:176' \
  "Read empty array" "                               " 7
at_xfail=no
(
  $as_echo "574. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_read_le.at:178" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:178"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:179: cp \$srcdir/results/read-var23.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var23"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:179"
( $at_check_trace; cp $srcdir/results/read-var23.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var23
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:179"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_574
#AT_START_575
at_fn_group_banner 575 'mat73_read_le.at:183' \
  "Read 2D character array" "                        " 7
at_xfail=no
(
  $as_echo "575. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:184" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:184"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:185: cp \$srcdir/results/read-var24.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var24"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:185"
( $at_check_trace; cp $srcdir/results/read-var24.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var24
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:185"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_575
#AT_START_576
at_fn_group_banner 576 'mat73_read_le.at:189' \
  "Read empty struct" "                              " 7
at_xfail=no
(
  $as_echo "576. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_read_le.at:191" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:191"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:192: cp \$srcdir/results/read-var25.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var25"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:192"
( $at_check_trace; cp $srcdir/results/read-var25.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var25
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:192"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_576
#AT_START_577
at_fn_group_banner 577 'mat73_read_le.at:196' \
  "Read empty struct with fields" "                  " 7
at_xfail=no
(
  $as_echo "577. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_read_le.at:198" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:198"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:199: cp \$srcdir/results/read-var26.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var26"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:199"
( $at_check_trace; cp $srcdir/results/read-var26.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var26
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:199"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_577
#AT_START_578
at_fn_group_banner 578 'mat73_read_le.at:203' \
  "Read struct with empty fields" "                  " 7
at_xfail=no
(
  $as_echo "578. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_read_le.at:205" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:205"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:206: cp \$srcdir/results/read-var27.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var27"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:206"
( $at_check_trace; cp $srcdir/results/read-var27.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var27
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:206"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_578
#AT_START_579
at_fn_group_banner 579 'mat73_read_le.at:210' \
  "Read struct with double fields" "                 " 7
at_xfail=no
(
  $as_echo "579. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:211" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:211"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:212: cp \$srcdir/results/read-var28.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var28"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:212"
( $at_check_trace; cp $srcdir/results/read-var28.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var28
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:212"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_579
#AT_START_580
at_fn_group_banner 580 'mat73_read_le.at:216' \
  "Read struct with single fields" "                 " 7
at_xfail=no
(
  $as_echo "580. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:217" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:217"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:218: cp \$srcdir/results/read-var29.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var29"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:218"
( $at_check_trace; cp $srcdir/results/read-var29.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var29
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:218"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_580
#AT_START_581
at_fn_group_banner 581 'mat73_read_le.at:222' \
  "Read struct with int64 fields" "                  " 7
at_xfail=no
(
  $as_echo "581. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:223" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:223"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:224: cp \$srcdir/results/read-var30.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var30"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:224"
( $at_check_trace; cp $srcdir/results/read-var30.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var30
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:224"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_581
#AT_START_582
at_fn_group_banner 582 'mat73_read_le.at:228' \
  "Read struct with uint64 fields" "                 " 7
at_xfail=no
(
  $as_echo "582. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:229" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:229"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:230: cp \$srcdir/results/read-var31.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var31"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:230"
( $at_check_trace; cp $srcdir/results/read-var31.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var31
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:230"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_582
#AT_START_583
at_fn_group_banner 583 'mat73_read_le.at:234' \
  "Read struct with int32 fields" "                  " 7
at_xfail=no
(
  $as_echo "583. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:235" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:235"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:236: cp \$srcdir/results/read-var32.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var32"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:236"
( $at_check_trace; cp $srcdir/results/read-var32.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var32
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:236"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_583
#AT_START_584
at_fn_group_banner 584 'mat73_read_le.at:240' \
  "Read struct with uint32 fields" "                 " 7
at_xfail=no
(
  $as_echo "584. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:241" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:241"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:242: cp \$srcdir/results/read-var33.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var33"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:242"
( $at_check_trace; cp $srcdir/results/read-var33.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var33
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:242"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_584
#AT_START_585
at_fn_group_banner 585 'mat73_read_le.at:246' \
  "Read struct with int16 fields" "                  " 7
at_xfail=no
(
  $as_echo "585. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:247" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:247"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:248: cp \$srcdir/results/read-var34.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var34"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:248"
( $at_check_trace; cp $srcdir/results/read-var34.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var34
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:248"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_585
#AT_START_586
at_fn_group_banner 586 'mat73_read_le.at:252' \
  "Read struct with uint16 fields" "                 " 7
at_xfail=no
(
  $as_echo "586. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:253" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:253"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:254: cp \$srcdir/results/read-var35.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var35"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:254"
( $at_check_trace; cp $srcdir/results/read-var35.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var35
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:254"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_586
#AT_START_587
at_fn_group_banner 587 'mat73_read_le.at:258' \
  "Read struct with int8 fields" "                   " 7
at_xfail=no
(
  $as_echo "587. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:259" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:259"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:260: cp \$srcdir/results/read-var36.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var36"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:260"
( $at_check_trace; cp $srcdir/results/read-var36.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var36
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:260"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_587
#AT_START_588
at_fn_group_banner 588 'mat73_read_le.at:264' \
  "Read struct with uint8 fields" "                  " 7
at_xfail=no
(
  $as_echo "588. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:265" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:265"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:266: cp \$srcdir/results/read-var37.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var37"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:266"
( $at_check_trace; cp $srcdir/results/read-var37.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var37
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:266"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_588
#AT_START_589
at_fn_group_banner 589 'mat73_read_le.at:270' \
  "Read struct with complex double fields" "         " 7
at_xfail=no
(
  $as_echo "589. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:271" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:271"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:272: cp \$srcdir/results/read-var38.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var38"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:272"
( $at_check_trace; cp $srcdir/results/read-var38.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var38
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:272"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_589
#AT_START_590
at_fn_group_banner 590 'mat73_read_le.at:276' \
  "Read struct with complex single fields" "         " 7
at_xfail=no
(
  $as_echo "590. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:277" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:277"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:278: cp \$srcdir/results/read-var39.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var39"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:278"
( $at_check_trace; cp $srcdir/results/read-var39.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var39
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:278"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_590
#AT_START_591
at_fn_group_banner 591 'mat73_read_le.at:282' \
  "Read struct with complex int64 fields" "          " 7
at_xfail=no
(
  $as_echo "591. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:283" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:283"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:284: cp \$srcdir/results/read-var40.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var40"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:284"
( $at_check_trace; cp $srcdir/results/read-var40.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var40
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:284"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_591
#AT_START_592
at_fn_group_banner 592 'mat73_read_le.at:288' \
  "Read struct with complex uint64 fields" "         " 7
at_xfail=no
(
  $as_echo "592. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:289" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:289"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:290: cp \$srcdir/results/read-var41.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var41"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:290"
( $at_check_trace; cp $srcdir/results/read-var41.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var41
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:290"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_592
#AT_START_593
at_fn_group_banner 593 'mat73_read_le.at:294' \
  "Read struct with complex int32 fields" "          " 7
at_xfail=no
(
  $as_echo "593. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:295" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:295"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:296: cp \$srcdir/results/read-var42.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var42"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:296"
( $at_check_trace; cp $srcdir/results/read-var42.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var42
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:296"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_593
#AT_START_594
at_fn_group_banner 594 'mat73_read_le.at:300' \
  "Read struct with complex uint32 fields" "         " 7
at_xfail=no
(
  $as_echo "594. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:301" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:301"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:302: cp \$srcdir/results/read-var43.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var43"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:302"
( $at_check_trace; cp $srcdir/results/read-var43.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var43
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:302"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_594
#AT_START_595
at_fn_group_banner 595 'mat73_read_le.at:306' \
  "Read struct with complex int16 fields" "          " 7
at_xfail=no
(
  $as_echo "595. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:307" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:307"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:308: cp \$srcdir/results/read-var44.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var44"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:308"
( $at_check_trace; cp $srcdir/results/read-var44.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var44
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:308"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_595
#AT_START_596
at_fn_group_banner 596 'mat73_read_le.at:312' \
  "Read struct with complex uint16 fields" "         " 7
at_xfail=no
(
  $as_echo "596. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:313" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:313"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:314: cp \$srcdir/results/read-var45.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var45"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:314"
( $at_check_trace; cp $srcdir/results/read-var45.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var45
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:314"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_596
#AT_START_597
at_fn_group_banner 597 'mat73_read_le.at:318' \
  "Read struct with complex int8 fields" "           " 7
at_xfail=no
(
  $as_echo "597. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:319" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:319"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:320: cp \$srcdir/results/read-var46.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var46"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:320"
( $at_check_trace; cp $srcdir/results/read-var46.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var46
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:320"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_597
#AT_START_598
at_fn_group_banner 598 'mat73_read_le.at:324' \
  "Read struct with complex uint8 fields" "          " 7
at_xfail=no
(
  $as_echo "598. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:325" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:325"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:326: cp \$srcdir/results/read-var47.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var47"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:326"
( $at_check_trace; cp $srcdir/results/read-var47.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var47
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:326"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_598
#AT_START_599
at_fn_group_banner 599 'mat73_read_le.at:330' \
  "Read struct with logical fields" "                " 7
at_xfail=no
(
  $as_echo "599. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:331" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:331"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:332: cp \$srcdir/results/read-var91.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var91"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:332"
( $at_check_trace; cp $srcdir/results/read-var91.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var91
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:332"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_599
#AT_START_600
at_fn_group_banner 600 'mat73_read_le.at:336' \
  "Read struct with logical fields" "                " 7
at_xfail=no
(
  $as_echo "600. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:337: if test \$MAT73 -ne 1;then exit 77;fi"
at_fn_check_prepare_dynamic "if test $MAT73 -ne 1;then exit 77;fi" "mat73_read_le.at:337"
( $at_check_trace; if test $MAT73 -ne 1;then exit 77;fi
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:337"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:338: cp \$srcdir/results/read-var91.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var91"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:338"
( $at_check_trace; cp $srcdir/results/read-var91.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var91
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:338"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_600
#AT_START_601
at_fn_group_banner 601 'mat73_read_le.at:343' \
  "Read struct with sparse double fields" "          " 7
at_xfail=no
(
  $as_echo "601. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:344" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:344"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:345: cp \$srcdir/results/read-var48.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var48"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:345"
( $at_check_trace; cp $srcdir/results/read-var48.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var48
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:345"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_601
#AT_START_602
at_fn_group_banner 602 'mat73_read_le.at:349' \
  "Read struct with sparse complex double fields" "  " 7
at_xfail=no
(
  $as_echo "602. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:350" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:350"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:351: cp \$srcdir/results/read-var49.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var49"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:351"
( $at_check_trace; cp $srcdir/results/read-var49.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var49
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:351"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_602
#AT_START_603
at_fn_group_banner 603 'mat73_read_le.at:355' \
  "Read struct with character fields" "              " 7
at_xfail=no
(
  $as_echo "603. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:356" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:356"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:357: cp \$srcdir/results/read-var50.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var50"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:357"
( $at_check_trace; cp $srcdir/results/read-var50.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var50
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:357"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_603
#AT_START_604
at_fn_group_banner 604 'mat73_read_le.at:361' \
  "Read empty cell array" "                          " 7
at_xfail=no
(
  $as_echo "604. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_read_le.at:363" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:363"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:364: cp \$srcdir/results/read-var51.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var51"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:364"
( $at_check_trace; cp $srcdir/results/read-var51.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var51
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:364"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_604
#AT_START_605
at_fn_group_banner 605 'mat73_read_le.at:368' \
  "Read cell array with empty arrays" "              " 7
at_xfail=no
(
  $as_echo "605. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_read_le.at:370" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:370"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:371: cp \$srcdir/results/read-var52.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var52"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:371"
( $at_check_trace; cp $srcdir/results/read-var52.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var52
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:371"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_605
#AT_START_606
at_fn_group_banner 606 'mat73_read_le.at:375' \
  "Read cell array with double arrays" "             " 7
at_xfail=no
(
  $as_echo "606. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:376" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:376"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:377: cp \$srcdir/results/read-var53.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var53"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:377"
( $at_check_trace; cp $srcdir/results/read-var53.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var53
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:377"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_606
#AT_START_607
at_fn_group_banner 607 'mat73_read_le.at:381' \
  "Read cell array with single arrays" "             " 7
at_xfail=no
(
  $as_echo "607. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:382" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:382"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:383: cp \$srcdir/results/read-var54.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var54"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:383"
( $at_check_trace; cp $srcdir/results/read-var54.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var54
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:383"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_607
#AT_START_608
at_fn_group_banner 608 'mat73_read_le.at:387' \
  "Read cell array with int64 arrays" "              " 7
at_xfail=no
(
  $as_echo "608. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:388" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:388"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:389: cp \$srcdir/results/read-var55.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var55"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:389"
( $at_check_trace; cp $srcdir/results/read-var55.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var55
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:389"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_608
#AT_START_609
at_fn_group_banner 609 'mat73_read_le.at:393' \
  "Read cell array with uint64 arrays" "             " 7
at_xfail=no
(
  $as_echo "609. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:394" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:394"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:395: cp \$srcdir/results/read-var56.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var56"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:395"
( $at_check_trace; cp $srcdir/results/read-var56.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var56
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:395"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_609
#AT_START_610
at_fn_group_banner 610 'mat73_read_le.at:399' \
  "Read cell array with int32 arrays" "              " 7
at_xfail=no
(
  $as_echo "610. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:400" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:400"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:401: cp \$srcdir/results/read-var57.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var57"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:401"
( $at_check_trace; cp $srcdir/results/read-var57.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var57
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:401"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_610
#AT_START_611
at_fn_group_banner 611 'mat73_read_le.at:405' \
  "Read cell array with uint32 arrays" "             " 7
at_xfail=no
(
  $as_echo "611. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:406" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:406"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:407: cp \$srcdir/results/read-var58.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var58"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:407"
( $at_check_trace; cp $srcdir/results/read-var58.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var58
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:407"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_611
#AT_START_612
at_fn_group_banner 612 'mat73_read_le.at:411' \
  "Read cell array with int16 arrays" "              " 7
at_xfail=no
(
  $as_echo "612. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:412" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:412"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:413: cp \$srcdir/results/read-var59.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var59"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:413"
( $at_check_trace; cp $srcdir/results/read-var59.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var59
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:413"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_612
#AT_START_613
at_fn_group_banner 613 'mat73_read_le.at:417' \
  "Read cell array with uint16 arrays" "             " 7
at_xfail=no
(
  $as_echo "613. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:418" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:418"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:419: cp \$srcdir/results/read-var60.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var60"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:419"
( $at_check_trace; cp $srcdir/results/read-var60.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var60
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:419"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_613
#AT_START_614
at_fn_group_banner 614 'mat73_read_le.at:423' \
  "Read cell array with int8 arrays" "               " 7
at_xfail=no
(
  $as_echo "614. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:424" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:424"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:425: cp \$srcdir/results/read-var61.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var61"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:425"
( $at_check_trace; cp $srcdir/results/read-var61.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var61
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:425"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_614
#AT_START_615
at_fn_group_banner 615 'mat73_read_le.at:429' \
  "Read cell array with uint8 arrays" "              " 7
at_xfail=no
(
  $as_echo "615. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:430" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:430"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:431: cp \$srcdir/results/read-var62.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var62"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:431"
( $at_check_trace; cp $srcdir/results/read-var62.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var62
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:431"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_615
#AT_START_616
at_fn_group_banner 616 'mat73_read_le.at:435' \
  "Read cell array with logical arrays" "            " 7
at_xfail=no
(
  $as_echo "616. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:436" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:436"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:437: cp \$srcdir/results/read-var92.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var92"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:437"
( $at_check_trace; cp $srcdir/results/read-var92.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var92
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:437"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_616
#AT_START_617
at_fn_group_banner 617 'mat73_read_le.at:441' \
  "Read cell array with logical arrays" "            " 7
at_xfail=no
(
  $as_echo "617. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:442" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:442"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:443: cp \$srcdir/results/read-var92.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var92"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:443"
( $at_check_trace; cp $srcdir/results/read-var92.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var92
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:443"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_617
#AT_START_618
at_fn_group_banner 618 'mat73_read_le.at:448' \
  "Read cell array with sparse double arrays" "      " 7
at_xfail=no
(
  $as_echo "618. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:449" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:449"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:450: cp \$srcdir/results/read-var63.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var63"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:450"
( $at_check_trace; cp $srcdir/results/read-var63.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var63
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:450"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_618
#AT_START_619
at_fn_group_banner 619 'mat73_read_le.at:454' \
  "Read cell array with sparse complex double arrays" "" 7
at_xfail=no
(
  $as_echo "619. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:455" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:455"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:456: cp \$srcdir/results/read-var64.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var64"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:456"
( $at_check_trace; cp $srcdir/results/read-var64.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var64
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:456"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_619
#AT_START_620
at_fn_group_banner 620 'mat73_read_le.at:460' \
  "Read cell array with character arrays" "          " 7
at_xfail=no
(
  $as_echo "620. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:461" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:461"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:462: cp \$srcdir/results/read-var65.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var65"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:462"
( $at_check_trace; cp $srcdir/results/read-var65.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var65
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:462"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_620
#AT_START_621
at_fn_group_banner 621 'mat73_read_le.at:466' \
  "Read cell array with empty structs" "             " 7
at_xfail=no
(
  $as_echo "621. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_read_le.at:468" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:468"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:469: cp \$srcdir/results/read-var66.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var66"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:469"
( $at_check_trace; cp $srcdir/results/read-var66.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var66
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:469"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_621
#AT_START_622
at_fn_group_banner 622 'mat73_read_le.at:473' \
  "Read cell array with structs (numeric fields)" "  " 7
at_xfail=no
(
  $as_echo "622. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:474" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:474"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:475: cp \$srcdir/results/read-var67.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var67"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:475"
( $at_check_trace; cp $srcdir/results/read-var67.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var67
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:475"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_622
#AT_START_623
at_fn_group_banner 623 'mat73_read_le.at:479' \
  "Read cell array with structs (sparse fields)" "   " 7
at_xfail=no
(
  $as_echo "623. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:480" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:480"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:481: cp \$srcdir/results/read-var68.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var68"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:481"
( $at_check_trace; cp $srcdir/results/read-var68.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var68
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:481"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_623
#AT_START_624
at_fn_group_banner 624 'mat73_read_le.at:485' \
  "Read cell array with structs (character fields)" "" 7
at_xfail=no
(
  $as_echo "624. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_le.at:486" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_le.at:486"
{ set +x
$as_echo "$at_srcdir/mat73_read_le.at:487: cp \$srcdir/results/read-var69.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_le.mat var69"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_le.at:487"
( $at_check_trace; cp $srcdir/results/read-var69.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_le.mat var69
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_le.at:487"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_624
#AT_START_625
at_fn_group_banner 625 'mat73_readslab_le.at:27' \
  "Read slab of double array" "                      " 7
at_xfail=no
(
  $as_echo "625. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:29" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:29"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:30: cp \$srcdir/results/dump-var70-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var70\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:30"
( $at_check_trace; cp $srcdir/results/dump-var70-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var70\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:30"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:32: cp \$srcdir/results/dump-var70-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var70\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:32"
( $at_check_trace; cp $srcdir/results/dump-var70-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var70\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:32"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_625
#AT_START_626
at_fn_group_banner 626 'mat73_readslab_le.at:36' \
  "Read slab of single array" "                      " 7
at_xfail=no
(
  $as_echo "626. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:38" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:38"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:39: cp \$srcdir/results/dump-var71-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var71\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:39"
( $at_check_trace; cp $srcdir/results/dump-var71-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var71\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:39"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:41: cp \$srcdir/results/dump-var71-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var71\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:41"
( $at_check_trace; cp $srcdir/results/dump-var71-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var71\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:41"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_626
#AT_START_627
at_fn_group_banner 627 'mat73_readslab_le.at:45' \
  "Read slab of int64 array" "                       " 7
at_xfail=no
(
  $as_echo "627. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:47" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:47"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:48: cp \$srcdir/results/dump-var72-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var72\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:48"
( $at_check_trace; cp $srcdir/results/dump-var72-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var72\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:48"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:50: cp \$srcdir/results/dump-var72-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var72\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:50"
( $at_check_trace; cp $srcdir/results/dump-var72-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var72\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:50"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_627
#AT_START_628
at_fn_group_banner 628 'mat73_readslab_le.at:54' \
  "Read slab of uint64 array" "                      " 7
at_xfail=no
(
  $as_echo "628. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:56" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:56"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:57: cp \$srcdir/results/dump-var73-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var73\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:57"
( $at_check_trace; cp $srcdir/results/dump-var73-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var73\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:57"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:59: cp \$srcdir/results/dump-var73-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var73\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:59"
( $at_check_trace; cp $srcdir/results/dump-var73-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var73\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:59"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_628
#AT_START_629
at_fn_group_banner 629 'mat73_readslab_le.at:63' \
  "Read slab of int32 array" "                       " 7
at_xfail=no
(
  $as_echo "629. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:65" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:65"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:66: cp \$srcdir/results/dump-var74-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var74\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:66"
( $at_check_trace; cp $srcdir/results/dump-var74-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var74\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:66"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:68: cp \$srcdir/results/dump-var74-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var74\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:68"
( $at_check_trace; cp $srcdir/results/dump-var74-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var74\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:68"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_629
#AT_START_630
at_fn_group_banner 630 'mat73_readslab_le.at:72' \
  "Read slab of uint32 array" "                      " 7
at_xfail=no
(
  $as_echo "630. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:74" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:74"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:75: cp \$srcdir/results/dump-var75-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var75\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:75"
( $at_check_trace; cp $srcdir/results/dump-var75-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var75\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:75"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:77: cp \$srcdir/results/dump-var75-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var75\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:77"
( $at_check_trace; cp $srcdir/results/dump-var75-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var75\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:77"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_630
#AT_START_631
at_fn_group_banner 631 'mat73_readslab_le.at:81' \
  "Read slab of int16 array" "                       " 7
at_xfail=no
(
  $as_echo "631. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:83" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:83"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:84: cp \$srcdir/results/dump-var76-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var76\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:84"
( $at_check_trace; cp $srcdir/results/dump-var76-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var76\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:84"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:86: cp \$srcdir/results/dump-var76-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var76\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:86"
( $at_check_trace; cp $srcdir/results/dump-var76-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var76\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:86"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_631
#AT_START_632
at_fn_group_banner 632 'mat73_readslab_le.at:90' \
  "Read slab of uint16 array" "                      " 7
at_xfail=no
(
  $as_echo "632. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:92" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:92"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:93: cp \$srcdir/results/dump-var77-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var77\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:93"
( $at_check_trace; cp $srcdir/results/dump-var77-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var77\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:93"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:95: cp \$srcdir/results/dump-var77-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var77\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:95"
( $at_check_trace; cp $srcdir/results/dump-var77-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var77\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:95"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_632
#AT_START_633
at_fn_group_banner 633 'mat73_readslab_le.at:99' \
  "Read slab of int8 array" "                        " 7
at_xfail=no
(
  $as_echo "633. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:101" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:101"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:102: cp \$srcdir/results/dump-var78-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var78\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:102"
( $at_check_trace; cp $srcdir/results/dump-var78-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var78\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:102"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:104: cp \$srcdir/results/dump-var78-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var78\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:104"
( $at_check_trace; cp $srcdir/results/dump-var78-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var78\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:104"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_633
#AT_START_634
at_fn_group_banner 634 'mat73_readslab_le.at:108' \
  "Read slab of uint8 array" "                       " 7
at_xfail=no
(
  $as_echo "634. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:110" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:110"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:111: cp \$srcdir/results/dump-var79-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var79\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:111"
( $at_check_trace; cp $srcdir/results/dump-var79-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var79\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:111"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:113: cp \$srcdir/results/dump-var79-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var79\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:113"
( $at_check_trace; cp $srcdir/results/dump-var79-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var79\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:113"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_634
#AT_START_635
at_fn_group_banner 635 'mat73_readslab_le.at:117' \
  "Read slab of complex double array" "              " 7
at_xfail=no
(
  $as_echo "635. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:119" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:119"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:120: cp \$srcdir/results/dump-var80-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var80\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:120"
( $at_check_trace; cp $srcdir/results/dump-var80-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var80\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:120"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:122: cp \$srcdir/results/dump-var80-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var80\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:122"
( $at_check_trace; cp $srcdir/results/dump-var80-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var80\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:122"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_635
#AT_START_636
at_fn_group_banner 636 'mat73_readslab_le.at:126' \
  "Read slab of complex single array" "              " 7
at_xfail=no
(
  $as_echo "636. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:128" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:128"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:129: cp \$srcdir/results/dump-var81-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var81\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:129"
( $at_check_trace; cp $srcdir/results/dump-var81-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var81\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:129"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:131: cp \$srcdir/results/dump-var81-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var81\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:131"
( $at_check_trace; cp $srcdir/results/dump-var81-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var81\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:131"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_636
#AT_START_637
at_fn_group_banner 637 'mat73_readslab_le.at:135' \
  "Read slab of complex int64 array" "               " 7
at_xfail=no
(
  $as_echo "637. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:137" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:137"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:138: cp \$srcdir/results/dump-var82-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var82\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:138"
( $at_check_trace; cp $srcdir/results/dump-var82-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var82\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:138"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:140: cp \$srcdir/results/dump-var82-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var82\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:140"
( $at_check_trace; cp $srcdir/results/dump-var82-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var82\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:140"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_637
#AT_START_638
at_fn_group_banner 638 'mat73_readslab_le.at:144' \
  "Read slab of complex uint64 array" "              " 7
at_xfail=no
(
  $as_echo "638. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:146" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:146"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:147: cp \$srcdir/results/dump-var83-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var83\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:147"
( $at_check_trace; cp $srcdir/results/dump-var83-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var83\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:147"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:149: cp \$srcdir/results/dump-var83-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var83\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:149"
( $at_check_trace; cp $srcdir/results/dump-var83-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var83\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:149"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_638
#AT_START_639
at_fn_group_banner 639 'mat73_readslab_le.at:153' \
  "Read slab of complex int32 array" "               " 7
at_xfail=no
(
  $as_echo "639. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:155" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:155"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:156: cp \$srcdir/results/dump-var84-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var84\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:156"
( $at_check_trace; cp $srcdir/results/dump-var84-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var84\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:156"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:158: cp \$srcdir/results/dump-var84-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var84\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:158"
( $at_check_trace; cp $srcdir/results/dump-var84-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var84\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:158"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_639
#AT_START_640
at_fn_group_banner 640 'mat73_readslab_le.at:162' \
  "Read slab of complex uint32 array" "              " 7
at_xfail=no
(
  $as_echo "640. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:164" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:164"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:165: cp \$srcdir/results/dump-var85-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var85\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:165"
( $at_check_trace; cp $srcdir/results/dump-var85-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var85\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:165"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:167: cp \$srcdir/results/dump-var85-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var85\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:167"
( $at_check_trace; cp $srcdir/results/dump-var85-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var85\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:167"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_640
#AT_START_641
at_fn_group_banner 641 'mat73_readslab_le.at:171' \
  "Read slab of complex int16 array" "               " 7
at_xfail=no
(
  $as_echo "641. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:173" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:173"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:174: cp \$srcdir/results/dump-var86-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var86\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:174"
( $at_check_trace; cp $srcdir/results/dump-var86-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var86\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:174"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:176: cp \$srcdir/results/dump-var86-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var86\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:176"
( $at_check_trace; cp $srcdir/results/dump-var86-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var86\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:176"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_641
#AT_START_642
at_fn_group_banner 642 'mat73_readslab_le.at:180' \
  "Read slab of complex uint16 array" "              " 7
at_xfail=no
(
  $as_echo "642. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:182" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:182"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:183: cp \$srcdir/results/dump-var87-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var87\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:183"
( $at_check_trace; cp $srcdir/results/dump-var87-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var87\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:183"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:185: cp \$srcdir/results/dump-var87-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var87\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:185"
( $at_check_trace; cp $srcdir/results/dump-var87-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var87\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:185"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_642
#AT_START_643
at_fn_group_banner 643 'mat73_readslab_le.at:189' \
  "Read slab of complex int8 array" "                " 7
at_xfail=no
(
  $as_echo "643. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:191" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:191"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:192: cp \$srcdir/results/dump-var88-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var88\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:192"
( $at_check_trace; cp $srcdir/results/dump-var88-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var88\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:192"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:194: cp \$srcdir/results/dump-var88-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var88\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:194"
( $at_check_trace; cp $srcdir/results/dump-var88-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var88\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:194"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_643
#AT_START_644
at_fn_group_banner 644 'mat73_readslab_le.at:198' \
  "Read slab of complex uint8 array" "               " 7
at_xfail=no
(
  $as_echo "644. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:200" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:200"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:201: cp \$srcdir/results/dump-var89-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var89\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:201"
( $at_check_trace; cp $srcdir/results/dump-var89-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var89\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:201"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:203: cp \$srcdir/results/dump-var89-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var89\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:203"
( $at_check_trace; cp $srcdir/results/dump-var89-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var89\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:203"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_644
#AT_START_645
at_fn_group_banner 645 'mat73_readslab_le.at:207' \
  "Read linear slab of double array" "               " 7
at_xfail=no
(
  $as_echo "645. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:209" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:209"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:210: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var70\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:210"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var70\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:210"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_645
#AT_START_646
at_fn_group_banner 646 'mat73_readslab_le.at:214' \
  "Read linear slab of single array" "               " 7
at_xfail=no
(
  $as_echo "646. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:216" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:216"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:217: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var71\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:217"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var71\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:217"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_646
#AT_START_647
at_fn_group_banner 647 'mat73_readslab_le.at:221' \
  "Read linear slab of int64 array" "                " 7
at_xfail=no
(
  $as_echo "647. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:223" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:223"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:224: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var72\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:224"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var72\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:224"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_647
#AT_START_648
at_fn_group_banner 648 'mat73_readslab_le.at:228' \
  "Read linear slab of uint64 array" "               " 7
at_xfail=no
(
  $as_echo "648. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:230" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:230"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:231: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var73\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:231"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var73\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:231"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_648
#AT_START_649
at_fn_group_banner 649 'mat73_readslab_le.at:235' \
  "Read linear slab of int32 array" "                " 7
at_xfail=no
(
  $as_echo "649. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:237" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:237"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:238: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var74\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:238"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var74\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:238"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_649
#AT_START_650
at_fn_group_banner 650 'mat73_readslab_le.at:242' \
  "Read linear slab of uint32 array" "               " 7
at_xfail=no
(
  $as_echo "650. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:244" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:244"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:245: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var75\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:245"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var75\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:245"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_650
#AT_START_651
at_fn_group_banner 651 'mat73_readslab_le.at:249' \
  "Read linear slab of int16 array" "                " 7
at_xfail=no
(
  $as_echo "651. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:251" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:251"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:252: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var76\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:252"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var76\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:252"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_651
#AT_START_652
at_fn_group_banner 652 'mat73_readslab_le.at:256' \
  "Read linear slab of uint16 array" "               " 7
at_xfail=no
(
  $as_echo "652. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:258" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:258"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:259: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var77\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:259"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var77\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:259"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_652
#AT_START_653
at_fn_group_banner 653 'mat73_readslab_le.at:263' \
  "Read linear slab of int8 array" "                 " 7
at_xfail=no
(
  $as_echo "653. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:265" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:265"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:266: cp \$srcdir/results/dump-var78-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var78\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:266"
( $at_check_trace; cp $srcdir/results/dump-var78-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var78\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:266"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_653
#AT_START_654
at_fn_group_banner 654 'mat73_readslab_le.at:270' \
  "Read linear slab of uint8 array" "                " 7
at_xfail=no
(
  $as_echo "654. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:272" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:272"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:273: cp \$srcdir/results/dump-var79-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var79\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:273"
( $at_check_trace; cp $srcdir/results/dump-var79-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var79\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:273"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_654
#AT_START_655
at_fn_group_banner 655 'mat73_readslab_le.at:277' \
  "Read linear slab of complex double array" "       " 7
at_xfail=no
(
  $as_echo "655. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:279" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:279"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:280: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var80\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:280"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var80\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:280"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_655
#AT_START_656
at_fn_group_banner 656 'mat73_readslab_le.at:284' \
  "Read linear slab of complex single array" "       " 7
at_xfail=no
(
  $as_echo "656. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:286" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:286"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:287: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var81\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:287"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var81\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:287"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_656
#AT_START_657
at_fn_group_banner 657 'mat73_readslab_le.at:291' \
  "Read linear slab of complex int64 array" "        " 7
at_xfail=no
(
  $as_echo "657. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:293" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:293"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:294: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var82\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:294"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var82\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:294"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_657
#AT_START_658
at_fn_group_banner 658 'mat73_readslab_le.at:298' \
  "Read linear slab of complex uint64 array" "       " 7
at_xfail=no
(
  $as_echo "658. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:300" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:300"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:301: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var83\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:301"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var83\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:301"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_658
#AT_START_659
at_fn_group_banner 659 'mat73_readslab_le.at:305' \
  "Read linear slab of complex int32 array" "        " 7
at_xfail=no
(
  $as_echo "659. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:307" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:307"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:308: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var84\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:308"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var84\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:308"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_659
#AT_START_660
at_fn_group_banner 660 'mat73_readslab_le.at:312' \
  "Read linear slab of complex uint32 array" "       " 7
at_xfail=no
(
  $as_echo "660. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:314" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:314"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:315: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var85\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:315"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var85\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:315"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_660
#AT_START_661
at_fn_group_banner 661 'mat73_readslab_le.at:319' \
  "Read linear slab of complex int16 array" "        " 7
at_xfail=no
(
  $as_echo "661. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:321" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:321"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:322: cp \$srcdir/results/dump-var86-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var86\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:322"
( $at_check_trace; cp $srcdir/results/dump-var86-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var86\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:322"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_661
#AT_START_662
at_fn_group_banner 662 'mat73_readslab_le.at:326' \
  "Read linear slab of complex uint16 array" "       " 7
at_xfail=no
(
  $as_echo "662. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:328" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:328"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:329: cp \$srcdir/results/dump-var87-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var87\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:329"
( $at_check_trace; cp $srcdir/results/dump-var87-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var87\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:329"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_662
#AT_START_663
at_fn_group_banner 663 'mat73_readslab_le.at:333' \
  "Read linear slab of complex int8 array" "         " 7
at_xfail=no
(
  $as_echo "663. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:335" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:335"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:336: cp \$srcdir/results/dump-var88-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var88\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:336"
( $at_check_trace; cp $srcdir/results/dump-var88-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var88\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:336"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_663
#AT_START_664
at_fn_group_banner 664 'mat73_readslab_le.at:340' \
  "Read linear slab of complex uint8 array" "        " 7
at_xfail=no
(
  $as_echo "664. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:342" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:342"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:343: cp \$srcdir/results/dump-var89-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var89\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:343"
( $at_check_trace; cp $srcdir/results/dump-var89-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var89\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:343"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_664
#AT_START_665
at_fn_group_banner 665 'mat73_readslab_le.at:347' \
  "Read slab of double array from struct" "          " 7
at_xfail=no
(
  $as_echo "665. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:349" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:349"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:350: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var28.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:350"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var28.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:350"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_665
#AT_START_666
at_fn_group_banner 666 'mat73_readslab_le.at:354' \
  "Read slab of single array from struct" "          " 7
at_xfail=no
(
  $as_echo "666. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:356" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:356"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:357: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var29.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:357"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var29.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:357"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_666
#AT_START_667
at_fn_group_banner 667 'mat73_readslab_le.at:361' \
  "Read slab of int64 array from struct" "           " 7
at_xfail=no
(
  $as_echo "667. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:363" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:363"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:364: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var30.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:364"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var30.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:364"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_667
#AT_START_668
at_fn_group_banner 668 'mat73_readslab_le.at:368' \
  "Read slab of uint64 array from struct" "          " 7
at_xfail=no
(
  $as_echo "668. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:370" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:370"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:371: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var31.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:371"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var31.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:371"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_668
#AT_START_669
at_fn_group_banner 669 'mat73_readslab_le.at:375' \
  "Read slab of int32 array from struct" "           " 7
at_xfail=no
(
  $as_echo "669. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:377" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:377"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:378: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var32.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:378"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var32.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:378"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_669
#AT_START_670
at_fn_group_banner 670 'mat73_readslab_le.at:382' \
  "Read slab of uint32 array from struct" "          " 7
at_xfail=no
(
  $as_echo "670. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:384" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:384"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:385: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var33.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:385"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var33.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:385"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_670
#AT_START_671
at_fn_group_banner 671 'mat73_readslab_le.at:389' \
  "Read slab of int16 array from struct" "           " 7
at_xfail=no
(
  $as_echo "671. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:391" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:391"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:392: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var34.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:392"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var34.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:392"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_671
#AT_START_672
at_fn_group_banner 672 'mat73_readslab_le.at:396' \
  "Read slab of uint16 array from struct" "          " 7
at_xfail=no
(
  $as_echo "672. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:398" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:398"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:399: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var35.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:399"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var35.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:399"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_672
#AT_START_673
at_fn_group_banner 673 'mat73_readslab_le.at:403' \
  "Read slab of int8 array from struct" "            " 7
at_xfail=no
(
  $as_echo "673. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:405" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:405"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:406: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var36.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:406"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var36.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:406"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_673
#AT_START_674
at_fn_group_banner 674 'mat73_readslab_le.at:410' \
  "Read slab of uint8 array from struct" "           " 7
at_xfail=no
(
  $as_echo "674. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:412" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:412"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:413: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var37.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:413"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var37.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:413"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_674
#AT_START_675
at_fn_group_banner 675 'mat73_readslab_le.at:417' \
  "Read slab of complex double array from struct" "  " 7
at_xfail=no
(
  $as_echo "675. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:419" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:419"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:420: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var38.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:420"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var38.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:420"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_675
#AT_START_676
at_fn_group_banner 676 'mat73_readslab_le.at:424' \
  "Read slab of complex single array from struct" "  " 7
at_xfail=no
(
  $as_echo "676. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:426" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:426"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:427: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var39.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:427"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var39.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:427"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_676
#AT_START_677
at_fn_group_banner 677 'mat73_readslab_le.at:431' \
  "Read slab of complex int64 array from struct" "   " 7
at_xfail=no
(
  $as_echo "677. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:433" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:433"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:434: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var40.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:434"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var40.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:434"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_677
#AT_START_678
at_fn_group_banner 678 'mat73_readslab_le.at:438' \
  "Read slab of complex uint64 array from struct" "  " 7
at_xfail=no
(
  $as_echo "678. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:440" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:440"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:441: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var41.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:441"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var41.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:441"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_678
#AT_START_679
at_fn_group_banner 679 'mat73_readslab_le.at:445' \
  "Read slab of complex int32 array from struct" "   " 7
at_xfail=no
(
  $as_echo "679. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:447" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:447"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:448: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var42.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:448"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var42.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:448"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_679
#AT_START_680
at_fn_group_banner 680 'mat73_readslab_le.at:452' \
  "Read slab of complex uint32 array from struct" "  " 7
at_xfail=no
(
  $as_echo "680. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:454" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:454"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:455: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var43.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:455"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var43.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:455"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_680
#AT_START_681
at_fn_group_banner 681 'mat73_readslab_le.at:459' \
  "Read slab of complex int16 array from struct" "   " 7
at_xfail=no
(
  $as_echo "681. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:461" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:461"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:462: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var44.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:462"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var44.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:462"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_681
#AT_START_682
at_fn_group_banner 682 'mat73_readslab_le.at:466' \
  "Read slab of complex uint16 array from struct" "  " 7
at_xfail=no
(
  $as_echo "682. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:468" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:468"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:469: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var45.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:469"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var45.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:469"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_682
#AT_START_683
at_fn_group_banner 683 'mat73_readslab_le.at:473' \
  "Read slab of complex int8 array from struct" "    " 7
at_xfail=no
(
  $as_echo "683. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:475" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:475"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:476: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var46.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:476"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var46.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:476"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_683
#AT_START_684
at_fn_group_banner 684 'mat73_readslab_le.at:480' \
  "Read slab of complex uint8 array from struct" "   " 7
at_xfail=no
(
  $as_echo "684. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_le.at:482" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_le.at:482"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_le.at:483: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_le.mat var47.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_le.at:483"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_le.mat var47.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_le.at:483"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_684
#AT_START_685
at_fn_group_banner 685 'mat73_read_be.at:27' \
  "Read 2D double array" "                           " 8
at_xfail=no
(
  $as_echo "685. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:28" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:28"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:29: cp \$srcdir/results/read-var1.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var1"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:29"
( $at_check_trace; cp $srcdir/results/read-var1.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:29"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:31: cp \$srcdir/results/dump-var1.out expout
         \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var1"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:31"
( $at_check_trace; cp $srcdir/results/dump-var1.out expout
         $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:31"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_685
#AT_START_686
at_fn_group_banner 686 'mat73_read_be.at:35' \
  "Read 2D single array" "                           " 8
at_xfail=no
(
  $as_echo "686. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:36" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:36"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:37: cp \$srcdir/results/read-var2.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var2"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:37"
( $at_check_trace; cp $srcdir/results/read-var2.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:37"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_686
#AT_START_687
at_fn_group_banner 687 'mat73_read_be.at:41' \
  "Read 2D int64 array" "                            " 8
at_xfail=no
(
  $as_echo "687. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:42" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:42"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:43: cp \$srcdir/results/read-var3.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var3"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:43"
( $at_check_trace; cp $srcdir/results/read-var3.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var3
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:43"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_687
#AT_START_688
at_fn_group_banner 688 'mat73_read_be.at:47' \
  "Read 2D uint64 array" "                           " 8
at_xfail=no
(
  $as_echo "688. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:48" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:48"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:49: cp \$srcdir/results/read-var4.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var4"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:49"
( $at_check_trace; cp $srcdir/results/read-var4.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var4
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:49"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_688
#AT_START_689
at_fn_group_banner 689 'mat73_read_be.at:53' \
  "Read 2D int32 array" "                            " 8
at_xfail=no
(
  $as_echo "689. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:54" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:54"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:55: cp \$srcdir/results/read-var5.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var5"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:55"
( $at_check_trace; cp $srcdir/results/read-var5.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var5
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:55"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_689
#AT_START_690
at_fn_group_banner 690 'mat73_read_be.at:59' \
  "Read 2D uint32 array" "                           " 8
at_xfail=no
(
  $as_echo "690. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:60" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:60"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:61: cp \$srcdir/results/read-var6.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var6"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:61"
( $at_check_trace; cp $srcdir/results/read-var6.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var6
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:61"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_690
#AT_START_691
at_fn_group_banner 691 'mat73_read_be.at:65' \
  "Read 2D int16 array" "                            " 8
at_xfail=no
(
  $as_echo "691. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:66" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:66"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:67: cp \$srcdir/results/read-var7.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var7"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:67"
( $at_check_trace; cp $srcdir/results/read-var7.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var7
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:67"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_691
#AT_START_692
at_fn_group_banner 692 'mat73_read_be.at:71' \
  "Read 2D uint16 array" "                           " 8
at_xfail=no
(
  $as_echo "692. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:72" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:72"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:73: cp \$srcdir/results/read-var8.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var8"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:73"
( $at_check_trace; cp $srcdir/results/read-var8.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var8
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:73"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_692
#AT_START_693
at_fn_group_banner 693 'mat73_read_be.at:77' \
  "Read 2D int8 array" "                             " 8
at_xfail=no
(
  $as_echo "693. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:78" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:78"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:79: cp \$srcdir/results/read-var9.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var9"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:79"
( $at_check_trace; cp $srcdir/results/read-var9.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var9
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:79"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_693
#AT_START_694
at_fn_group_banner 694 'mat73_read_be.at:83' \
  "Read 2D uint8 array" "                            " 8
at_xfail=no
(
  $as_echo "694. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:84" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:84"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:85: cp \$srcdir/results/read-var10.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var10"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:85"
( $at_check_trace; cp $srcdir/results/read-var10.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var10
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:85"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_694
#AT_START_695
at_fn_group_banner 695 'mat73_read_be.at:89' \
  "Read 2D complex double array" "                   " 8
at_xfail=no
(
  $as_echo "695. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:90" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:90"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:91: cp \$srcdir/results/read-var11.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var11"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:91"
( $at_check_trace; cp $srcdir/results/read-var11.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var11
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:91"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:93: cp \$srcdir/results/dump-var11.out expout
         \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var11"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:93"
( $at_check_trace; cp $srcdir/results/dump-var11.out expout
         $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var11
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:93"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_695
#AT_START_696
at_fn_group_banner 696 'mat73_read_be.at:97' \
  "Read 2D complex single array" "                   " 8
at_xfail=no
(
  $as_echo "696. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:98" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:98"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:99: cp \$srcdir/results/read-var12.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var12"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:99"
( $at_check_trace; cp $srcdir/results/read-var12.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var12
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:99"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_696
#AT_START_697
at_fn_group_banner 697 'mat73_read_be.at:103' \
  "Read 2D complex int64 array" "                    " 8
at_xfail=no
(
  $as_echo "697. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:104" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:104"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:105: cp \$srcdir/results/read-var13.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var13"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:105"
( $at_check_trace; cp $srcdir/results/read-var13.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var13
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:105"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_697
#AT_START_698
at_fn_group_banner 698 'mat73_read_be.at:109' \
  "Read 2D complex uint64 array" "                   " 8
at_xfail=no
(
  $as_echo "698. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:110" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:110"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:111: cp \$srcdir/results/read-var14.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var14"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:111"
( $at_check_trace; cp $srcdir/results/read-var14.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var14
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:111"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_698
#AT_START_699
at_fn_group_banner 699 'mat73_read_be.at:115' \
  "Read 2D complex int32 array" "                    " 8
at_xfail=no
(
  $as_echo "699. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:116" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:116"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:117: cp \$srcdir/results/read-var15.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var15"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:117"
( $at_check_trace; cp $srcdir/results/read-var15.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var15
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:117"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_699
#AT_START_700
at_fn_group_banner 700 'mat73_read_be.at:121' \
  "Read 2D complex uint32 array" "                   " 8
at_xfail=no
(
  $as_echo "700. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:122" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:122"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:123: cp \$srcdir/results/read-var16.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var16"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:123"
( $at_check_trace; cp $srcdir/results/read-var16.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var16
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:123"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_700
#AT_START_701
at_fn_group_banner 701 'mat73_read_be.at:127' \
  "Read 2D complex int16 array" "                    " 8
at_xfail=no
(
  $as_echo "701. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:128" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:128"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:129: cp \$srcdir/results/read-var17.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var17"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:129"
( $at_check_trace; cp $srcdir/results/read-var17.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var17
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:129"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_701
#AT_START_702
at_fn_group_banner 702 'mat73_read_be.at:133' \
  "Read 2D complex uint16 array" "                   " 8
at_xfail=no
(
  $as_echo "702. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:134" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:134"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:135: cp \$srcdir/results/read-var18.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var18"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:135"
( $at_check_trace; cp $srcdir/results/read-var18.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var18
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:135"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_702
#AT_START_703
at_fn_group_banner 703 'mat73_read_be.at:139' \
  "Read 2D complex int8 array" "                     " 8
at_xfail=no
(
  $as_echo "703. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:140" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:140"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:141: cp \$srcdir/results/read-var19.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var19"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:141"
( $at_check_trace; cp $srcdir/results/read-var19.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var19
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:141"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_703
#AT_START_704
at_fn_group_banner 704 'mat73_read_be.at:145' \
  "Read 2D complex uint8 array" "                    " 8
at_xfail=no
(
  $as_echo "704. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:146" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:146"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:147: cp \$srcdir/results/read-var20.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var20"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:147"
( $at_check_trace; cp $srcdir/results/read-var20.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var20
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:147"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_704
#AT_START_705
at_fn_group_banner 705 'mat73_read_be.at:151' \
  "Read 2D logical array" "                          " 8
at_xfail=no
(
  $as_echo "705. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:152" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:152"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:153: cp \$srcdir/results/read-var90.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var90"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:153"
( $at_check_trace; cp $srcdir/results/read-var90.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var90
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:153"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_705
#AT_START_706
at_fn_group_banner 706 'mat73_read_be.at:157' \
  "Read 2D logical array" "                          " 8
at_xfail=no
(
  $as_echo "706. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:158: if test \$MAT73 -ne 1;then exit 77;fi"
at_fn_check_prepare_dynamic "if test $MAT73 -ne 1;then exit 77;fi" "mat73_read_be.at:158"
( $at_check_trace; if test $MAT73 -ne 1;then exit 77;fi
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:158"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:159: cp \$srcdir/results/read-var90.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var90"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:159"
( $at_check_trace; cp $srcdir/results/read-var90.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var90
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:159"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_706
#AT_START_707
at_fn_group_banner 707 'mat73_read_be.at:164' \
  "Read sparse double array" "                       " 8
at_xfail=no
(
  $as_echo "707. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:165" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:165"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:166: cp \$srcdir/results/read-var21.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var21"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:166"
( $at_check_trace; cp $srcdir/results/read-var21.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var21
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:166"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_707
#AT_START_708
at_fn_group_banner 708 'mat73_read_be.at:170' \
  "Read sparse complex double array" "               " 8
at_xfail=no
(
  $as_echo "708. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:171" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:171"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:172: cp \$srcdir/results/read-var22.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var22"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:172"
( $at_check_trace; cp $srcdir/results/read-var22.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var22
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:172"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_708
#AT_START_709
at_fn_group_banner 709 'mat73_read_be.at:176' \
  "Read empty array" "                               " 8
at_xfail=no
(
  $as_echo "709. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_read_be.at:178" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:178"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:179: cp \$srcdir/results/read-var23.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var23"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:179"
( $at_check_trace; cp $srcdir/results/read-var23.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var23
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:179"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_709
#AT_START_710
at_fn_group_banner 710 'mat73_read_be.at:183' \
  "Read 2D character array" "                        " 8
at_xfail=no
(
  $as_echo "710. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:184" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:184"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:185: cp \$srcdir/results/read-var24.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var24"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:185"
( $at_check_trace; cp $srcdir/results/read-var24.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var24
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:185"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_710
#AT_START_711
at_fn_group_banner 711 'mat73_read_be.at:189' \
  "Read empty struct" "                              " 8
at_xfail=no
(
  $as_echo "711. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_read_be.at:191" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:191"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:192: cp \$srcdir/results/read-var25.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var25"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:192"
( $at_check_trace; cp $srcdir/results/read-var25.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var25
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:192"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_711
#AT_START_712
at_fn_group_banner 712 'mat73_read_be.at:196' \
  "Read empty struct with fields" "                  " 8
at_xfail=no
(
  $as_echo "712. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_read_be.at:198" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:198"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:199: cp \$srcdir/results/read-var26.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var26"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:199"
( $at_check_trace; cp $srcdir/results/read-var26.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var26
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:199"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_712
#AT_START_713
at_fn_group_banner 713 'mat73_read_be.at:203' \
  "Read struct with empty fields" "                  " 8
at_xfail=no
(
  $as_echo "713. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_read_be.at:205" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:205"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:206: cp \$srcdir/results/read-var27.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var27"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:206"
( $at_check_trace; cp $srcdir/results/read-var27.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var27
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:206"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_713
#AT_START_714
at_fn_group_banner 714 'mat73_read_be.at:210' \
  "Read struct with double fields" "                 " 8
at_xfail=no
(
  $as_echo "714. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:211" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:211"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:212: cp \$srcdir/results/read-var28.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var28"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:212"
( $at_check_trace; cp $srcdir/results/read-var28.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var28
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:212"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_714
#AT_START_715
at_fn_group_banner 715 'mat73_read_be.at:216' \
  "Read struct with single fields" "                 " 8
at_xfail=no
(
  $as_echo "715. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:217" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:217"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:218: cp \$srcdir/results/read-var29.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var29"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:218"
( $at_check_trace; cp $srcdir/results/read-var29.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var29
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:218"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_715
#AT_START_716
at_fn_group_banner 716 'mat73_read_be.at:222' \
  "Read struct with int64 fields" "                  " 8
at_xfail=no
(
  $as_echo "716. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:223" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:223"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:224: cp \$srcdir/results/read-var30.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var30"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:224"
( $at_check_trace; cp $srcdir/results/read-var30.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var30
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:224"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_716
#AT_START_717
at_fn_group_banner 717 'mat73_read_be.at:228' \
  "Read struct with uint64 fields" "                 " 8
at_xfail=no
(
  $as_echo "717. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:229" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:229"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:230: cp \$srcdir/results/read-var31.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var31"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:230"
( $at_check_trace; cp $srcdir/results/read-var31.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var31
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:230"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_717
#AT_START_718
at_fn_group_banner 718 'mat73_read_be.at:234' \
  "Read struct with int32 fields" "                  " 8
at_xfail=no
(
  $as_echo "718. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:235" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:235"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:236: cp \$srcdir/results/read-var32.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var32"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:236"
( $at_check_trace; cp $srcdir/results/read-var32.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var32
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:236"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_718
#AT_START_719
at_fn_group_banner 719 'mat73_read_be.at:240' \
  "Read struct with uint32 fields" "                 " 8
at_xfail=no
(
  $as_echo "719. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:241" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:241"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:242: cp \$srcdir/results/read-var33.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var33"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:242"
( $at_check_trace; cp $srcdir/results/read-var33.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var33
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:242"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_719
#AT_START_720
at_fn_group_banner 720 'mat73_read_be.at:246' \
  "Read struct with int16 fields" "                  " 8
at_xfail=no
(
  $as_echo "720. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:247" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:247"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:248: cp \$srcdir/results/read-var34.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var34"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:248"
( $at_check_trace; cp $srcdir/results/read-var34.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var34
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:248"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_720
#AT_START_721
at_fn_group_banner 721 'mat73_read_be.at:252' \
  "Read struct with uint16 fields" "                 " 8
at_xfail=no
(
  $as_echo "721. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:253" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:253"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:254: cp \$srcdir/results/read-var35.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var35"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:254"
( $at_check_trace; cp $srcdir/results/read-var35.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var35
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:254"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_721
#AT_START_722
at_fn_group_banner 722 'mat73_read_be.at:258' \
  "Read struct with int8 fields" "                   " 8
at_xfail=no
(
  $as_echo "722. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:259" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:259"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:260: cp \$srcdir/results/read-var36.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var36"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:260"
( $at_check_trace; cp $srcdir/results/read-var36.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var36
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:260"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_722
#AT_START_723
at_fn_group_banner 723 'mat73_read_be.at:264' \
  "Read struct with uint8 fields" "                  " 8
at_xfail=no
(
  $as_echo "723. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:265" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:265"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:266: cp \$srcdir/results/read-var37.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var37"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:266"
( $at_check_trace; cp $srcdir/results/read-var37.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var37
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:266"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_723
#AT_START_724
at_fn_group_banner 724 'mat73_read_be.at:270' \
  "Read struct with complex double fields" "         " 8
at_xfail=no
(
  $as_echo "724. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:271" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:271"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:272: cp \$srcdir/results/read-var38.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var38"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:272"
( $at_check_trace; cp $srcdir/results/read-var38.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var38
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:272"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_724
#AT_START_725
at_fn_group_banner 725 'mat73_read_be.at:276' \
  "Read struct with complex single fields" "         " 8
at_xfail=no
(
  $as_echo "725. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:277" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:277"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:278: cp \$srcdir/results/read-var39.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var39"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:278"
( $at_check_trace; cp $srcdir/results/read-var39.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var39
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:278"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_725
#AT_START_726
at_fn_group_banner 726 'mat73_read_be.at:282' \
  "Read struct with complex int64 fields" "          " 8
at_xfail=no
(
  $as_echo "726. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:283" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:283"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:284: cp \$srcdir/results/read-var40.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var40"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:284"
( $at_check_trace; cp $srcdir/results/read-var40.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var40
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:284"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_726
#AT_START_727
at_fn_group_banner 727 'mat73_read_be.at:288' \
  "Read struct with complex uint64 fields" "         " 8
at_xfail=no
(
  $as_echo "727. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:289" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:289"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:290: cp \$srcdir/results/read-var41.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var41"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:290"
( $at_check_trace; cp $srcdir/results/read-var41.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var41
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:290"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_727
#AT_START_728
at_fn_group_banner 728 'mat73_read_be.at:294' \
  "Read struct with complex int32 fields" "          " 8
at_xfail=no
(
  $as_echo "728. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:295" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:295"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:296: cp \$srcdir/results/read-var42.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var42"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:296"
( $at_check_trace; cp $srcdir/results/read-var42.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var42
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:296"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_728
#AT_START_729
at_fn_group_banner 729 'mat73_read_be.at:300' \
  "Read struct with complex uint32 fields" "         " 8
at_xfail=no
(
  $as_echo "729. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:301" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:301"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:302: cp \$srcdir/results/read-var43.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var43"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:302"
( $at_check_trace; cp $srcdir/results/read-var43.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var43
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:302"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_729
#AT_START_730
at_fn_group_banner 730 'mat73_read_be.at:306' \
  "Read struct with complex int16 fields" "          " 8
at_xfail=no
(
  $as_echo "730. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:307" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:307"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:308: cp \$srcdir/results/read-var44.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var44"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:308"
( $at_check_trace; cp $srcdir/results/read-var44.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var44
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:308"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_730
#AT_START_731
at_fn_group_banner 731 'mat73_read_be.at:312' \
  "Read struct with complex uint16 fields" "         " 8
at_xfail=no
(
  $as_echo "731. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:313" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:313"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:314: cp \$srcdir/results/read-var45.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var45"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:314"
( $at_check_trace; cp $srcdir/results/read-var45.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var45
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:314"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_731
#AT_START_732
at_fn_group_banner 732 'mat73_read_be.at:318' \
  "Read struct with complex int8 fields" "           " 8
at_xfail=no
(
  $as_echo "732. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:319" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:319"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:320: cp \$srcdir/results/read-var46.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var46"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:320"
( $at_check_trace; cp $srcdir/results/read-var46.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var46
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:320"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_732
#AT_START_733
at_fn_group_banner 733 'mat73_read_be.at:324' \
  "Read struct with complex uint8 fields" "          " 8
at_xfail=no
(
  $as_echo "733. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:325" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:325"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:326: cp \$srcdir/results/read-var47.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var47"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:326"
( $at_check_trace; cp $srcdir/results/read-var47.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var47
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:326"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_733
#AT_START_734
at_fn_group_banner 734 'mat73_read_be.at:330' \
  "Read struct with logical fields" "                " 8
at_xfail=no
(
  $as_echo "734. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:331" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:331"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:332: cp \$srcdir/results/read-var91.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var91"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:332"
( $at_check_trace; cp $srcdir/results/read-var91.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var91
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:332"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_734
#AT_START_735
at_fn_group_banner 735 'mat73_read_be.at:336' \
  "Read struct with logical fields" "                " 8
at_xfail=no
(
  $as_echo "735. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:337: if test \$MAT73 -ne 1;then exit 77;fi"
at_fn_check_prepare_dynamic "if test $MAT73 -ne 1;then exit 77;fi" "mat73_read_be.at:337"
( $at_check_trace; if test $MAT73 -ne 1;then exit 77;fi
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:337"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:338: cp \$srcdir/results/read-var91.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var91"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:338"
( $at_check_trace; cp $srcdir/results/read-var91.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var91
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:338"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_735
#AT_START_736
at_fn_group_banner 736 'mat73_read_be.at:343' \
  "Read struct with sparse double fields" "          " 8
at_xfail=no
(
  $as_echo "736. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:344" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:344"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:345: cp \$srcdir/results/read-var48.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var48"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:345"
( $at_check_trace; cp $srcdir/results/read-var48.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var48
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:345"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_736
#AT_START_737
at_fn_group_banner 737 'mat73_read_be.at:349' \
  "Read struct with sparse complex double fields" "  " 8
at_xfail=no
(
  $as_echo "737. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:350" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:350"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:351: cp \$srcdir/results/read-var49.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var49"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:351"
( $at_check_trace; cp $srcdir/results/read-var49.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var49
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:351"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_737
#AT_START_738
at_fn_group_banner 738 'mat73_read_be.at:355' \
  "Read struct with character fields" "              " 8
at_xfail=no
(
  $as_echo "738. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:356" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:356"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:357: cp \$srcdir/results/read-var50.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var50"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:357"
( $at_check_trace; cp $srcdir/results/read-var50.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var50
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:357"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_738
#AT_START_739
at_fn_group_banner 739 'mat73_read_be.at:361' \
  "Read empty cell array" "                          " 8
at_xfail=no
(
  $as_echo "739. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_read_be.at:363" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:363"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:364: cp \$srcdir/results/read-var51.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var51"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:364"
( $at_check_trace; cp $srcdir/results/read-var51.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var51
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:364"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_739
#AT_START_740
at_fn_group_banner 740 'mat73_read_be.at:368' \
  "Read cell array with empty arrays" "              " 8
at_xfail=no
(
  $as_echo "740. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_read_be.at:370" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:370"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:371: cp \$srcdir/results/read-var52.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var52"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:371"
( $at_check_trace; cp $srcdir/results/read-var52.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var52
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:371"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_740
#AT_START_741
at_fn_group_banner 741 'mat73_read_be.at:375' \
  "Read cell array with double arrays" "             " 8
at_xfail=no
(
  $as_echo "741. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:376" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:376"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:377: cp \$srcdir/results/read-var53.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var53"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:377"
( $at_check_trace; cp $srcdir/results/read-var53.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var53
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:377"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_741
#AT_START_742
at_fn_group_banner 742 'mat73_read_be.at:381' \
  "Read cell array with single arrays" "             " 8
at_xfail=no
(
  $as_echo "742. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:382" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:382"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:383: cp \$srcdir/results/read-var54.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var54"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:383"
( $at_check_trace; cp $srcdir/results/read-var54.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var54
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:383"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_742
#AT_START_743
at_fn_group_banner 743 'mat73_read_be.at:387' \
  "Read cell array with int64 arrays" "              " 8
at_xfail=no
(
  $as_echo "743. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:388" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:388"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:389: cp \$srcdir/results/read-var55.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var55"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:389"
( $at_check_trace; cp $srcdir/results/read-var55.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var55
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:389"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_743
#AT_START_744
at_fn_group_banner 744 'mat73_read_be.at:393' \
  "Read cell array with uint64 arrays" "             " 8
at_xfail=no
(
  $as_echo "744. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:394" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:394"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:395: cp \$srcdir/results/read-var56.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var56"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:395"
( $at_check_trace; cp $srcdir/results/read-var56.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var56
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:395"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_744
#AT_START_745
at_fn_group_banner 745 'mat73_read_be.at:399' \
  "Read cell array with int32 arrays" "              " 8
at_xfail=no
(
  $as_echo "745. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:400" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:400"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:401: cp \$srcdir/results/read-var57.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var57"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:401"
( $at_check_trace; cp $srcdir/results/read-var57.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var57
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:401"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_745
#AT_START_746
at_fn_group_banner 746 'mat73_read_be.at:405' \
  "Read cell array with uint32 arrays" "             " 8
at_xfail=no
(
  $as_echo "746. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:406" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:406"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:407: cp \$srcdir/results/read-var58.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var58"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:407"
( $at_check_trace; cp $srcdir/results/read-var58.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var58
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:407"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_746
#AT_START_747
at_fn_group_banner 747 'mat73_read_be.at:411' \
  "Read cell array with int16 arrays" "              " 8
at_xfail=no
(
  $as_echo "747. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:412" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:412"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:413: cp \$srcdir/results/read-var59.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var59"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:413"
( $at_check_trace; cp $srcdir/results/read-var59.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var59
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:413"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_747
#AT_START_748
at_fn_group_banner 748 'mat73_read_be.at:417' \
  "Read cell array with uint16 arrays" "             " 8
at_xfail=no
(
  $as_echo "748. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:418" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:418"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:419: cp \$srcdir/results/read-var60.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var60"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:419"
( $at_check_trace; cp $srcdir/results/read-var60.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var60
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:419"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_748
#AT_START_749
at_fn_group_banner 749 'mat73_read_be.at:423' \
  "Read cell array with int8 arrays" "               " 8
at_xfail=no
(
  $as_echo "749. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:424" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:424"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:425: cp \$srcdir/results/read-var61.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var61"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:425"
( $at_check_trace; cp $srcdir/results/read-var61.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var61
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:425"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_749
#AT_START_750
at_fn_group_banner 750 'mat73_read_be.at:429' \
  "Read cell array with uint8 arrays" "              " 8
at_xfail=no
(
  $as_echo "750. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:430" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:430"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:431: cp \$srcdir/results/read-var62.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var62"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:431"
( $at_check_trace; cp $srcdir/results/read-var62.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var62
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:431"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_750
#AT_START_751
at_fn_group_banner 751 'mat73_read_be.at:435' \
  "Read cell array with logical arrays" "            " 8
at_xfail=no
(
  $as_echo "751. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:436" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:436"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:437: cp \$srcdir/results/read-var92.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var92"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:437"
( $at_check_trace; cp $srcdir/results/read-var92.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var92
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:437"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_751
#AT_START_752
at_fn_group_banner 752 'mat73_read_be.at:441' \
  "Read cell array with logical arrays" "            " 8
at_xfail=no
(
  $as_echo "752. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:442" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:442"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:443: cp \$srcdir/results/read-var92.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var92"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:443"
( $at_check_trace; cp $srcdir/results/read-var92.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var92
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:443"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_752
#AT_START_753
at_fn_group_banner 753 'mat73_read_be.at:448' \
  "Read cell array with sparse double arrays" "      " 8
at_xfail=no
(
  $as_echo "753. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:449" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:449"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:450: cp \$srcdir/results/read-var63.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var63"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:450"
( $at_check_trace; cp $srcdir/results/read-var63.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var63
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:450"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_753
#AT_START_754
at_fn_group_banner 754 'mat73_read_be.at:454' \
  "Read cell array with sparse complex double arrays" "" 8
at_xfail=no
(
  $as_echo "754. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:455" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:455"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:456: cp \$srcdir/results/read-var64.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var64"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:456"
( $at_check_trace; cp $srcdir/results/read-var64.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var64
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:456"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_754
#AT_START_755
at_fn_group_banner 755 'mat73_read_be.at:460' \
  "Read cell array with character arrays" "          " 8
at_xfail=no
(
  $as_echo "755. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:461" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:461"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:462: cp \$srcdir/results/read-var65.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var65"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:462"
( $at_check_trace; cp $srcdir/results/read-var65.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var65
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:462"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_755
#AT_START_756
at_fn_group_banner 756 'mat73_read_be.at:466' \
  "Read cell array with empty structs" "             " 8
at_xfail=no
(
  $as_echo "756. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_read_be.at:468" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:468"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:469: cp \$srcdir/results/read-var66.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var66"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:469"
( $at_check_trace; cp $srcdir/results/read-var66.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var66
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:469"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_756
#AT_START_757
at_fn_group_banner 757 'mat73_read_be.at:473' \
  "Read cell array with structs (numeric fields)" "  " 8
at_xfail=no
(
  $as_echo "757. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:474" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:474"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:475: cp \$srcdir/results/read-var67.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var67"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:475"
( $at_check_trace; cp $srcdir/results/read-var67.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var67
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:475"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_757
#AT_START_758
at_fn_group_banner 758 'mat73_read_be.at:479' \
  "Read cell array with structs (sparse fields)" "   " 8
at_xfail=no
(
  $as_echo "758. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:480" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:480"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:481: cp \$srcdir/results/read-var68.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var68"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:481"
( $at_check_trace; cp $srcdir/results/read-var68.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var68
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:481"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_758
#AT_START_759
at_fn_group_banner 759 'mat73_read_be.at:485' \
  "Read cell array with structs (character fields)" "" 8
at_xfail=no
(
  $as_echo "759. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_read_be.at:486" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_read_be.at:486"
{ set +x
$as_echo "$at_srcdir/mat73_read_be.at:487: cp \$srcdir/results/read-var69.out expout
         \$builddir/test_mat readvar \$srcdir/datasets/matio_test_cases_hdf_be.mat var69"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_read_be.at:487"
( $at_check_trace; cp $srcdir/results/read-var69.out expout
         $builddir/test_mat readvar $srcdir/datasets/matio_test_cases_hdf_be.mat var69
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_read_be.at:487"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_759
#AT_START_760
at_fn_group_banner 760 'mat73_readslab_be.at:27' \
  "Read slab of double array" "                      " 8
at_xfail=no
(
  $as_echo "760. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:29" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:29"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:30: cp \$srcdir/results/dump-var70-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var70\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:30"
( $at_check_trace; cp $srcdir/results/dump-var70-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var70\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:30"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:32: cp \$srcdir/results/dump-var70-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var70\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:32"
( $at_check_trace; cp $srcdir/results/dump-var70-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var70\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:32"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_760
#AT_START_761
at_fn_group_banner 761 'mat73_readslab_be.at:36' \
  "Read slab of single array" "                      " 8
at_xfail=no
(
  $as_echo "761. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:38" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:38"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:39: cp \$srcdir/results/dump-var71-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var71\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:39"
( $at_check_trace; cp $srcdir/results/dump-var71-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var71\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:39"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:41: cp \$srcdir/results/dump-var71-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var71\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:41"
( $at_check_trace; cp $srcdir/results/dump-var71-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var71\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:41"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_761
#AT_START_762
at_fn_group_banner 762 'mat73_readslab_be.at:45' \
  "Read slab of int64 array" "                       " 8
at_xfail=no
(
  $as_echo "762. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:47" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:47"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:48: cp \$srcdir/results/dump-var72-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var72\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:48"
( $at_check_trace; cp $srcdir/results/dump-var72-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var72\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:48"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:50: cp \$srcdir/results/dump-var72-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var72\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:50"
( $at_check_trace; cp $srcdir/results/dump-var72-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var72\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:50"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_762
#AT_START_763
at_fn_group_banner 763 'mat73_readslab_be.at:54' \
  "Read slab of uint64 array" "                      " 8
at_xfail=no
(
  $as_echo "763. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:56" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:56"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:57: cp \$srcdir/results/dump-var73-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var73\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:57"
( $at_check_trace; cp $srcdir/results/dump-var73-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var73\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:57"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:59: cp \$srcdir/results/dump-var73-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var73\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:59"
( $at_check_trace; cp $srcdir/results/dump-var73-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var73\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:59"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_763
#AT_START_764
at_fn_group_banner 764 'mat73_readslab_be.at:63' \
  "Read slab of int32 array" "                       " 8
at_xfail=no
(
  $as_echo "764. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:65" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:65"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:66: cp \$srcdir/results/dump-var74-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var74\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:66"
( $at_check_trace; cp $srcdir/results/dump-var74-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var74\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:66"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:68: cp \$srcdir/results/dump-var74-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var74\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:68"
( $at_check_trace; cp $srcdir/results/dump-var74-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var74\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:68"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_764
#AT_START_765
at_fn_group_banner 765 'mat73_readslab_be.at:72' \
  "Read slab of uint32 array" "                      " 8
at_xfail=no
(
  $as_echo "765. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:74" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:74"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:75: cp \$srcdir/results/dump-var75-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var75\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:75"
( $at_check_trace; cp $srcdir/results/dump-var75-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var75\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:75"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:77: cp \$srcdir/results/dump-var75-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var75\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:77"
( $at_check_trace; cp $srcdir/results/dump-var75-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var75\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:77"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_765
#AT_START_766
at_fn_group_banner 766 'mat73_readslab_be.at:81' \
  "Read slab of int16 array" "                       " 8
at_xfail=no
(
  $as_echo "766. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:83" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:83"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:84: cp \$srcdir/results/dump-var76-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var76\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:84"
( $at_check_trace; cp $srcdir/results/dump-var76-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var76\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:84"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:86: cp \$srcdir/results/dump-var76-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var76\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:86"
( $at_check_trace; cp $srcdir/results/dump-var76-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var76\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:86"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_766
#AT_START_767
at_fn_group_banner 767 'mat73_readslab_be.at:90' \
  "Read slab of uint16 array" "                      " 8
at_xfail=no
(
  $as_echo "767. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:92" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:92"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:93: cp \$srcdir/results/dump-var77-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var77\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:93"
( $at_check_trace; cp $srcdir/results/dump-var77-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var77\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:93"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:95: cp \$srcdir/results/dump-var77-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var77\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:95"
( $at_check_trace; cp $srcdir/results/dump-var77-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var77\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:95"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_767
#AT_START_768
at_fn_group_banner 768 'mat73_readslab_be.at:99' \
  "Read slab of int8 array" "                        " 8
at_xfail=no
(
  $as_echo "768. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:101" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:101"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:102: cp \$srcdir/results/dump-var78-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var78\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:102"
( $at_check_trace; cp $srcdir/results/dump-var78-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var78\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:102"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:104: cp \$srcdir/results/dump-var78-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var78\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:104"
( $at_check_trace; cp $srcdir/results/dump-var78-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var78\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:104"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_768
#AT_START_769
at_fn_group_banner 769 'mat73_readslab_be.at:108' \
  "Read slab of uint8 array" "                       " 8
at_xfail=no
(
  $as_echo "769. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:110" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:110"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:111: cp \$srcdir/results/dump-var79-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var79\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:111"
( $at_check_trace; cp $srcdir/results/dump-var79-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var79\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:111"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:113: cp \$srcdir/results/dump-var79-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var79\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:113"
( $at_check_trace; cp $srcdir/results/dump-var79-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var79\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:113"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_769
#AT_START_770
at_fn_group_banner 770 'mat73_readslab_be.at:117' \
  "Read slab of complex double array" "              " 8
at_xfail=no
(
  $as_echo "770. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:119" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:119"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:120: cp \$srcdir/results/dump-var80-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var80\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:120"
( $at_check_trace; cp $srcdir/results/dump-var80-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var80\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:120"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:122: cp \$srcdir/results/dump-var80-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var80\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:122"
( $at_check_trace; cp $srcdir/results/dump-var80-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var80\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:122"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_770
#AT_START_771
at_fn_group_banner 771 'mat73_readslab_be.at:126' \
  "Read slab of complex single array" "              " 8
at_xfail=no
(
  $as_echo "771. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:128" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:128"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:129: cp \$srcdir/results/dump-var81-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var81\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:129"
( $at_check_trace; cp $srcdir/results/dump-var81-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var81\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:129"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:131: cp \$srcdir/results/dump-var81-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var81\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:131"
( $at_check_trace; cp $srcdir/results/dump-var81-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var81\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:131"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_771
#AT_START_772
at_fn_group_banner 772 'mat73_readslab_be.at:135' \
  "Read slab of complex int64 array" "               " 8
at_xfail=no
(
  $as_echo "772. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:137" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:137"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:138: cp \$srcdir/results/dump-var82-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var82\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:138"
( $at_check_trace; cp $srcdir/results/dump-var82-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var82\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:138"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:140: cp \$srcdir/results/dump-var82-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var82\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:140"
( $at_check_trace; cp $srcdir/results/dump-var82-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var82\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:140"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_772
#AT_START_773
at_fn_group_banner 773 'mat73_readslab_be.at:144' \
  "Read slab of complex uint64 array" "              " 8
at_xfail=no
(
  $as_echo "773. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:146" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:146"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:147: cp \$srcdir/results/dump-var83-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var83\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:147"
( $at_check_trace; cp $srcdir/results/dump-var83-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var83\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:147"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:149: cp \$srcdir/results/dump-var83-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var83\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:149"
( $at_check_trace; cp $srcdir/results/dump-var83-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var83\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:149"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_773
#AT_START_774
at_fn_group_banner 774 'mat73_readslab_be.at:153' \
  "Read slab of complex int32 array" "               " 8
at_xfail=no
(
  $as_echo "774. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:155" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:155"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:156: cp \$srcdir/results/dump-var84-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var84\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:156"
( $at_check_trace; cp $srcdir/results/dump-var84-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var84\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:156"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:158: cp \$srcdir/results/dump-var84-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var84\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:158"
( $at_check_trace; cp $srcdir/results/dump-var84-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var84\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:158"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_774
#AT_START_775
at_fn_group_banner 775 'mat73_readslab_be.at:162' \
  "Read slab of complex uint32 array" "              " 8
at_xfail=no
(
  $as_echo "775. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:164" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:164"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:165: cp \$srcdir/results/dump-var85-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var85\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:165"
( $at_check_trace; cp $srcdir/results/dump-var85-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var85\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:165"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:167: cp \$srcdir/results/dump-var85-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var85\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:167"
( $at_check_trace; cp $srcdir/results/dump-var85-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var85\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:167"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_775
#AT_START_776
at_fn_group_banner 776 'mat73_readslab_be.at:171' \
  "Read slab of complex int16 array" "               " 8
at_xfail=no
(
  $as_echo "776. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:173" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:173"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:174: cp \$srcdir/results/dump-var86-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var86\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:174"
( $at_check_trace; cp $srcdir/results/dump-var86-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var86\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:174"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:176: cp \$srcdir/results/dump-var86-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var86\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:176"
( $at_check_trace; cp $srcdir/results/dump-var86-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var86\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:176"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_776
#AT_START_777
at_fn_group_banner 777 'mat73_readslab_be.at:180' \
  "Read slab of complex uint16 array" "              " 8
at_xfail=no
(
  $as_echo "777. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:182" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:182"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:183: cp \$srcdir/results/dump-var87-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var87\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:183"
( $at_check_trace; cp $srcdir/results/dump-var87-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var87\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:183"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:185: cp \$srcdir/results/dump-var87-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var87\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:185"
( $at_check_trace; cp $srcdir/results/dump-var87-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var87\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:185"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_777
#AT_START_778
at_fn_group_banner 778 'mat73_readslab_be.at:189' \
  "Read slab of complex int8 array" "                " 8
at_xfail=no
(
  $as_echo "778. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:191" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:191"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:192: cp \$srcdir/results/dump-var88-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var88\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:192"
( $at_check_trace; cp $srcdir/results/dump-var88-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var88\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:192"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:194: cp \$srcdir/results/dump-var88-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var88\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:194"
( $at_check_trace; cp $srcdir/results/dump-var88-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var88\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:194"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_778
#AT_START_779
at_fn_group_banner 779 'mat73_readslab_be.at:198' \
  "Read slab of complex uint8 array" "               " 8
at_xfail=no
(
  $as_echo "779. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:200" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:200"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:201: cp \$srcdir/results/dump-var89-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var89\\(2:3:end,4:5:end,8:16:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:201"
( $at_check_trace; cp $srcdir/results/dump-var89-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var89\(2:3:end,4:5:end,8:16:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:201"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:203: cp \$srcdir/results/dump-var89-2.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var89\\(30:1:32,27:1:29,25:1:26\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:203"
( $at_check_trace; cp $srcdir/results/dump-var89-2.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var89\(30:1:32,27:1:29,25:1:26\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:203"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_779
#AT_START_780
at_fn_group_banner 780 'mat73_readslab_be.at:207' \
  "Read linear slab of double array" "               " 8
at_xfail=no
(
  $as_echo "780. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:209" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:209"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:210: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var70\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:210"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var70\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:210"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_780
#AT_START_781
at_fn_group_banner 781 'mat73_readslab_be.at:214' \
  "Read linear slab of single array" "               " 8
at_xfail=no
(
  $as_echo "781. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:216" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:216"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:217: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var71\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:217"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var71\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:217"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_781
#AT_START_782
at_fn_group_banner 782 'mat73_readslab_be.at:221' \
  "Read linear slab of int64 array" "                " 8
at_xfail=no
(
  $as_echo "782. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:223" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:223"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:224: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var72\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:224"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var72\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:224"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_782
#AT_START_783
at_fn_group_banner 783 'mat73_readslab_be.at:228' \
  "Read linear slab of uint64 array" "               " 8
at_xfail=no
(
  $as_echo "783. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:230" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:230"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:231: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var73\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:231"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var73\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:231"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_783
#AT_START_784
at_fn_group_banner 784 'mat73_readslab_be.at:235' \
  "Read linear slab of int32 array" "                " 8
at_xfail=no
(
  $as_echo "784. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:237" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:237"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:238: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var74\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:238"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var74\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:238"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_784
#AT_START_785
at_fn_group_banner 785 'mat73_readslab_be.at:242' \
  "Read linear slab of uint32 array" "               " 8
at_xfail=no
(
  $as_echo "785. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:244" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:244"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:245: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var75\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:245"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var75\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:245"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_785
#AT_START_786
at_fn_group_banner 786 'mat73_readslab_be.at:249' \
  "Read linear slab of int16 array" "                " 8
at_xfail=no
(
  $as_echo "786. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:251" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:251"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:252: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var76\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:252"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var76\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:252"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_786
#AT_START_787
at_fn_group_banner 787 'mat73_readslab_be.at:256' \
  "Read linear slab of uint16 array" "               " 8
at_xfail=no
(
  $as_echo "787. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:258" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:258"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:259: cp \$srcdir/results/dump-var7x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var77\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:259"
( $at_check_trace; cp $srcdir/results/dump-var7x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var77\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:259"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_787
#AT_START_788
at_fn_group_banner 788 'mat73_readslab_be.at:263' \
  "Read linear slab of int8 array" "                 " 8
at_xfail=no
(
  $as_echo "788. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:265" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:265"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:266: cp \$srcdir/results/dump-var78-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var78\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:266"
( $at_check_trace; cp $srcdir/results/dump-var78-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var78\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:266"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_788
#AT_START_789
at_fn_group_banner 789 'mat73_readslab_be.at:270' \
  "Read linear slab of uint8 array" "                " 8
at_xfail=no
(
  $as_echo "789. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:272" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:272"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:273: cp \$srcdir/results/dump-var79-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var79\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:273"
( $at_check_trace; cp $srcdir/results/dump-var79-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var79\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:273"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_789
#AT_START_790
at_fn_group_banner 790 'mat73_readslab_be.at:277' \
  "Read linear slab of complex double array" "       " 8
at_xfail=no
(
  $as_echo "790. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:279" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:279"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:280: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var80\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:280"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var80\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:280"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_790
#AT_START_791
at_fn_group_banner 791 'mat73_readslab_be.at:284' \
  "Read linear slab of complex single array" "       " 8
at_xfail=no
(
  $as_echo "791. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:286" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:286"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:287: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var81\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:287"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var81\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:287"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_791
#AT_START_792
at_fn_group_banner 792 'mat73_readslab_be.at:291' \
  "Read linear slab of complex int64 array" "        " 8
at_xfail=no
(
  $as_echo "792. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:293" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:293"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:294: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var82\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:294"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var82\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:294"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_792
#AT_START_793
at_fn_group_banner 793 'mat73_readslab_be.at:298' \
  "Read linear slab of complex uint64 array" "       " 8
at_xfail=no
(
  $as_echo "793. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:300" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:300"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:301: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var83\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:301"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var83\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:301"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_793
#AT_START_794
at_fn_group_banner 794 'mat73_readslab_be.at:305' \
  "Read linear slab of complex int32 array" "        " 8
at_xfail=no
(
  $as_echo "794. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:307" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:307"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:308: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var84\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:308"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var84\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:308"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_794
#AT_START_795
at_fn_group_banner 795 'mat73_readslab_be.at:312' \
  "Read linear slab of complex uint32 array" "       " 8
at_xfail=no
(
  $as_echo "795. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:314" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:314"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:315: cp \$srcdir/results/dump-var8x-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var85\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:315"
( $at_check_trace; cp $srcdir/results/dump-var8x-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var85\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:315"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_795
#AT_START_796
at_fn_group_banner 796 'mat73_readslab_be.at:319' \
  "Read linear slab of complex int16 array" "        " 8
at_xfail=no
(
  $as_echo "796. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:321" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:321"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:322: cp \$srcdir/results/dump-var86-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var86\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:322"
( $at_check_trace; cp $srcdir/results/dump-var86-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var86\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:322"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_796
#AT_START_797
at_fn_group_banner 797 'mat73_readslab_be.at:326' \
  "Read linear slab of complex uint16 array" "       " 8
at_xfail=no
(
  $as_echo "797. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:328" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:328"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:329: cp \$srcdir/results/dump-var87-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var87\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:329"
( $at_check_trace; cp $srcdir/results/dump-var87-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var87\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:329"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_797
#AT_START_798
at_fn_group_banner 798 'mat73_readslab_be.at:333' \
  "Read linear slab of complex int8 array" "         " 8
at_xfail=no
(
  $as_echo "798. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:335" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:335"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:336: cp \$srcdir/results/dump-var88-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var88\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:336"
( $at_check_trace; cp $srcdir/results/dump-var88-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var88\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:336"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_798
#AT_START_799
at_fn_group_banner 799 'mat73_readslab_be.at:340' \
  "Read linear slab of complex uint8 array" "        " 8
at_xfail=no
(
  $as_echo "799. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:342" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:342"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:343: cp \$srcdir/results/dump-var89-4.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var89\\(3257:1111:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:343"
( $at_check_trace; cp $srcdir/results/dump-var89-4.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var89\(3257:1111:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:343"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_799
#AT_START_800
at_fn_group_banner 800 'mat73_readslab_be.at:347' \
  "Read slab of double array from struct" "          " 8
at_xfail=no
(
  $as_echo "800. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:349" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:349"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:350: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var28.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:350"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var28.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:350"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_800
#AT_START_801
at_fn_group_banner 801 'mat73_readslab_be.at:354' \
  "Read slab of single array from struct" "          " 8
at_xfail=no
(
  $as_echo "801. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:356" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:356"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:357: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var29.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:357"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var29.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:357"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_801
#AT_START_802
at_fn_group_banner 802 'mat73_readslab_be.at:361' \
  "Read slab of int64 array from struct" "           " 8
at_xfail=no
(
  $as_echo "802. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:363" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:363"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:364: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var30.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:364"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var30.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:364"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_802
#AT_START_803
at_fn_group_banner 803 'mat73_readslab_be.at:368' \
  "Read slab of uint64 array from struct" "          " 8
at_xfail=no
(
  $as_echo "803. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:370" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:370"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:371: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var31.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:371"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var31.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:371"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_803
#AT_START_804
at_fn_group_banner 804 'mat73_readslab_be.at:375' \
  "Read slab of int32 array from struct" "           " 8
at_xfail=no
(
  $as_echo "804. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:377" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:377"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:378: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var32.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:378"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var32.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:378"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_804
#AT_START_805
at_fn_group_banner 805 'mat73_readslab_be.at:382' \
  "Read slab of uint32 array from struct" "          " 8
at_xfail=no
(
  $as_echo "805. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:384" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:384"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:385: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var33.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:385"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var33.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:385"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_805
#AT_START_806
at_fn_group_banner 806 'mat73_readslab_be.at:389' \
  "Read slab of int16 array from struct" "           " 8
at_xfail=no
(
  $as_echo "806. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:391" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:391"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:392: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var34.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:392"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var34.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:392"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_806
#AT_START_807
at_fn_group_banner 807 'mat73_readslab_be.at:396' \
  "Read slab of uint16 array from struct" "          " 8
at_xfail=no
(
  $as_echo "807. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:398" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:398"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:399: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var35.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:399"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var35.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:399"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_807
#AT_START_808
at_fn_group_banner 808 'mat73_readslab_be.at:403' \
  "Read slab of int8 array from struct" "            " 8
at_xfail=no
(
  $as_echo "808. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:405" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:405"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:406: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var36.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:406"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var36.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:406"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_808
#AT_START_809
at_fn_group_banner 809 'mat73_readslab_be.at:410' \
  "Read slab of uint8 array from struct" "           " 8
at_xfail=no
(
  $as_echo "809. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:412" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:412"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:413: cp \$srcdir/results/dump-var2x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var37.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:413"
( $at_check_trace; cp $srcdir/results/dump-var2x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var37.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:413"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_809
#AT_START_810
at_fn_group_banner 810 'mat73_readslab_be.at:417' \
  "Read slab of complex double array from struct" "  " 8
at_xfail=no
(
  $as_echo "810. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:419" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:419"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:420: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var38.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:420"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var38.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:420"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_810
#AT_START_811
at_fn_group_banner 811 'mat73_readslab_be.at:424' \
  "Read slab of complex single array from struct" "  " 8
at_xfail=no
(
  $as_echo "811. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:426" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:426"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:427: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var39.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:427"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var39.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:427"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_811
#AT_START_812
at_fn_group_banner 812 'mat73_readslab_be.at:431' \
  "Read slab of complex int64 array from struct" "   " 8
at_xfail=no
(
  $as_echo "812. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:433" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:433"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:434: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var40.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:434"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var40.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:434"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_812
#AT_START_813
at_fn_group_banner 813 'mat73_readslab_be.at:438' \
  "Read slab of complex uint64 array from struct" "  " 8
at_xfail=no
(
  $as_echo "813. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:440" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:440"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:441: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var41.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:441"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var41.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:441"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_813
#AT_START_814
at_fn_group_banner 814 'mat73_readslab_be.at:445' \
  "Read slab of complex int32 array from struct" "   " 8
at_xfail=no
(
  $as_echo "814. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:447" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:447"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:448: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var42.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:448"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var42.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:448"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_814
#AT_START_815
at_fn_group_banner 815 'mat73_readslab_be.at:452' \
  "Read slab of complex uint32 array from struct" "  " 8
at_xfail=no
(
  $as_echo "815. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:454" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:454"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:455: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var43.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:455"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var43.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:455"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_815
#AT_START_816
at_fn_group_banner 816 'mat73_readslab_be.at:459' \
  "Read slab of complex int16 array from struct" "   " 8
at_xfail=no
(
  $as_echo "816. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:461" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:461"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:462: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var44.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:462"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var44.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:462"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_816
#AT_START_817
at_fn_group_banner 817 'mat73_readslab_be.at:466' \
  "Read slab of complex uint16 array from struct" "  " 8
at_xfail=no
(
  $as_echo "817. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:468" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:468"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:469: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var45.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:469"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var45.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:469"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_817
#AT_START_818
at_fn_group_banner 818 'mat73_readslab_be.at:473' \
  "Read slab of complex int8 array from struct" "    " 8
at_xfail=no
(
  $as_echo "818. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:475" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:475"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:476: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var46.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:476"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var46.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:476"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_818
#AT_START_819
at_fn_group_banner 819 'mat73_readslab_be.at:480' \
  "Read slab of complex uint8 array from struct" "   " 8
at_xfail=no
(
  $as_echo "819. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readslab_be.at:482" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readslab_be.at:482"
{ set +x
$as_echo "$at_srcdir/mat73_readslab_be.at:483: cp \$srcdir/results/dump-var3x-field2-1.out expout
          \$builddir/../tools/matdump -d \$srcdir/datasets/matio_test_cases_hdf_be.mat var47.field2\\(1:1:end,1:1:end\\)"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readslab_be.at:483"
( $at_check_trace; cp $srcdir/results/dump-var3x-field2-1.out expout
          $builddir/../tools/matdump -d $srcdir/datasets/matio_test_cases_hdf_be.mat var47.field2\(1:1:end,1:1:end\)
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readslab_be.at:483"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_819
#AT_START_820
at_fn_group_banner 820 'mat4_write.at:27' \
  "Write 2D double array" "                          " 9
at_xfail=no
(
  $as_echo "820. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat4_write.at:28: \$builddir/test_mat -v 4 -c double write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 4 -c double write_2d_numeric" "mat4_write.at:28"
( $at_check_trace; $builddir/test_mat -v 4 -c double write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:28"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_write.at:29: cp \$srcdir/results/write_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_write.at:29"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:29"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat4_write.at:31" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat4_write.at:31"
{ set +x
$as_echo "$at_srcdir/mat4_write.at:32: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_write.at:32"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:32"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_820
#AT_START_821
at_fn_group_banner 821 'mat4_write.at:36' \
  "Write 2D single array" "                          " 9
at_xfail=no
(
  $as_echo "821. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat4_write.at:37: \$builddir/test_mat -v 4 -c single write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 4 -c single write_2d_numeric" "mat4_write.at:37"
( $at_check_trace; $builddir/test_mat -v 4 -c single write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:37"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_write.at:38: cp \$srcdir/results/write_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_write.at:38"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:38"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat4_write.at:40" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat4_write.at:40"
{ set +x
$as_echo "$at_srcdir/mat4_write.at:41: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_write.at:41"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:41"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_821
#AT_START_822
at_fn_group_banner 822 'mat4_write.at:45' \
  "Write 2D int32 array" "                           " 9
at_xfail=no
(
  $as_echo "822. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat4_write.at:46: \$builddir/test_mat -v 4 -c int32 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 4 -c int32 write_2d_numeric" "mat4_write.at:46"
( $at_check_trace; $builddir/test_mat -v 4 -c int32 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:46"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_write.at:47: cp \$srcdir/results/write_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_write.at:47"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:47"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat4_write.at:49" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat4_write.at:49"
{ set +x
$as_echo "$at_srcdir/mat4_write.at:50: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_write.at:50"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:50"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_822
#AT_START_823
at_fn_group_banner 823 'mat4_write.at:54' \
  "Write 2D int16 array" "                           " 9
at_xfail=no
(
  $as_echo "823. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat4_write.at:55: \$builddir/test_mat -v 4 -c int16 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 4 -c int16 write_2d_numeric" "mat4_write.at:55"
( $at_check_trace; $builddir/test_mat -v 4 -c int16 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:55"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_write.at:56: cp \$srcdir/results/write_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_write.at:56"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:56"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat4_write.at:58" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat4_write.at:58"
{ set +x
$as_echo "$at_srcdir/mat4_write.at:59: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_write.at:59"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:59"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_823
#AT_START_824
at_fn_group_banner 824 'mat4_write.at:63' \
  "Write 2D uint16 array" "                          " 9
at_xfail=no
(
  $as_echo "824. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat4_write.at:64: \$builddir/test_mat -v 4 -c uint16 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 4 -c uint16 write_2d_numeric" "mat4_write.at:64"
( $at_check_trace; $builddir/test_mat -v 4 -c uint16 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:64"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_write.at:65: cp \$srcdir/results/write_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_write.at:65"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:65"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat4_write.at:67" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat4_write.at:67"
{ set +x
$as_echo "$at_srcdir/mat4_write.at:68: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_write.at:68"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:68"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_824
#AT_START_825
at_fn_group_banner 825 'mat4_write.at:72' \
  "Write 2D uint8 array" "                           " 9
at_xfail=no
(
  $as_echo "825. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat4_write.at:73: \$builddir/test_mat -v 4 -c uint8 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 4 -c uint8 write_2d_numeric" "mat4_write.at:73"
( $at_check_trace; $builddir/test_mat -v 4 -c uint8 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:73"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_write.at:74: cp \$srcdir/results/write_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_write.at:74"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:74"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat4_write.at:76" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat4_write.at:76"
{ set +x
$as_echo "$at_srcdir/mat4_write.at:77: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_write.at:77"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:77"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_825
#AT_START_826
at_fn_group_banner 826 'mat4_write.at:81' \
  "Write 2D complex double array" "                  " 9
at_xfail=no
(
  $as_echo "826. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat4_write.at:82: \$builddir/test_mat -v 4 -c double write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 4 -c double write_complex_2d_numeric" "mat4_write.at:82"
( $at_check_trace; $builddir/test_mat -v 4 -c double write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:82"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_write.at:83: cp \$srcdir/results/write_complex_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_write.at:83"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:83"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat4_write.at:85" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat4_write.at:85"
{ set +x
$as_echo "$at_srcdir/mat4_write.at:86: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_write.at:86"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:86"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_826
#AT_START_827
at_fn_group_banner 827 'mat4_write.at:90' \
  "Write 2D complex single array" "                  " 9
at_xfail=no
(
  $as_echo "827. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat4_write.at:91: \$builddir/test_mat -v 4 -c single write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 4 -c single write_complex_2d_numeric" "mat4_write.at:91"
( $at_check_trace; $builddir/test_mat -v 4 -c single write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:91"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_write.at:92: cp \$srcdir/results/write_complex_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_write.at:92"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:92"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat4_write.at:94" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat4_write.at:94"
{ set +x
$as_echo "$at_srcdir/mat4_write.at:95: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_write.at:95"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:95"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_827
#AT_START_828
at_fn_group_banner 828 'mat4_write.at:99' \
  "Write 2D complex int32 array" "                   " 9
at_xfail=no
(
  $as_echo "828. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat4_write.at:100: \$builddir/test_mat -v 4 -c int32 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 4 -c int32 write_complex_2d_numeric" "mat4_write.at:100"
( $at_check_trace; $builddir/test_mat -v 4 -c int32 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:100"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_write.at:101: cp \$srcdir/results/write_complex_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_write.at:101"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:101"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat4_write.at:103" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat4_write.at:103"
{ set +x
$as_echo "$at_srcdir/mat4_write.at:104: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_write.at:104"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:104"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_828
#AT_START_829
at_fn_group_banner 829 'mat4_write.at:108' \
  "Write 2D complex int16 array" "                   " 9
at_xfail=no
(
  $as_echo "829. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat4_write.at:109: \$builddir/test_mat -v 4 -c int16 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 4 -c int16 write_complex_2d_numeric" "mat4_write.at:109"
( $at_check_trace; $builddir/test_mat -v 4 -c int16 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:109"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_write.at:110: cp \$srcdir/results/write_complex_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_write.at:110"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:110"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat4_write.at:112" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat4_write.at:112"
{ set +x
$as_echo "$at_srcdir/mat4_write.at:113: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_write.at:113"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:113"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_829
#AT_START_830
at_fn_group_banner 830 'mat4_write.at:117' \
  "Write 2D complex uint16 array" "                  " 9
at_xfail=no
(
  $as_echo "830. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat4_write.at:118: \$builddir/test_mat -v 4 -c uint16 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 4 -c uint16 write_complex_2d_numeric" "mat4_write.at:118"
( $at_check_trace; $builddir/test_mat -v 4 -c uint16 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:118"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_write.at:119: cp \$srcdir/results/write_complex_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_write.at:119"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:119"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat4_write.at:121" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat4_write.at:121"
{ set +x
$as_echo "$at_srcdir/mat4_write.at:122: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_write.at:122"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:122"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_830
#AT_START_831
at_fn_group_banner 831 'mat4_write.at:126' \
  "Write 2D complex uint8 array" "                   " 9
at_xfail=no
(
  $as_echo "831. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat4_write.at:127: \$builddir/test_mat -v 4 -c uint8 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 4 -c uint8 write_complex_2d_numeric" "mat4_write.at:127"
( $at_check_trace; $builddir/test_mat -v 4 -c uint8 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:127"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_write.at:128: cp \$srcdir/results/write_complex_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_write.at:128"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:128"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat4_write.at:130" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat4_write.at:130"
{ set +x
$as_echo "$at_srcdir/mat4_write.at:131: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_write.at:131"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:131"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_831
#AT_START_832
at_fn_group_banner 832 'mat4_write.at:135' \
  "Write 2D sparse double array" "                   " 9
at_xfail=no
(
  $as_echo "832. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat4_write.at:136: \$builddir/test_mat -v 4 -c double write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 4 -c double write_sparse" "mat4_write.at:136"
( $at_check_trace; $builddir/test_mat -v 4 -c double write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:136"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_write.at:137: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-double.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_write.at:137"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-double.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:137"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat4_write.at:139" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat4_write.at:139"
{ set +x
$as_echo "$at_srcdir/mat4_write.at:140: cp \$srcdir/matlab/test_write_sparse.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_sparse\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_write.at:140"
( $at_check_trace; cp $srcdir/matlab/test_write_sparse.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_sparse" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:140"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_832
#AT_START_833
at_fn_group_banner 833 'mat4_write.at:144' \
  "Write 2D sparse complex double array" "           " 9
at_xfail=no
(
  $as_echo "833. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat4_write.at:145: \$builddir/test_mat -v 4 -c double write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 4 -c double write_complex_sparse" "mat4_write.at:145"
( $at_check_trace; $builddir/test_mat -v 4 -c double write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:145"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_write.at:146: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-double.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_write.at:146"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-double.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:146"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat4_write.at:148" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat4_write.at:148"
{ set +x
$as_echo "$at_srcdir/mat4_write.at:149: cp \$srcdir/matlab/test_write_sparse_complex.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_sparse_complex\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_write.at:149"
( $at_check_trace; cp $srcdir/matlab/test_write_sparse_complex.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_sparse_complex" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:149"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_833
#AT_START_834
at_fn_group_banner 834 'mat4_write.at:153' \
  "Write 2D empty array" "                           " 9
at_xfail=no
(
  $as_echo "834. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat4_write.at:155: \$builddir/test_mat -v 4 -c double write_empty_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 4 -c double write_empty_2d_numeric" "mat4_write.at:155"
( $at_check_trace; $builddir/test_mat -v 4 -c double write_empty_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:155"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_write.at:156: cp \$srcdir/results/readvar-write_empty_2d_numeric-empty.out expout
          \$builddir/test_mat readvar test_write_empty_2d_numeric.mat empty"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_write.at:156"
( $at_check_trace; cp $srcdir/results/readvar-write_empty_2d_numeric-empty.out expout
          $builddir/test_mat readvar test_write_empty_2d_numeric.mat empty
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:156"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat4_write.at:158" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat4_write.at:158"
{ set +x
$as_echo "$at_srcdir/mat4_write.at:159: cp \$srcdir/matlab/test_write_empty.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_empty\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_write.at:159"
( $at_check_trace; cp $srcdir/matlab/test_write_empty.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_empty" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:159"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_834
#AT_START_835
at_fn_group_banner 835 'mat4_write.at:163' \
  "Write character array" "                          " 9
at_xfail=no
(
  $as_echo "835. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat4_write.at:164: \$builddir/test_mat -v 4 write_char"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 4 write_char" "mat4_write.at:164"
( $at_check_trace; $builddir/test_mat -v 4 write_char
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:164"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_write.at:165: cp \$srcdir/results/readvar-write_char-a.out expout
          \$builddir/test_mat readvar test_write_char.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_write.at:165"
( $at_check_trace; cp $srcdir/results/readvar-write_char-a.out expout
          $builddir/test_mat readvar test_write_char.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:165"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat4_write.at:167" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat4_write.at:167"
{ set +x
$as_echo "$at_srcdir/mat4_write.at:168: cp \$srcdir/matlab/test_write_char.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_char\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_write.at:168"
( $at_check_trace; cp $srcdir/matlab/test_write_char.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_char" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_write.at:168"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_835
#AT_START_836
at_fn_group_banner 836 'mat4_readwrite.at:27' \
  "Copy variables" "                                 " 10
at_xfail=no
(
  $as_echo "836. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat4_readwrite.at:29" >"$at_check_line_file"
(! grep -q "#define SIZEOF_VOID_P 4" $abs_top_builddir/src/matioConfig.h) \
  && at_fn_check_skip 77 "$at_srcdir/mat4_readwrite.at:29"
{ set +x
$as_echo "$at_srcdir/mat4_readwrite.at:30: \$builddir/test_mat -v 4 copy \$srcdir/datasets/matio_test_cases_v4_le.mat"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 4 copy $srcdir/datasets/matio_test_cases_v4_le.mat" "mat4_readwrite.at:30"
( $at_check_trace; $builddir/test_mat -v 4 copy $srcdir/datasets/matio_test_cases_v4_le.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_readwrite.at:30"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_readwrite.at:31: cp \$srcdir/results/dump-mat_copy-4_32.out expout
          \$builddir/../tools/matdump -f whos -h -d test_mat_copy.mat"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_readwrite.at:31"
( $at_check_trace; cp $srcdir/results/dump-mat_copy-4_32.out expout
          $builddir/../tools/matdump -f whos -h -d test_mat_copy.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_readwrite.at:31"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_836
#AT_START_837
at_fn_group_banner 837 'mat4_readwrite.at:35' \
  "Copy variables" "                                 " 10
at_xfail=no
(
  $as_echo "837. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat4_readwrite.at:37" >"$at_check_line_file"
(! grep -q "#define SIZEOF_VOID_P 8" $abs_top_builddir/src/matioConfig.h) \
  && at_fn_check_skip 77 "$at_srcdir/mat4_readwrite.at:37"
{ set +x
$as_echo "$at_srcdir/mat4_readwrite.at:38: \$builddir/test_mat -v 4 copy \$srcdir/datasets/matio_test_cases_v4_le.mat"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 4 copy $srcdir/datasets/matio_test_cases_v4_le.mat" "mat4_readwrite.at:38"
( $at_check_trace; $builddir/test_mat -v 4 copy $srcdir/datasets/matio_test_cases_v4_le.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_readwrite.at:38"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_readwrite.at:39: cp \$srcdir/results/dump-mat_copy-4.out expout
          \$builddir/../tools/matdump -f whos -h -d test_mat_copy.mat"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_readwrite.at:39"
( $at_check_trace; cp $srcdir/results/dump-mat_copy-4.out expout
          $builddir/../tools/matdump -f whos -h -d test_mat_copy.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_readwrite.at:39"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_837
#AT_START_838
at_fn_group_banner 838 'mat4_readwrite.at:43' \
  "Delete variables" "                               " 10
at_xfail=no
(
  $as_echo "838. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat4_readwrite.at:45: \$builddir/test_mat -v 4 copy \$srcdir/datasets/matio_test_cases_v4_be.mat"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 4 copy $srcdir/datasets/matio_test_cases_v4_be.mat" "mat4_readwrite.at:45"
( $at_check_trace; $builddir/test_mat -v 4 copy $srcdir/datasets/matio_test_cases_v4_be.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_readwrite.at:45"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_readwrite.at:46: \$builddir/test_mat delete test_mat_copy.mat var11"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var11" "mat4_readwrite.at:46"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var11
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_readwrite.at:46"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_readwrite.at:47: \$builddir/test_mat delete test_mat_copy.mat var21"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var21" "mat4_readwrite.at:47"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var21
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_readwrite.at:47"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_readwrite.at:48: \$builddir/test_mat delete test_mat_copy.mat var22"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var22" "mat4_readwrite.at:48"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var22
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_readwrite.at:48"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_readwrite.at:49: cp \$srcdir/results/dump-mat_copy-partial.out expout
          \$builddir/../tools/matdump -f whos -h -d test_mat_copy.mat"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_readwrite.at:49"
( $at_check_trace; cp $srcdir/results/dump-mat_copy-partial.out expout
          $builddir/../tools/matdump -f whos -h -d test_mat_copy.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_readwrite.at:49"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_readwrite.at:51: \$builddir/test_mat delete test_mat_copy.mat var1"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var1" "mat4_readwrite.at:51"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_readwrite.at:51"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_readwrite.at:52: \$builddir/test_mat delete test_mat_copy.mat var24"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var24" "mat4_readwrite.at:52"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var24
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_readwrite.at:52"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_838
#AT_START_839
at_fn_group_banner 839 'mat5_uncompressed_write.at:27' \
  "Write 2D double array" "                          " 11
at_xfail=no
(
  $as_echo "839. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:28: \$builddir/test_mat -v 5 -c double write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c double write_2d_numeric" "mat5_uncompressed_write.at:28"
( $at_check_trace; $builddir/test_mat -v 5 -c double write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:28"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:29: cp \$srcdir/results/write_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:29"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:29"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:31" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:31"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:32: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:32"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:32"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_839
#AT_START_840
at_fn_group_banner 840 'mat5_uncompressed_write.at:36' \
  "Write 2D single array" "                          " 11
at_xfail=no
(
  $as_echo "840. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:37: \$builddir/test_mat -v 5 -c single write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c single write_2d_numeric" "mat5_uncompressed_write.at:37"
( $at_check_trace; $builddir/test_mat -v 5 -c single write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:37"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:38: cp \$srcdir/results/write_2d_numeric-single.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:38"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-single.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:38"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:40" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:40"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:41: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='single';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:41"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='single';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:41"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_840
#AT_START_841
at_fn_group_banner 841 'mat5_uncompressed_write.at:45' \
  "Write 2D int64 array" "                           " 11
at_xfail=no
(
  $as_echo "841. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_uncompressed_write.at:46" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:46"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:47: \$builddir/test_mat -v 5 -c int64 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c int64 write_2d_numeric" "mat5_uncompressed_write.at:47"
( $at_check_trace; $builddir/test_mat -v 5 -c int64 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:47"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:48: cp \$srcdir/results/write_2d_numeric-int64.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:48"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-int64.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:48"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:50" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:50"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:51: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int64';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:51"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int64';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:51"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_841
#AT_START_842
at_fn_group_banner 842 'mat5_uncompressed_write.at:55' \
  "Write 2D uint64 array" "                          " 11
at_xfail=no
(
  $as_echo "842. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_uncompressed_write.at:56" >"$at_check_line_file"
(test $HAVE_UINT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:56"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:57: \$builddir/test_mat -v 5 -c uint64 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c uint64 write_2d_numeric" "mat5_uncompressed_write.at:57"
( $at_check_trace; $builddir/test_mat -v 5 -c uint64 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:57"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:58: cp \$srcdir/results/write_2d_numeric-uint64.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:58"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-uint64.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:58"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:60" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:60"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:61: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint64';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:61"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint64';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:61"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_842
#AT_START_843
at_fn_group_banner 843 'mat5_uncompressed_write.at:65' \
  "Write 2D int32 array" "                           " 11
at_xfail=no
(
  $as_echo "843. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:66: \$builddir/test_mat -v 5 -c int32 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c int32 write_2d_numeric" "mat5_uncompressed_write.at:66"
( $at_check_trace; $builddir/test_mat -v 5 -c int32 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:66"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:67: cp \$srcdir/results/write_2d_numeric-int32.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:67"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-int32.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:67"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:69" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:69"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:70: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int32';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:70"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int32';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:70"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_843
#AT_START_844
at_fn_group_banner 844 'mat5_uncompressed_write.at:74' \
  "Write 2D uint32 array" "                          " 11
at_xfail=no
(
  $as_echo "844. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:75: \$builddir/test_mat -v 5 -c uint32 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c uint32 write_2d_numeric" "mat5_uncompressed_write.at:75"
( $at_check_trace; $builddir/test_mat -v 5 -c uint32 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:75"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:76: cp \$srcdir/results/write_2d_numeric-uint32.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:76"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-uint32.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:76"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:78" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:78"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:79: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint32';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:79"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint32';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:79"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_844
#AT_START_845
at_fn_group_banner 845 'mat5_uncompressed_write.at:83' \
  "Write 2D int16 array" "                           " 11
at_xfail=no
(
  $as_echo "845. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:84: \$builddir/test_mat -v 5 -c int16 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c int16 write_2d_numeric" "mat5_uncompressed_write.at:84"
( $at_check_trace; $builddir/test_mat -v 5 -c int16 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:84"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:85: cp \$srcdir/results/write_2d_numeric-int16.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:85"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-int16.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:85"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:87" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:87"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:88: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int16';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:88"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int16';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:88"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_845
#AT_START_846
at_fn_group_banner 846 'mat5_uncompressed_write.at:92' \
  "Write 2D uint16 array" "                          " 11
at_xfail=no
(
  $as_echo "846. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:93: \$builddir/test_mat -v 5 -c uint16 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c uint16 write_2d_numeric" "mat5_uncompressed_write.at:93"
( $at_check_trace; $builddir/test_mat -v 5 -c uint16 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:93"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:94: cp \$srcdir/results/write_2d_numeric-uint16.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:94"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-uint16.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:94"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:96" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:96"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:97: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint16';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:97"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint16';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:97"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_846
#AT_START_847
at_fn_group_banner 847 'mat5_uncompressed_write.at:101' \
  "Write 2D int8 array" "                            " 11
at_xfail=no
(
  $as_echo "847. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:102: \$builddir/test_mat -v 5 -c int8 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c int8 write_2d_numeric" "mat5_uncompressed_write.at:102"
( $at_check_trace; $builddir/test_mat -v 5 -c int8 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:102"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:103: cp \$srcdir/results/write_2d_numeric-int8.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:103"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-int8.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:103"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:105" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:105"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:106: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int8';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:106"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int8';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:106"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_847
#AT_START_848
at_fn_group_banner 848 'mat5_uncompressed_write.at:110' \
  "Write 2D uint8 array" "                           " 11
at_xfail=no
(
  $as_echo "848. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:111: \$builddir/test_mat -v 5 -c uint8 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c uint8 write_2d_numeric" "mat5_uncompressed_write.at:111"
( $at_check_trace; $builddir/test_mat -v 5 -c uint8 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:111"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:112: cp \$srcdir/results/write_2d_numeric-uint8.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:112"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-uint8.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:112"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:114" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:114"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:115: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint8';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:115"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint8';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:115"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_848
#AT_START_849
at_fn_group_banner 849 'mat5_uncompressed_write.at:119' \
  "Write 2D complex double array" "                  " 11
at_xfail=no
(
  $as_echo "849. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:120: \$builddir/test_mat -v 5 -c double write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c double write_complex_2d_numeric" "mat5_uncompressed_write.at:120"
( $at_check_trace; $builddir/test_mat -v 5 -c double write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:120"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:121: cp \$srcdir/results/write_complex_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:121"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:121"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:123" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:123"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:124: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:124"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:124"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_849
#AT_START_850
at_fn_group_banner 850 'mat5_uncompressed_write.at:128' \
  "Write 2D complex single array" "                  " 11
at_xfail=no
(
  $as_echo "850. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:129: \$builddir/test_mat -v 5 -c single write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c single write_complex_2d_numeric" "mat5_uncompressed_write.at:129"
( $at_check_trace; $builddir/test_mat -v 5 -c single write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:129"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:130: cp \$srcdir/results/write_complex_2d_numeric-single.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:130"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-single.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:130"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:132" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:132"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:133: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='single';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:133"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='single';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:133"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_850
#AT_START_851
at_fn_group_banner 851 'mat5_uncompressed_write.at:137' \
  "Write 2D complex int64 array" "                   " 11
at_xfail=no
(
  $as_echo "851. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_uncompressed_write.at:138" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:138"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:139: \$builddir/test_mat -v 5 -c int64 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c int64 write_complex_2d_numeric" "mat5_uncompressed_write.at:139"
( $at_check_trace; $builddir/test_mat -v 5 -c int64 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:139"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:140: cp \$srcdir/results/write_complex_2d_numeric-int64.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:140"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-int64.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:140"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:142" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:142"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:143: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int64';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:143"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int64';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:143"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_851
#AT_START_852
at_fn_group_banner 852 'mat5_uncompressed_write.at:147' \
  "Write 2D complex uint64 array" "                  " 11
at_xfail=no
(
  $as_echo "852. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_uncompressed_write.at:148" >"$at_check_line_file"
(test $HAVE_UINT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:148"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:149: \$builddir/test_mat -v 5 -c uint64 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c uint64 write_complex_2d_numeric" "mat5_uncompressed_write.at:149"
( $at_check_trace; $builddir/test_mat -v 5 -c uint64 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:149"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:150: cp \$srcdir/results/write_complex_2d_numeric-uint64.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:150"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-uint64.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:150"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:152" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:152"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:153: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint64';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:153"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint64';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:153"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_852
#AT_START_853
at_fn_group_banner 853 'mat5_uncompressed_write.at:157' \
  "Write 2D complex int32 array" "                   " 11
at_xfail=no
(
  $as_echo "853. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:158: \$builddir/test_mat -v 5 -c int32 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c int32 write_complex_2d_numeric" "mat5_uncompressed_write.at:158"
( $at_check_trace; $builddir/test_mat -v 5 -c int32 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:158"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:159: cp \$srcdir/results/write_complex_2d_numeric-int32.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:159"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-int32.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:159"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:161" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:161"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:162: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int32';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:162"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int32';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:162"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_853
#AT_START_854
at_fn_group_banner 854 'mat5_uncompressed_write.at:166' \
  "Write 2D complex uint32 array" "                  " 11
at_xfail=no
(
  $as_echo "854. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:167: \$builddir/test_mat -v 5 -c uint32 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c uint32 write_complex_2d_numeric" "mat5_uncompressed_write.at:167"
( $at_check_trace; $builddir/test_mat -v 5 -c uint32 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:167"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:168: cp \$srcdir/results/write_complex_2d_numeric-uint32.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:168"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-uint32.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:168"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:170" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:170"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:171: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint32';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:171"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint32';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:171"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_854
#AT_START_855
at_fn_group_banner 855 'mat5_uncompressed_write.at:175' \
  "Write 2D complex int16 array" "                   " 11
at_xfail=no
(
  $as_echo "855. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:176: \$builddir/test_mat -v 5 -c int16 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c int16 write_complex_2d_numeric" "mat5_uncompressed_write.at:176"
( $at_check_trace; $builddir/test_mat -v 5 -c int16 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:176"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:177: cp \$srcdir/results/write_complex_2d_numeric-int16.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:177"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-int16.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:177"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:179" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:179"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:180: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int16';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:180"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int16';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:180"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_855
#AT_START_856
at_fn_group_banner 856 'mat5_uncompressed_write.at:184' \
  "Write 2D complex uint16 array" "                  " 11
at_xfail=no
(
  $as_echo "856. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:185: \$builddir/test_mat -v 5 -c uint16 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c uint16 write_complex_2d_numeric" "mat5_uncompressed_write.at:185"
( $at_check_trace; $builddir/test_mat -v 5 -c uint16 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:185"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:186: cp \$srcdir/results/write_complex_2d_numeric-uint16.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:186"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-uint16.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:186"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:188" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:188"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:189: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint16';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:189"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint16';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:189"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_856
#AT_START_857
at_fn_group_banner 857 'mat5_uncompressed_write.at:193' \
  "Write 2D complex int8 array" "                    " 11
at_xfail=no
(
  $as_echo "857. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:194: \$builddir/test_mat -v 5 -c int8 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c int8 write_complex_2d_numeric" "mat5_uncompressed_write.at:194"
( $at_check_trace; $builddir/test_mat -v 5 -c int8 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:194"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:195: cp \$srcdir/results/write_complex_2d_numeric-int8.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:195"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-int8.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:195"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:197" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:197"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:198: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int8';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:198"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int8';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:198"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_857
#AT_START_858
at_fn_group_banner 858 'mat5_uncompressed_write.at:202' \
  "Write 2D complex uint8 array" "                   " 11
at_xfail=no
(
  $as_echo "858. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:203: \$builddir/test_mat -v 5 -c uint8 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c uint8 write_complex_2d_numeric" "mat5_uncompressed_write.at:203"
( $at_check_trace; $builddir/test_mat -v 5 -c uint8 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:203"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:204: cp \$srcdir/results/write_complex_2d_numeric-uint8.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:204"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-uint8.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:204"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:206" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:206"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:207: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint8';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:207"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint8';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:207"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_858
#AT_START_859
at_fn_group_banner 859 'mat5_uncompressed_write.at:211' \
  "Write 2D logical array" "                         " 11
at_xfail=no
(
  $as_echo "859. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:212: \$builddir/test_mat -v 5 write_2d_logical"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 write_2d_logical" "mat5_uncompressed_write.at:212"
( $at_check_trace; $builddir/test_mat -v 5 write_2d_logical
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:212"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:213: cp \$srcdir/results/write_2d_numeric-l1-logical.out expout
          \$builddir/test_mat readvar test_write_2d_logical.mat l1"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:213"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-l1-logical.out expout
          $builddir/test_mat readvar test_write_2d_logical.mat l1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:213"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:215: cp \$srcdir/results/write_2d_numeric-l2-logical.out expout
          \$builddir/test_mat readvar test_write_2d_logical.mat l2"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:215"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-l2-logical.out expout
          $builddir/test_mat readvar test_write_2d_logical.mat l2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:215"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:217: cp \$srcdir/results/write_2d_numeric-l4-logical.out expout
          \$builddir/test_mat readvar test_write_2d_logical.mat l4"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:217"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-l4-logical.out expout
          $builddir/test_mat readvar test_write_2d_logical.mat l4
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:217"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:219" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:219"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:220: cp \$srcdir/matlab/test_write_2d_logical.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_2d_logical\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:220"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_logical.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_2d_logical" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:220"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_859
#AT_START_860
at_fn_group_banner 860 'mat5_uncompressed_write.at:224' \
  "Write 2D sparse double array" "                   " 11
at_xfail=no
(
  $as_echo "860. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:225: \$builddir/test_mat -v 5 -c double write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c double write_sparse" "mat5_uncompressed_write.at:225"
( $at_check_trace; $builddir/test_mat -v 5 -c double write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:225"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:226: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-double.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:226"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-double.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:226"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:228" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:228"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:229: cp \$srcdir/matlab/test_write_sparse.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_sparse\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:229"
( $at_check_trace; cp $srcdir/matlab/test_write_sparse.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_sparse" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:229"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_860
#AT_START_861
at_fn_group_banner 861 'mat5_uncompressed_write.at:233' \
  "Write 2D sparse complex double array" "           " 11
at_xfail=no
(
  $as_echo "861. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:234: \$builddir/test_mat -v 5 -c double write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c double write_complex_sparse" "mat5_uncompressed_write.at:234"
( $at_check_trace; $builddir/test_mat -v 5 -c double write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:234"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:235: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-double.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:235"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-double.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:235"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:237" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:237"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:238: cp \$srcdir/matlab/test_write_sparse_complex.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_sparse_complex\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:238"
( $at_check_trace; cp $srcdir/matlab/test_write_sparse_complex.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_sparse_complex" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:238"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_861
#AT_START_862
at_fn_group_banner 862 'mat5_uncompressed_write.at:242' \
  "Write 2D empty array" "                           " 11
at_xfail=no
(
  $as_echo "862. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:244: \$builddir/test_mat -v 5 -c double write_empty_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c double write_empty_2d_numeric" "mat5_uncompressed_write.at:244"
( $at_check_trace; $builddir/test_mat -v 5 -c double write_empty_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:244"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:245: cp \$srcdir/results/readvar-write_empty_2d_numeric-empty.out expout
          \$builddir/test_mat readvar test_write_empty_2d_numeric.mat empty"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:245"
( $at_check_trace; cp $srcdir/results/readvar-write_empty_2d_numeric-empty.out expout
          $builddir/test_mat readvar test_write_empty_2d_numeric.mat empty
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:245"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:247" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:247"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:248: cp \$srcdir/matlab/test_write_empty.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_empty\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:248"
( $at_check_trace; cp $srcdir/matlab/test_write_empty.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_empty" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:248"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_862
#AT_START_863
at_fn_group_banner 863 'mat5_uncompressed_write.at:252' \
  "Write character array" "                          " 11
at_xfail=no
(
  $as_echo "863. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:253: \$builddir/test_mat -v 5 write_char"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 write_char" "mat5_uncompressed_write.at:253"
( $at_check_trace; $builddir/test_mat -v 5 write_char
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:253"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:254: cp \$srcdir/results/readvar-write_char-a.out expout
          \$builddir/test_mat readvar test_write_char.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:254"
( $at_check_trace; cp $srcdir/results/readvar-write_char-a.out expout
          $builddir/test_mat readvar test_write_char.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:254"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:256" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:256"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:257: cp \$srcdir/matlab/test_write_char.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_char\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:257"
( $at_check_trace; cp $srcdir/matlab/test_write_char.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_char" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:257"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_863
#AT_START_864
at_fn_group_banner 864 'mat5_uncompressed_write.at:261' \
  "Write empty struct" "                             " 11
at_xfail=no
(
  $as_echo "864. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:263: \$builddir/test_mat -v 5 write_empty_struct"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 write_empty_struct" "mat5_uncompressed_write.at:263"
( $at_check_trace; $builddir/test_mat -v 5 write_empty_struct
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:263"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:264: cp \$srcdir/results/readvar-write_empty_struct-var1.out expout
          \$builddir/test_mat readvar test_write_empty_struct.mat var1"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:264"
( $at_check_trace; cp $srcdir/results/readvar-write_empty_struct-var1.out expout
          $builddir/test_mat readvar test_write_empty_struct.mat var1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:264"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:266: cp \$srcdir/results/readvar-write_empty_struct-var2.out expout
          \$builddir/test_mat readvar test_write_empty_struct.mat var2"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:266"
( $at_check_trace; cp $srcdir/results/readvar-write_empty_struct-var2.out expout
          $builddir/test_mat readvar test_write_empty_struct.mat var2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:266"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:268: cp \$srcdir/results/readvar-write_empty_struct-var3.out expout
          \$builddir/test_mat readvar test_write_empty_struct.mat var3"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:268"
( $at_check_trace; cp $srcdir/results/readvar-write_empty_struct-var3.out expout
          $builddir/test_mat readvar test_write_empty_struct.mat var3
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:268"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:270: cp \$srcdir/results/readvar-write_empty_struct-var4.out expout
          \$builddir/test_mat readvar test_write_empty_struct.mat var4"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:270"
( $at_check_trace; cp $srcdir/results/readvar-write_empty_struct-var4.out expout
          $builddir/test_mat readvar test_write_empty_struct.mat var4
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:270"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:272" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:272"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:273: cp \$srcdir/matlab/test_write_empty_struct.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_empty_struct\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:273"
( $at_check_trace; cp $srcdir/matlab/test_write_empty_struct.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_empty_struct" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:273"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_864
#AT_START_865
at_fn_group_banner 865 'mat5_uncompressed_write.at:277' \
  "Write struct with 2D double fields" "             " 11
at_xfail=no
(
  $as_echo "865. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:278: \$builddir/test_mat -v 5 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 write_struct_2d_numeric" "mat5_uncompressed_write.at:278"
( $at_check_trace; $builddir/test_mat -v 5 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:278"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:279: cp \$srcdir/results/write_struct_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:279"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:279"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:281" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:281"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:282: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:282"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:282"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_865
#AT_START_866
at_fn_group_banner 866 'mat5_uncompressed_write.at:286' \
  "Write struct with 2D single fields" "             " 11
at_xfail=no
(
  $as_echo "866. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:287: \$builddir/test_mat -v 5 -c single write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c single write_struct_2d_numeric" "mat5_uncompressed_write.at:287"
( $at_check_trace; $builddir/test_mat -v 5 -c single write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:287"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:288: cp \$srcdir/results/write_struct_2d_numeric-single.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:288"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-single.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:288"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:290" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:290"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:291: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='single';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:291"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='single';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:291"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_866
#AT_START_867
at_fn_group_banner 867 'mat5_uncompressed_write.at:295' \
  "Write struct with 2D int64 fields" "              " 11
at_xfail=no
(
  $as_echo "867. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_uncompressed_write.at:296" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:296"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:297: \$builddir/test_mat -v 5 -c int64 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c int64 write_struct_2d_numeric" "mat5_uncompressed_write.at:297"
( $at_check_trace; $builddir/test_mat -v 5 -c int64 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:297"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:298: cp \$srcdir/results/write_struct_2d_numeric-int64.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:298"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-int64.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:298"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:300" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:300"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:301: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int64';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:301"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int64';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:301"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_867
#AT_START_868
at_fn_group_banner 868 'mat5_uncompressed_write.at:305' \
  "Write struct with 2D uint64 fields" "             " 11
at_xfail=no
(
  $as_echo "868. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_uncompressed_write.at:306" >"$at_check_line_file"
(test $HAVE_UINT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:306"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:307: \$builddir/test_mat -v 5 -c uint64 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c uint64 write_struct_2d_numeric" "mat5_uncompressed_write.at:307"
( $at_check_trace; $builddir/test_mat -v 5 -c uint64 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:307"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:308: cp \$srcdir/results/write_struct_2d_numeric-uint64.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:308"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-uint64.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:308"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:310" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:310"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:311: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint64';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:311"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint64';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:311"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_868
#AT_START_869
at_fn_group_banner 869 'mat5_uncompressed_write.at:315' \
  "Write struct with 2D int32 fields" "              " 11
at_xfail=no
(
  $as_echo "869. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:316: \$builddir/test_mat -v 5 -c int32 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c int32 write_struct_2d_numeric" "mat5_uncompressed_write.at:316"
( $at_check_trace; $builddir/test_mat -v 5 -c int32 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:316"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:317: cp \$srcdir/results/write_struct_2d_numeric-int32.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:317"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-int32.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:317"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:319" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:319"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:320: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int32';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:320"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int32';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:320"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_869
#AT_START_870
at_fn_group_banner 870 'mat5_uncompressed_write.at:324' \
  "Write struct with 2D uint32 fields" "             " 11
at_xfail=no
(
  $as_echo "870. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:325: \$builddir/test_mat -v 5 -c uint32 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c uint32 write_struct_2d_numeric" "mat5_uncompressed_write.at:325"
( $at_check_trace; $builddir/test_mat -v 5 -c uint32 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:325"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:326: cp \$srcdir/results/write_struct_2d_numeric-uint32.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:326"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-uint32.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:326"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:328" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:328"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:329: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint32';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:329"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint32';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:329"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_870
#AT_START_871
at_fn_group_banner 871 'mat5_uncompressed_write.at:333' \
  "Write struct with 2D int16 fields" "              " 11
at_xfail=no
(
  $as_echo "871. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:334: \$builddir/test_mat -v 5 -c int16 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c int16 write_struct_2d_numeric" "mat5_uncompressed_write.at:334"
( $at_check_trace; $builddir/test_mat -v 5 -c int16 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:334"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:335: cp \$srcdir/results/write_struct_2d_numeric-int16.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:335"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-int16.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:335"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:337" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:337"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:338: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int16';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:338"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int16';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:338"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_871
#AT_START_872
at_fn_group_banner 872 'mat5_uncompressed_write.at:342' \
  "Write struct with 2D uint16 fields" "             " 11
at_xfail=no
(
  $as_echo "872. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:343: \$builddir/test_mat -v 5 -c uint16 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c uint16 write_struct_2d_numeric" "mat5_uncompressed_write.at:343"
( $at_check_trace; $builddir/test_mat -v 5 -c uint16 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:343"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:344: cp \$srcdir/results/write_struct_2d_numeric-uint16.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:344"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-uint16.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:344"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:346" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:346"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:347: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint16';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:347"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint16';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:347"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_872
#AT_START_873
at_fn_group_banner 873 'mat5_uncompressed_write.at:351' \
  "Write struct with 2D int8 fields" "               " 11
at_xfail=no
(
  $as_echo "873. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:352: \$builddir/test_mat -v 5 -c int8 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c int8 write_struct_2d_numeric" "mat5_uncompressed_write.at:352"
( $at_check_trace; $builddir/test_mat -v 5 -c int8 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:352"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:353: cp \$srcdir/results/write_struct_2d_numeric-int8.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:353"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-int8.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:353"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:355" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:355"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:356: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int8';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:356"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int8';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:356"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_873
#AT_START_874
at_fn_group_banner 874 'mat5_uncompressed_write.at:360' \
  "Write struct with 2D uint8 fields" "              " 11
at_xfail=no
(
  $as_echo "874. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:361: \$builddir/test_mat -v 5 -c uint8 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c uint8 write_struct_2d_numeric" "mat5_uncompressed_write.at:361"
( $at_check_trace; $builddir/test_mat -v 5 -c uint8 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:361"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:362: cp \$srcdir/results/write_struct_2d_numeric-uint8.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:362"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-uint8.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:362"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:364" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:364"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:365: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint8';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:365"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint8';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:365"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_874
#AT_START_875
at_fn_group_banner 875 'mat5_uncompressed_write.at:369' \
  "Write struct with 2D complex double fields" "     " 11
at_xfail=no
(
  $as_echo "875. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:370: \$builddir/test_mat -v 5 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 write_struct_complex_2d_numeric" "mat5_uncompressed_write.at:370"
( $at_check_trace; $builddir/test_mat -v 5 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:370"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:371: cp \$srcdir/results/write_struct_complex_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:371"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:371"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:373" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:373"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:374: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:374"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:374"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_875
#AT_START_876
at_fn_group_banner 876 'mat5_uncompressed_write.at:378' \
  "Write struct with 2D complex single fields" "     " 11
at_xfail=no
(
  $as_echo "876. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:379: \$builddir/test_mat -v 5 -c single write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c single write_struct_complex_2d_numeric" "mat5_uncompressed_write.at:379"
( $at_check_trace; $builddir/test_mat -v 5 -c single write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:379"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:380: cp \$srcdir/results/write_struct_complex_2d_numeric-single.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:380"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-single.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:380"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:382" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:382"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:383: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='single';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:383"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='single';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:383"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_876
#AT_START_877
at_fn_group_banner 877 'mat5_uncompressed_write.at:387' \
  "Write struct with 2D complex int64 fields" "      " 11
at_xfail=no
(
  $as_echo "877. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_uncompressed_write.at:388" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:388"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:389: \$builddir/test_mat -v 5 -c int64 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c int64 write_struct_complex_2d_numeric" "mat5_uncompressed_write.at:389"
( $at_check_trace; $builddir/test_mat -v 5 -c int64 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:389"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:390: cp \$srcdir/results/write_struct_complex_2d_numeric-int64.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:390"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-int64.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:390"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:392" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:392"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:393: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int64';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:393"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int64';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:393"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_877
#AT_START_878
at_fn_group_banner 878 'mat5_uncompressed_write.at:397' \
  "Write struct with 2D complex uint64 fields" "     " 11
at_xfail=no
(
  $as_echo "878. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_uncompressed_write.at:398" >"$at_check_line_file"
(test $HAVE_UINT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:398"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:399: \$builddir/test_mat -v 5 -c uint64 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c uint64 write_struct_complex_2d_numeric" "mat5_uncompressed_write.at:399"
( $at_check_trace; $builddir/test_mat -v 5 -c uint64 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:399"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:400: cp \$srcdir/results/write_struct_complex_2d_numeric-uint64.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:400"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-uint64.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:400"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:402" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:402"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:403: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint64';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:403"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint64';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:403"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_878
#AT_START_879
at_fn_group_banner 879 'mat5_uncompressed_write.at:407' \
  "Write struct with 2D complex int32 fields" "      " 11
at_xfail=no
(
  $as_echo "879. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:408: \$builddir/test_mat -v 5 -c int32 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c int32 write_struct_complex_2d_numeric" "mat5_uncompressed_write.at:408"
( $at_check_trace; $builddir/test_mat -v 5 -c int32 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:408"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:409: cp \$srcdir/results/write_struct_complex_2d_numeric-int32.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:409"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-int32.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:409"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:411" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:411"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:412: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int32';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:412"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int32';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:412"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_879
#AT_START_880
at_fn_group_banner 880 'mat5_uncompressed_write.at:416' \
  "Write struct with 2D complex uint32 fields" "     " 11
at_xfail=no
(
  $as_echo "880. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:417: \$builddir/test_mat -v 5 -c uint32 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c uint32 write_struct_complex_2d_numeric" "mat5_uncompressed_write.at:417"
( $at_check_trace; $builddir/test_mat -v 5 -c uint32 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:417"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:418: cp \$srcdir/results/write_struct_complex_2d_numeric-uint32.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:418"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-uint32.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:418"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:420" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:420"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:421: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint32';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:421"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint32';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:421"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_880
#AT_START_881
at_fn_group_banner 881 'mat5_uncompressed_write.at:425' \
  "Write struct with 2D complex int16 fields" "      " 11
at_xfail=no
(
  $as_echo "881. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:426: \$builddir/test_mat -v 5 -c int16 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c int16 write_struct_complex_2d_numeric" "mat5_uncompressed_write.at:426"
( $at_check_trace; $builddir/test_mat -v 5 -c int16 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:426"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:427: cp \$srcdir/results/write_struct_complex_2d_numeric-int16.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:427"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-int16.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:427"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:429" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:429"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:430: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int16';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:430"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int16';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:430"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_881
#AT_START_882
at_fn_group_banner 882 'mat5_uncompressed_write.at:434' \
  "Write struct with 2D complex uint16 fields" "     " 11
at_xfail=no
(
  $as_echo "882. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:435: \$builddir/test_mat -v 5 -c uint16 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c uint16 write_struct_complex_2d_numeric" "mat5_uncompressed_write.at:435"
( $at_check_trace; $builddir/test_mat -v 5 -c uint16 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:435"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:436: cp \$srcdir/results/write_struct_complex_2d_numeric-uint16.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:436"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-uint16.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:436"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:438" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:438"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:439: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint16';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:439"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint16';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:439"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_882
#AT_START_883
at_fn_group_banner 883 'mat5_uncompressed_write.at:443' \
  "Write struct with 2D complex int8 fields" "       " 11
at_xfail=no
(
  $as_echo "883. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:444: \$builddir/test_mat -v 5 -c int8 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c int8 write_struct_complex_2d_numeric" "mat5_uncompressed_write.at:444"
( $at_check_trace; $builddir/test_mat -v 5 -c int8 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:444"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:445: cp \$srcdir/results/write_struct_complex_2d_numeric-int8.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:445"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-int8.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:445"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:447" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:447"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:448: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int8';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:448"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int8';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:448"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_883
#AT_START_884
at_fn_group_banner 884 'mat5_uncompressed_write.at:452' \
  "Write struct with 2D complex uint8 fields" "      " 11
at_xfail=no
(
  $as_echo "884. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:453: \$builddir/test_mat -v 5 -c uint8 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c uint8 write_struct_complex_2d_numeric" "mat5_uncompressed_write.at:453"
( $at_check_trace; $builddir/test_mat -v 5 -c uint8 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:453"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:454: cp \$srcdir/results/write_struct_complex_2d_numeric-uint8.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:454"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-uint8.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:454"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:456" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:456"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:457: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint8';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:457"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint8';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:457"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_884
#AT_START_885
at_fn_group_banner 885 'mat5_uncompressed_write.at:461' \
  "Write struct with 2D logical fields" "            " 11
at_xfail=no
(
  $as_echo "885. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:462: \$builddir/test_mat -v 5 write_struct_2d_logical"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 write_struct_2d_logical" "mat5_uncompressed_write.at:462"
( $at_check_trace; $builddir/test_mat -v 5 write_struct_2d_logical
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:462"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:463: cp \$srcdir/results/write_struct_2d_numeric-logical.out expout
          \$builddir/test_mat readvar test_write_struct_2d_logical.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:463"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-logical.out expout
          $builddir/test_mat readvar test_write_struct_2d_logical.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:463"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:465" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:465"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:466: cp \$srcdir/matlab/test_write_struct_2d_logical.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_struct_2d_logical\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:466"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_logical.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_struct_2d_logical" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:466"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_885
#AT_START_886
at_fn_group_banner 886 'mat5_uncompressed_write.at:470' \
  "Write struct with character fields" "             " 11
at_xfail=no
(
  $as_echo "886. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:472: \$builddir/test_mat -v 5 write_struct_char"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 write_struct_char" "mat5_uncompressed_write.at:472"
( $at_check_trace; $builddir/test_mat -v 5 write_struct_char
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:472"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:473: cp \$srcdir/results/write_struct_char.out expout
          \$builddir/test_mat readvar test_write_struct_char.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:473"
( $at_check_trace; cp $srcdir/results/write_struct_char.out expout
          $builddir/test_mat readvar test_write_struct_char.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:473"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:475" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:475"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:476: cp \$srcdir/matlab/test_write_struct_char.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_struct_char\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:476"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_char.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_struct_char" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:476"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_886
#AT_START_887
at_fn_group_banner 887 'mat5_uncompressed_write.at:480' \
  "Write empty cell array" "                         " 11
at_xfail=no
(
  $as_echo "887. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:482: \$builddir/test_mat -v 5 write_empty_cell"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 write_empty_cell" "mat5_uncompressed_write.at:482"
( $at_check_trace; $builddir/test_mat -v 5 write_empty_cell
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:482"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:483: cp \$srcdir/results/readvar-write_empty_cell-var1.out expout
          \$builddir/test_mat readvar test_write_empty_cell.mat var1"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:483"
( $at_check_trace; cp $srcdir/results/readvar-write_empty_cell-var1.out expout
          $builddir/test_mat readvar test_write_empty_cell.mat var1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:483"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:485: cp \$srcdir/results/readvar-write_empty_cell-var2.out expout
          \$builddir/test_mat readvar test_write_empty_cell.mat var2"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:485"
( $at_check_trace; cp $srcdir/results/readvar-write_empty_cell-var2.out expout
          $builddir/test_mat readvar test_write_empty_cell.mat var2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:485"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:487" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:487"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:488: cp \$srcdir/matlab/test_write_empty_cell.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_empty_cell\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:488"
( $at_check_trace; cp $srcdir/matlab/test_write_empty_cell.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_empty_cell" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:488"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_887
#AT_START_888
at_fn_group_banner 888 'mat5_uncompressed_write.at:492' \
  "Write cell array with 2D double fields" "         " 11
at_xfail=no
(
  $as_echo "888. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:493: \$builddir/test_mat -v 5 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 write_cell_2d_numeric" "mat5_uncompressed_write.at:493"
( $at_check_trace; $builddir/test_mat -v 5 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:493"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:494: cp \$srcdir/results/write_cell_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:494"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:494"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:496" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:496"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:497: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:497"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:497"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_888
#AT_START_889
at_fn_group_banner 889 'mat5_uncompressed_write.at:501' \
  "Write cell array with 2D single fields" "         " 11
at_xfail=no
(
  $as_echo "889. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:502: \$builddir/test_mat -v 5 -c single write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c single write_cell_2d_numeric" "mat5_uncompressed_write.at:502"
( $at_check_trace; $builddir/test_mat -v 5 -c single write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:502"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:503: cp \$srcdir/results/write_cell_2d_numeric-single.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:503"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-single.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:503"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:505" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:505"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:506: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='single';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:506"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='single';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:506"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_889
#AT_START_890
at_fn_group_banner 890 'mat5_uncompressed_write.at:510' \
  "Write cell array with 2D int64 fields" "          " 11
at_xfail=no
(
  $as_echo "890. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_uncompressed_write.at:511" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:511"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:512: \$builddir/test_mat -v 5 -c int64 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c int64 write_cell_2d_numeric" "mat5_uncompressed_write.at:512"
( $at_check_trace; $builddir/test_mat -v 5 -c int64 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:512"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:513: cp \$srcdir/results/write_cell_2d_numeric-int64.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:513"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-int64.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:513"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:515" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:515"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:516: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int64';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:516"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int64';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:516"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_890
#AT_START_891
at_fn_group_banner 891 'mat5_uncompressed_write.at:520' \
  "Write cell array with 2D uint64 fields" "         " 11
at_xfail=no
(
  $as_echo "891. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_uncompressed_write.at:521" >"$at_check_line_file"
(test $HAVE_UINT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:521"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:522: \$builddir/test_mat -v 5 -c uint64 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c uint64 write_cell_2d_numeric" "mat5_uncompressed_write.at:522"
( $at_check_trace; $builddir/test_mat -v 5 -c uint64 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:522"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:523: cp \$srcdir/results/write_cell_2d_numeric-uint64.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:523"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-uint64.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:523"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:525" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:525"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:526: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint64';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:526"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint64';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:526"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_891
#AT_START_892
at_fn_group_banner 892 'mat5_uncompressed_write.at:530' \
  "Write cell array with 2D int32 fields" "          " 11
at_xfail=no
(
  $as_echo "892. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:531: \$builddir/test_mat -v 5 -c int32 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c int32 write_cell_2d_numeric" "mat5_uncompressed_write.at:531"
( $at_check_trace; $builddir/test_mat -v 5 -c int32 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:531"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:532: cp \$srcdir/results/write_cell_2d_numeric-int32.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:532"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-int32.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:532"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:534" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:534"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:535: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int32';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:535"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int32';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:535"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_892
#AT_START_893
at_fn_group_banner 893 'mat5_uncompressed_write.at:539' \
  "Write cell array with 2D uint32 fields" "         " 11
at_xfail=no
(
  $as_echo "893. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:540: \$builddir/test_mat -v 5 -c uint32 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c uint32 write_cell_2d_numeric" "mat5_uncompressed_write.at:540"
( $at_check_trace; $builddir/test_mat -v 5 -c uint32 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:540"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:541: cp \$srcdir/results/write_cell_2d_numeric-uint32.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:541"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-uint32.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:541"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:543" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:543"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:544: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint32';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:544"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint32';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:544"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_893
#AT_START_894
at_fn_group_banner 894 'mat5_uncompressed_write.at:548' \
  "Write cell array with 2D int16 fields" "          " 11
at_xfail=no
(
  $as_echo "894. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:549: \$builddir/test_mat -v 5 -c int16 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c int16 write_cell_2d_numeric" "mat5_uncompressed_write.at:549"
( $at_check_trace; $builddir/test_mat -v 5 -c int16 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:549"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:550: cp \$srcdir/results/write_cell_2d_numeric-int16.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:550"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-int16.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:550"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:552" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:552"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:553: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int16';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:553"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int16';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:553"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_894
#AT_START_895
at_fn_group_banner 895 'mat5_uncompressed_write.at:557' \
  "Write cell array with 2D uint16 fields" "         " 11
at_xfail=no
(
  $as_echo "895. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:558: \$builddir/test_mat -v 5 -c uint16 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c uint16 write_cell_2d_numeric" "mat5_uncompressed_write.at:558"
( $at_check_trace; $builddir/test_mat -v 5 -c uint16 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:558"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:559: cp \$srcdir/results/write_cell_2d_numeric-uint16.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:559"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-uint16.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:559"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:561" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:561"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:562: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint16';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:562"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint16';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:562"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_895
#AT_START_896
at_fn_group_banner 896 'mat5_uncompressed_write.at:566' \
  "Write cell array with 2D int8 fields" "           " 11
at_xfail=no
(
  $as_echo "896. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:567: \$builddir/test_mat -v 5 -c int8 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c int8 write_cell_2d_numeric" "mat5_uncompressed_write.at:567"
( $at_check_trace; $builddir/test_mat -v 5 -c int8 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:567"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:568: cp \$srcdir/results/write_cell_2d_numeric-int8.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:568"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-int8.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:568"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:570" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:570"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:571: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int8';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:571"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int8';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:571"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_896
#AT_START_897
at_fn_group_banner 897 'mat5_uncompressed_write.at:575' \
  "Write cell array with 2D uint8 fields" "          " 11
at_xfail=no
(
  $as_echo "897. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:576: \$builddir/test_mat -v 5 -c uint8 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c uint8 write_cell_2d_numeric" "mat5_uncompressed_write.at:576"
( $at_check_trace; $builddir/test_mat -v 5 -c uint8 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:576"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:577: cp \$srcdir/results/write_cell_2d_numeric-uint8.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:577"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-uint8.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:577"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:579" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:579"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:580: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint8';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:580"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint8';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:580"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_897
#AT_START_898
at_fn_group_banner 898 'mat5_uncompressed_write.at:584' \
  "Write cell array with 2D complex double fields" " " 11
at_xfail=no
(
  $as_echo "898. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:585: \$builddir/test_mat -v 5 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 write_cell_complex_2d_numeric" "mat5_uncompressed_write.at:585"
( $at_check_trace; $builddir/test_mat -v 5 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:585"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:586: cp \$srcdir/results/write_cell_complex_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:586"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:586"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:588" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:588"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:589: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:589"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:589"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_898
#AT_START_899
at_fn_group_banner 899 'mat5_uncompressed_write.at:593' \
  "Write cell array with 2D complex single fields" " " 11
at_xfail=no
(
  $as_echo "899. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:594: \$builddir/test_mat -v 5 -c single write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c single write_cell_complex_2d_numeric" "mat5_uncompressed_write.at:594"
( $at_check_trace; $builddir/test_mat -v 5 -c single write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:594"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:595: cp \$srcdir/results/write_cell_complex_2d_numeric-single.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:595"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-single.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:595"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:597" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:597"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:598: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='single';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:598"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='single';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:598"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_899
#AT_START_900
at_fn_group_banner 900 'mat5_uncompressed_write.at:602' \
  "Write cell array with 2D complex int64 fields" "  " 11
at_xfail=no
(
  $as_echo "900. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_uncompressed_write.at:603" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:603"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:604: \$builddir/test_mat -v 5 -c int64 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c int64 write_cell_complex_2d_numeric" "mat5_uncompressed_write.at:604"
( $at_check_trace; $builddir/test_mat -v 5 -c int64 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:604"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:605: cp \$srcdir/results/write_cell_complex_2d_numeric-int64.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:605"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-int64.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:605"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:607" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:607"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:608: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int64';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:608"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int64';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:608"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_900
#AT_START_901
at_fn_group_banner 901 'mat5_uncompressed_write.at:612' \
  "Write cell array with 2D complex uint64 fields" " " 11
at_xfail=no
(
  $as_echo "901. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_uncompressed_write.at:613" >"$at_check_line_file"
(test $HAVE_UINT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:613"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:614: \$builddir/test_mat -v 5 -c uint64 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c uint64 write_cell_complex_2d_numeric" "mat5_uncompressed_write.at:614"
( $at_check_trace; $builddir/test_mat -v 5 -c uint64 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:614"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:615: cp \$srcdir/results/write_cell_complex_2d_numeric-uint64.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:615"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-uint64.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:615"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:617" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:617"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:618: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint64';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:618"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint64';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:618"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_901
#AT_START_902
at_fn_group_banner 902 'mat5_uncompressed_write.at:622' \
  "Write cell array with 2D complex int32 fields" "  " 11
at_xfail=no
(
  $as_echo "902. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:623: \$builddir/test_mat -v 5 -c int32 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c int32 write_cell_complex_2d_numeric" "mat5_uncompressed_write.at:623"
( $at_check_trace; $builddir/test_mat -v 5 -c int32 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:623"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:624: cp \$srcdir/results/write_cell_complex_2d_numeric-int32.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:624"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-int32.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:624"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:626" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:626"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:627: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int32';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:627"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int32';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:627"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_902
#AT_START_903
at_fn_group_banner 903 'mat5_uncompressed_write.at:631' \
  "Write cell array with 2D complex uint32 fields" " " 11
at_xfail=no
(
  $as_echo "903. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:632: \$builddir/test_mat -v 5 -c uint32 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c uint32 write_cell_complex_2d_numeric" "mat5_uncompressed_write.at:632"
( $at_check_trace; $builddir/test_mat -v 5 -c uint32 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:632"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:633: cp \$srcdir/results/write_cell_complex_2d_numeric-uint32.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:633"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-uint32.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:633"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:635" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:635"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:636: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint32';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:636"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint32';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:636"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_903
#AT_START_904
at_fn_group_banner 904 'mat5_uncompressed_write.at:640' \
  "Write cell array with 2D complex int16 fields" "  " 11
at_xfail=no
(
  $as_echo "904. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:641: \$builddir/test_mat -v 5 -c int16 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c int16 write_cell_complex_2d_numeric" "mat5_uncompressed_write.at:641"
( $at_check_trace; $builddir/test_mat -v 5 -c int16 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:641"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:642: cp \$srcdir/results/write_cell_complex_2d_numeric-int16.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:642"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-int16.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:642"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:644" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:644"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:645: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int16';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:645"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int16';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:645"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_904
#AT_START_905
at_fn_group_banner 905 'mat5_uncompressed_write.at:649' \
  "Write cell array with 2D complex uint16 fields" " " 11
at_xfail=no
(
  $as_echo "905. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:650: \$builddir/test_mat -v 5 -c uint16 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c uint16 write_cell_complex_2d_numeric" "mat5_uncompressed_write.at:650"
( $at_check_trace; $builddir/test_mat -v 5 -c uint16 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:650"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:651: cp \$srcdir/results/write_cell_complex_2d_numeric-uint16.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:651"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-uint16.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:651"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:653" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:653"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:654: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint16';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:654"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint16';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:654"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_905
#AT_START_906
at_fn_group_banner 906 'mat5_uncompressed_write.at:658' \
  "Write cell array with 2D complex int8 fields" "   " 11
at_xfail=no
(
  $as_echo "906. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:659: \$builddir/test_mat -v 5 -c int8 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c int8 write_cell_complex_2d_numeric" "mat5_uncompressed_write.at:659"
( $at_check_trace; $builddir/test_mat -v 5 -c int8 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:659"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:660: cp \$srcdir/results/write_cell_complex_2d_numeric-int8.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:660"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-int8.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:660"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:662" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:662"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:663: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int8';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:663"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int8';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:663"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_906
#AT_START_907
at_fn_group_banner 907 'mat5_uncompressed_write.at:667' \
  "Write cell array with 2D complex uint8 fields" "  " 11
at_xfail=no
(
  $as_echo "907. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:668: \$builddir/test_mat -v 5 -c uint8 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c uint8 write_cell_complex_2d_numeric" "mat5_uncompressed_write.at:668"
( $at_check_trace; $builddir/test_mat -v 5 -c uint8 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:668"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:669: cp \$srcdir/results/write_cell_complex_2d_numeric-uint8.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:669"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-uint8.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:669"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:671" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:671"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:672: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint8';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:672"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint8';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:672"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_907
#AT_START_908
at_fn_group_banner 908 'mat5_uncompressed_write.at:676' \
  "Write cell array with 2D logical fields" "        " 11
at_xfail=no
(
  $as_echo "908. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:677: \$builddir/test_mat -v 5 write_cell_2d_logical"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 write_cell_2d_logical" "mat5_uncompressed_write.at:677"
( $at_check_trace; $builddir/test_mat -v 5 write_cell_2d_logical
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:677"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:678: cp \$srcdir/results/write_cell_numeric-logical.out expout
          \$builddir/test_mat readvar test_write_cell_2d_logical.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:678"
( $at_check_trace; cp $srcdir/results/write_cell_numeric-logical.out expout
          $builddir/test_mat readvar test_write_cell_2d_logical.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:678"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:680" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:680"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:681: cp \$srcdir/matlab/test_write_cell_2d_logical.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_cell_2d_logical\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:681"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_logical.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_cell_2d_logical" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:681"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_908
#AT_START_909
at_fn_group_banner 909 'mat5_uncompressed_write.at:685' \
  "Write cell array with empty struct fields" "      " 11
at_xfail=no
(
  $as_echo "909. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:687: \$builddir/test_mat -v 5 write_cell_empty_struct"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 write_cell_empty_struct" "mat5_uncompressed_write.at:687"
( $at_check_trace; $builddir/test_mat -v 5 write_cell_empty_struct
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:687"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:688: cp \$srcdir/results/readvar-write_cell_empty_struct-var1.out expout
          \$builddir/test_mat readvar test_write_cell_empty_struct.mat var1"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:688"
( $at_check_trace; cp $srcdir/results/readvar-write_cell_empty_struct-var1.out expout
          $builddir/test_mat readvar test_write_cell_empty_struct.mat var1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:688"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_uncompressed_write.at:690" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_write.at:690"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_write.at:691: cp \$srcdir/matlab/test_write_cell_empty_struct.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_cell_empty_struct\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_write.at:691"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_empty_struct.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_cell_empty_struct" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_write.at:691"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_909
#AT_START_910
at_fn_group_banner 910 'mat5_uncompressed_readwrite.at:27' \
  "Copy variables" "                                 " 12
at_xfail=no
(
  $as_echo "910. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_uncompressed_readwrite.at:29" >"$at_check_line_file"
(! grep -q "#define SIZEOF_VOID_P 4" $abs_top_builddir/src/matioConfig.h) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_readwrite.at:29"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:30: \$builddir/test_mat -v 5 copy \$srcdir/datasets/matio_test_cases_uncompressed_le.mat"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 copy $srcdir/datasets/matio_test_cases_uncompressed_le.mat" "mat5_uncompressed_readwrite.at:30"
( $at_check_trace; $builddir/test_mat -v 5 copy $srcdir/datasets/matio_test_cases_uncompressed_le.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:30"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:31: cp \$srcdir/results/dump-mat_copy-5_32.out expout
          \$builddir/../tools/matdump -f whos -h -d test_mat_copy.mat"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readwrite.at:31"
( $at_check_trace; cp $srcdir/results/dump-mat_copy-5_32.out expout
          $builddir/../tools/matdump -f whos -h -d test_mat_copy.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:31"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_910
#AT_START_911
at_fn_group_banner 911 'mat5_uncompressed_readwrite.at:35' \
  "Copy variables" "                                 " 12
at_xfail=no
(
  $as_echo "911. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_uncompressed_readwrite.at:37" >"$at_check_line_file"
(! grep -q "#define SIZEOF_VOID_P 8" $abs_top_builddir/src/matioConfig.h) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_readwrite.at:37"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:38: \$builddir/test_mat -v 5 copy \$srcdir/datasets/matio_test_cases_uncompressed_le.mat"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 copy $srcdir/datasets/matio_test_cases_uncompressed_le.mat" "mat5_uncompressed_readwrite.at:38"
( $at_check_trace; $builddir/test_mat -v 5 copy $srcdir/datasets/matio_test_cases_uncompressed_le.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:38"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:39: cp \$srcdir/results/dump-mat_copy-5.out expout
          \$builddir/../tools/matdump -f whos -h -d test_mat_copy.mat"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readwrite.at:39"
( $at_check_trace; cp $srcdir/results/dump-mat_copy-5.out expout
          $builddir/../tools/matdump -f whos -h -d test_mat_copy.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:39"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_911
#AT_START_912
at_fn_group_banner 912 'mat5_uncompressed_readwrite.at:43' \
  "Delete variables" "                               " 12
at_xfail=no
(
  $as_echo "912. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:45: \$builddir/test_mat -v 5 copy \$srcdir/datasets/matio_test_cases_uncompressed_be.mat"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 copy $srcdir/datasets/matio_test_cases_uncompressed_be.mat" "mat5_uncompressed_readwrite.at:45"
( $at_check_trace; $builddir/test_mat -v 5 copy $srcdir/datasets/matio_test_cases_uncompressed_be.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:45"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:46: \$builddir/test_mat delete test_mat_copy.mat var2"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var2" "mat5_uncompressed_readwrite.at:46"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:46"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:47: \$builddir/test_mat delete test_mat_copy.mat var3"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var3" "mat5_uncompressed_readwrite.at:47"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var3
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:47"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:48: \$builddir/test_mat delete test_mat_copy.mat var4"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var4" "mat5_uncompressed_readwrite.at:48"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var4
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:48"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:49: \$builddir/test_mat delete test_mat_copy.mat var5"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var5" "mat5_uncompressed_readwrite.at:49"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var5
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:49"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:50: \$builddir/test_mat delete test_mat_copy.mat var6"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var6" "mat5_uncompressed_readwrite.at:50"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var6
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:50"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:51: \$builddir/test_mat delete test_mat_copy.mat var7"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var7" "mat5_uncompressed_readwrite.at:51"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var7
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:51"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:52: \$builddir/test_mat delete test_mat_copy.mat var8"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var8" "mat5_uncompressed_readwrite.at:52"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var8
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:52"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:53: \$builddir/test_mat delete test_mat_copy.mat var9"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var9" "mat5_uncompressed_readwrite.at:53"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var9
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:53"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:54: \$builddir/test_mat delete test_mat_copy.mat var10"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var10" "mat5_uncompressed_readwrite.at:54"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var10
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:54"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:55: \$builddir/test_mat delete test_mat_copy.mat var11"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var11" "mat5_uncompressed_readwrite.at:55"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var11
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:55"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:56: \$builddir/test_mat delete test_mat_copy.mat var12"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var12" "mat5_uncompressed_readwrite.at:56"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var12
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:56"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:57: \$builddir/test_mat delete test_mat_copy.mat var13"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var13" "mat5_uncompressed_readwrite.at:57"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var13
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:57"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:58: \$builddir/test_mat delete test_mat_copy.mat var14"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var14" "mat5_uncompressed_readwrite.at:58"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var14
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:58"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:59: \$builddir/test_mat delete test_mat_copy.mat var15"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var15" "mat5_uncompressed_readwrite.at:59"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var15
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:59"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:60: \$builddir/test_mat delete test_mat_copy.mat var16"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var16" "mat5_uncompressed_readwrite.at:60"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var16
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:60"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:61: \$builddir/test_mat delete test_mat_copy.mat var17"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var17" "mat5_uncompressed_readwrite.at:61"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var17
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:61"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:62: \$builddir/test_mat delete test_mat_copy.mat var18"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var18" "mat5_uncompressed_readwrite.at:62"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var18
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:62"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:63: \$builddir/test_mat delete test_mat_copy.mat var19"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var19" "mat5_uncompressed_readwrite.at:63"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var19
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:63"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:64: \$builddir/test_mat delete test_mat_copy.mat var20"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var20" "mat5_uncompressed_readwrite.at:64"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var20
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:64"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:65: \$builddir/test_mat delete test_mat_copy.mat var21"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var21" "mat5_uncompressed_readwrite.at:65"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var21
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:65"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:66: \$builddir/test_mat delete test_mat_copy.mat var22"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var22" "mat5_uncompressed_readwrite.at:66"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var22
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:66"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:67: \$builddir/test_mat delete test_mat_copy.mat var23"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var23" "mat5_uncompressed_readwrite.at:67"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var23
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:67"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:68: \$builddir/test_mat delete test_mat_copy.mat var25"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var25" "mat5_uncompressed_readwrite.at:68"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var25
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:68"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:69: \$builddir/test_mat delete test_mat_copy.mat var26"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var26" "mat5_uncompressed_readwrite.at:69"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var26
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:69"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:70: \$builddir/test_mat delete test_mat_copy.mat var27"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var27" "mat5_uncompressed_readwrite.at:70"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var27
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:70"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:71: \$builddir/test_mat delete test_mat_copy.mat var28"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var28" "mat5_uncompressed_readwrite.at:71"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var28
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:71"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:72: \$builddir/test_mat delete test_mat_copy.mat var29"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var29" "mat5_uncompressed_readwrite.at:72"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var29
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:72"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:73: \$builddir/test_mat delete test_mat_copy.mat var30"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var30" "mat5_uncompressed_readwrite.at:73"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var30
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:73"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:74: \$builddir/test_mat delete test_mat_copy.mat var31"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var31" "mat5_uncompressed_readwrite.at:74"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var31
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:74"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:75: \$builddir/test_mat delete test_mat_copy.mat var32"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var32" "mat5_uncompressed_readwrite.at:75"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var32
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:75"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:76: \$builddir/test_mat delete test_mat_copy.mat var33"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var33" "mat5_uncompressed_readwrite.at:76"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var33
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:76"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:77: \$builddir/test_mat delete test_mat_copy.mat var34"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var34" "mat5_uncompressed_readwrite.at:77"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var34
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:77"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:78: \$builddir/test_mat delete test_mat_copy.mat var35"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var35" "mat5_uncompressed_readwrite.at:78"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var35
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:78"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:79: \$builddir/test_mat delete test_mat_copy.mat var36"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var36" "mat5_uncompressed_readwrite.at:79"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var36
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:79"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:80: \$builddir/test_mat delete test_mat_copy.mat var37"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var37" "mat5_uncompressed_readwrite.at:80"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var37
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:80"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:81: \$builddir/test_mat delete test_mat_copy.mat var38"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var38" "mat5_uncompressed_readwrite.at:81"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var38
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:81"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:82: \$builddir/test_mat delete test_mat_copy.mat var39"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var39" "mat5_uncompressed_readwrite.at:82"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var39
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:82"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:83: \$builddir/test_mat delete test_mat_copy.mat var40"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var40" "mat5_uncompressed_readwrite.at:83"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var40
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:83"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:84: \$builddir/test_mat delete test_mat_copy.mat var41"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var41" "mat5_uncompressed_readwrite.at:84"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var41
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:84"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:85: \$builddir/test_mat delete test_mat_copy.mat var42"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var42" "mat5_uncompressed_readwrite.at:85"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var42
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:85"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:86: \$builddir/test_mat delete test_mat_copy.mat var43"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var43" "mat5_uncompressed_readwrite.at:86"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var43
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:86"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:87: \$builddir/test_mat delete test_mat_copy.mat var44"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var44" "mat5_uncompressed_readwrite.at:87"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var44
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:87"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:88: \$builddir/test_mat delete test_mat_copy.mat var45"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var45" "mat5_uncompressed_readwrite.at:88"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var45
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:88"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:89: \$builddir/test_mat delete test_mat_copy.mat var46"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var46" "mat5_uncompressed_readwrite.at:89"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var46
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:89"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:90: \$builddir/test_mat delete test_mat_copy.mat var47"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var47" "mat5_uncompressed_readwrite.at:90"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var47
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:90"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:91: \$builddir/test_mat delete test_mat_copy.mat var48"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var48" "mat5_uncompressed_readwrite.at:91"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var48
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:91"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:92: \$builddir/test_mat delete test_mat_copy.mat var49"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var49" "mat5_uncompressed_readwrite.at:92"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var49
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:92"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:93: \$builddir/test_mat delete test_mat_copy.mat var50"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var50" "mat5_uncompressed_readwrite.at:93"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var50
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:93"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:94: \$builddir/test_mat delete test_mat_copy.mat var51"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var51" "mat5_uncompressed_readwrite.at:94"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var51
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:94"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:95: \$builddir/test_mat delete test_mat_copy.mat var52"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var52" "mat5_uncompressed_readwrite.at:95"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var52
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:95"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:96: \$builddir/test_mat delete test_mat_copy.mat var53"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var53" "mat5_uncompressed_readwrite.at:96"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var53
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:96"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:97: \$builddir/test_mat delete test_mat_copy.mat var54"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var54" "mat5_uncompressed_readwrite.at:97"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var54
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:97"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:98: \$builddir/test_mat delete test_mat_copy.mat var55"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var55" "mat5_uncompressed_readwrite.at:98"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var55
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:98"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:99: \$builddir/test_mat delete test_mat_copy.mat var56"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var56" "mat5_uncompressed_readwrite.at:99"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var56
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:99"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:100: \$builddir/test_mat delete test_mat_copy.mat var57"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var57" "mat5_uncompressed_readwrite.at:100"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var57
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:100"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:101: \$builddir/test_mat delete test_mat_copy.mat var58"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var58" "mat5_uncompressed_readwrite.at:101"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var58
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:101"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:102: \$builddir/test_mat delete test_mat_copy.mat var59"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var59" "mat5_uncompressed_readwrite.at:102"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var59
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:102"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:103: \$builddir/test_mat delete test_mat_copy.mat var60"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var60" "mat5_uncompressed_readwrite.at:103"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var60
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:103"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:104: \$builddir/test_mat delete test_mat_copy.mat var61"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var61" "mat5_uncompressed_readwrite.at:104"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var61
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:104"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:105: \$builddir/test_mat delete test_mat_copy.mat var62"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var62" "mat5_uncompressed_readwrite.at:105"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var62
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:105"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:106: \$builddir/test_mat delete test_mat_copy.mat var63"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var63" "mat5_uncompressed_readwrite.at:106"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var63
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:106"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:107: \$builddir/test_mat delete test_mat_copy.mat var64"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var64" "mat5_uncompressed_readwrite.at:107"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var64
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:107"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:108: \$builddir/test_mat delete test_mat_copy.mat var65"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var65" "mat5_uncompressed_readwrite.at:108"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var65
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:108"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:109: \$builddir/test_mat delete test_mat_copy.mat var66"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var66" "mat5_uncompressed_readwrite.at:109"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var66
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:109"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:110: \$builddir/test_mat delete test_mat_copy.mat var67"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var67" "mat5_uncompressed_readwrite.at:110"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var67
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:110"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:111: \$builddir/test_mat delete test_mat_copy.mat var68"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var68" "mat5_uncompressed_readwrite.at:111"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var68
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:111"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:112: \$builddir/test_mat delete test_mat_copy.mat var69"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var69" "mat5_uncompressed_readwrite.at:112"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var69
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:112"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:113: \$builddir/test_mat delete test_mat_copy.mat var70"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var70" "mat5_uncompressed_readwrite.at:113"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var70
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:113"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:114: \$builddir/test_mat delete test_mat_copy.mat var71"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var71" "mat5_uncompressed_readwrite.at:114"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var71
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:114"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:115: \$builddir/test_mat delete test_mat_copy.mat var72"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var72" "mat5_uncompressed_readwrite.at:115"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var72
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:115"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:116: \$builddir/test_mat delete test_mat_copy.mat var73"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var73" "mat5_uncompressed_readwrite.at:116"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var73
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:116"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:117: \$builddir/test_mat delete test_mat_copy.mat var74"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var74" "mat5_uncompressed_readwrite.at:117"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var74
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:117"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:118: \$builddir/test_mat delete test_mat_copy.mat var75"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var75" "mat5_uncompressed_readwrite.at:118"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var75
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:118"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:119: \$builddir/test_mat delete test_mat_copy.mat var76"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var76" "mat5_uncompressed_readwrite.at:119"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var76
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:119"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:120: \$builddir/test_mat delete test_mat_copy.mat var77"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var77" "mat5_uncompressed_readwrite.at:120"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var77
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:120"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:121: \$builddir/test_mat delete test_mat_copy.mat var78"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var78" "mat5_uncompressed_readwrite.at:121"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var78
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:121"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:122: \$builddir/test_mat delete test_mat_copy.mat var79"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var79" "mat5_uncompressed_readwrite.at:122"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var79
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:122"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:123: \$builddir/test_mat delete test_mat_copy.mat var80"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var80" "mat5_uncompressed_readwrite.at:123"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var80
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:123"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:124: \$builddir/test_mat delete test_mat_copy.mat var81"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var81" "mat5_uncompressed_readwrite.at:124"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var81
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:124"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:125: \$builddir/test_mat delete test_mat_copy.mat var82"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var82" "mat5_uncompressed_readwrite.at:125"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var82
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:125"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:126: \$builddir/test_mat delete test_mat_copy.mat var83"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var83" "mat5_uncompressed_readwrite.at:126"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var83
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:126"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:127: \$builddir/test_mat delete test_mat_copy.mat var84"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var84" "mat5_uncompressed_readwrite.at:127"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var84
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:127"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:128: \$builddir/test_mat delete test_mat_copy.mat var85"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var85" "mat5_uncompressed_readwrite.at:128"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var85
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:128"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:129: \$builddir/test_mat delete test_mat_copy.mat var86"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var86" "mat5_uncompressed_readwrite.at:129"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var86
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:129"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:130: \$builddir/test_mat delete test_mat_copy.mat var87"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var87" "mat5_uncompressed_readwrite.at:130"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var87
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:130"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:131: \$builddir/test_mat delete test_mat_copy.mat var88"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var88" "mat5_uncompressed_readwrite.at:131"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var88
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:131"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:132: \$builddir/test_mat delete test_mat_copy.mat var89"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var89" "mat5_uncompressed_readwrite.at:132"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var89
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:132"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:133: \$builddir/test_mat delete test_mat_copy.mat var90"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var90" "mat5_uncompressed_readwrite.at:133"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var90
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:133"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:134: \$builddir/test_mat delete test_mat_copy.mat var91"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var91" "mat5_uncompressed_readwrite.at:134"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var91
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:134"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:135: \$builddir/test_mat delete test_mat_copy.mat var92"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var92" "mat5_uncompressed_readwrite.at:135"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var92
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:135"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:136: cp \$srcdir/results/dump-mat_copy-partial.out expout
          \$builddir/../tools/matdump -f whos -h -d test_mat_copy.mat"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_readwrite.at:136"
( $at_check_trace; cp $srcdir/results/dump-mat_copy-partial.out expout
          $builddir/../tools/matdump -f whos -h -d test_mat_copy.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:136"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:138: \$builddir/test_mat delete test_mat_copy.mat var1"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var1" "mat5_uncompressed_readwrite.at:138"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:138"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_readwrite.at:139: \$builddir/test_mat delete test_mat_copy.mat var24"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var24" "mat5_uncompressed_readwrite.at:139"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var24
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_readwrite.at:139"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_912
#AT_START_913
at_fn_group_banner 913 'mat5_compressed_write.at:27' \
  "Write 2D double array" "                          " 13
at_xfail=no
(
  $as_echo "913. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:28" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:28"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:29: \$builddir/test_mat -v 5 -z -c double write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c double write_2d_numeric" "mat5_compressed_write.at:29"
( $at_check_trace; $builddir/test_mat -v 5 -z -c double write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:29"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:30: cp \$srcdir/results/write_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:30"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:30"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:32" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:32"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:33: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:33"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:33"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_913
#AT_START_914
at_fn_group_banner 914 'mat5_compressed_write.at:37' \
  "Write 2D single array" "                          " 13
at_xfail=no
(
  $as_echo "914. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:38" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:38"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:39: \$builddir/test_mat -v 5 -z -c single write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c single write_2d_numeric" "mat5_compressed_write.at:39"
( $at_check_trace; $builddir/test_mat -v 5 -z -c single write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:39"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:40: cp \$srcdir/results/write_2d_numeric-single.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:40"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-single.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:40"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:42" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:42"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:43: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='single';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:43"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='single';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:43"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_914
#AT_START_915
at_fn_group_banner 915 'mat5_compressed_write.at:47' \
  "Write 2D int64 array" "                           " 13
at_xfail=no
(
  $as_echo "915. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:48" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:48"
$as_echo "mat5_compressed_write.at:49" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:49"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:50: \$builddir/test_mat -v 5 -z -c int64 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c int64 write_2d_numeric" "mat5_compressed_write.at:50"
( $at_check_trace; $builddir/test_mat -v 5 -z -c int64 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:50"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:51: cp \$srcdir/results/write_2d_numeric-int64.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:51"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-int64.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:51"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:53" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:53"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:54: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int64';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:54"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int64';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:54"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_915
#AT_START_916
at_fn_group_banner 916 'mat5_compressed_write.at:58' \
  "Write 2D uint64 array" "                          " 13
at_xfail=no
(
  $as_echo "916. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:59" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:59"
$as_echo "mat5_compressed_write.at:60" >"$at_check_line_file"
(test $HAVE_UINT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:60"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:61: \$builddir/test_mat -v 5 -z -c uint64 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c uint64 write_2d_numeric" "mat5_compressed_write.at:61"
( $at_check_trace; $builddir/test_mat -v 5 -z -c uint64 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:61"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:62: cp \$srcdir/results/write_2d_numeric-uint64.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:62"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-uint64.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:62"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:64" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:64"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:65: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint64';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:65"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint64';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:65"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_916
#AT_START_917
at_fn_group_banner 917 'mat5_compressed_write.at:69' \
  "Write 2D int32 array" "                           " 13
at_xfail=no
(
  $as_echo "917. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:70" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:70"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:71: \$builddir/test_mat -v 5 -z -c int32 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c int32 write_2d_numeric" "mat5_compressed_write.at:71"
( $at_check_trace; $builddir/test_mat -v 5 -z -c int32 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:71"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:72: cp \$srcdir/results/write_2d_numeric-int32.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:72"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-int32.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:72"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:74" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:74"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:75: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int32';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:75"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int32';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:75"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_917
#AT_START_918
at_fn_group_banner 918 'mat5_compressed_write.at:79' \
  "Write 2D uint32 array" "                          " 13
at_xfail=no
(
  $as_echo "918. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:80" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:80"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:81: \$builddir/test_mat -v 5 -z -c uint32 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c uint32 write_2d_numeric" "mat5_compressed_write.at:81"
( $at_check_trace; $builddir/test_mat -v 5 -z -c uint32 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:81"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:82: cp \$srcdir/results/write_2d_numeric-uint32.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:82"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-uint32.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:82"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:84" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:84"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:85: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint32';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:85"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint32';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:85"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_918
#AT_START_919
at_fn_group_banner 919 'mat5_compressed_write.at:89' \
  "Write 2D int16 array" "                           " 13
at_xfail=no
(
  $as_echo "919. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:90" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:90"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:91: \$builddir/test_mat -v 5 -z -c int16 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c int16 write_2d_numeric" "mat5_compressed_write.at:91"
( $at_check_trace; $builddir/test_mat -v 5 -z -c int16 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:91"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:92: cp \$srcdir/results/write_2d_numeric-int16.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:92"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-int16.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:92"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:94" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:94"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:95: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int16';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:95"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int16';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:95"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_919
#AT_START_920
at_fn_group_banner 920 'mat5_compressed_write.at:99' \
  "Write 2D uint16 array" "                          " 13
at_xfail=no
(
  $as_echo "920. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:100" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:100"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:101: \$builddir/test_mat -v 5 -z -c uint16 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c uint16 write_2d_numeric" "mat5_compressed_write.at:101"
( $at_check_trace; $builddir/test_mat -v 5 -z -c uint16 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:101"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:102: cp \$srcdir/results/write_2d_numeric-uint16.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:102"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-uint16.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:102"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:104" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:104"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:105: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint16';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:105"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint16';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:105"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_920
#AT_START_921
at_fn_group_banner 921 'mat5_compressed_write.at:109' \
  "Write 2D int8 array" "                            " 13
at_xfail=no
(
  $as_echo "921. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:110" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:110"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:111: \$builddir/test_mat -v 5 -z -c int8 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c int8 write_2d_numeric" "mat5_compressed_write.at:111"
( $at_check_trace; $builddir/test_mat -v 5 -z -c int8 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:111"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:112: cp \$srcdir/results/write_2d_numeric-int8.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:112"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-int8.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:112"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:114" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:114"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:115: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int8';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:115"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int8';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:115"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_921
#AT_START_922
at_fn_group_banner 922 'mat5_compressed_write.at:119' \
  "Write 2D uint8 array" "                           " 13
at_xfail=no
(
  $as_echo "922. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:120" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:120"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:121: \$builddir/test_mat -v 5 -z -c uint8 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c uint8 write_2d_numeric" "mat5_compressed_write.at:121"
( $at_check_trace; $builddir/test_mat -v 5 -z -c uint8 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:121"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:122: cp \$srcdir/results/write_2d_numeric-uint8.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:122"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-uint8.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:122"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:124" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:124"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:125: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint8';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:125"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint8';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:125"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_922
#AT_START_923
at_fn_group_banner 923 'mat5_compressed_write.at:129' \
  "Write 2D complex double array" "                  " 13
at_xfail=no
(
  $as_echo "923. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:130" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:130"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:131: \$builddir/test_mat -v 5 -z -c double write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c double write_complex_2d_numeric" "mat5_compressed_write.at:131"
( $at_check_trace; $builddir/test_mat -v 5 -z -c double write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:131"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:132: cp \$srcdir/results/write_complex_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:132"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:132"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:134" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:134"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:135: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:135"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:135"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_923
#AT_START_924
at_fn_group_banner 924 'mat5_compressed_write.at:139' \
  "Write 2D complex single array" "                  " 13
at_xfail=no
(
  $as_echo "924. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:140" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:140"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:141: \$builddir/test_mat -v 5 -z -c single write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c single write_complex_2d_numeric" "mat5_compressed_write.at:141"
( $at_check_trace; $builddir/test_mat -v 5 -z -c single write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:141"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:142: cp \$srcdir/results/write_complex_2d_numeric-single.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:142"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-single.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:142"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:144" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:144"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:145: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='single';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:145"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='single';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:145"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_924
#AT_START_925
at_fn_group_banner 925 'mat5_compressed_write.at:149' \
  "Write 2D complex int64 array" "                   " 13
at_xfail=no
(
  $as_echo "925. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:150" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:150"
$as_echo "mat5_compressed_write.at:151" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:151"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:152: \$builddir/test_mat -v 5 -z -c int64 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c int64 write_complex_2d_numeric" "mat5_compressed_write.at:152"
( $at_check_trace; $builddir/test_mat -v 5 -z -c int64 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:152"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:153: cp \$srcdir/results/write_complex_2d_numeric-int64.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:153"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-int64.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:153"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:155" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:155"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:156: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int64';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:156"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int64';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:156"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_925
#AT_START_926
at_fn_group_banner 926 'mat5_compressed_write.at:160' \
  "Write 2D complex uint64 array" "                  " 13
at_xfail=no
(
  $as_echo "926. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:161" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:161"
$as_echo "mat5_compressed_write.at:162" >"$at_check_line_file"
(test $HAVE_UINT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:162"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:163: \$builddir/test_mat -v 5 -z -c uint64 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c uint64 write_complex_2d_numeric" "mat5_compressed_write.at:163"
( $at_check_trace; $builddir/test_mat -v 5 -z -c uint64 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:163"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:164: cp \$srcdir/results/write_complex_2d_numeric-uint64.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:164"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-uint64.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:164"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:166" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:166"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:167: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint64';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:167"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint64';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:167"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_926
#AT_START_927
at_fn_group_banner 927 'mat5_compressed_write.at:171' \
  "Write 2D complex int32 array" "                   " 13
at_xfail=no
(
  $as_echo "927. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:172" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:172"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:173: \$builddir/test_mat -v 5 -z -c int32 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c int32 write_complex_2d_numeric" "mat5_compressed_write.at:173"
( $at_check_trace; $builddir/test_mat -v 5 -z -c int32 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:173"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:174: cp \$srcdir/results/write_complex_2d_numeric-int32.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:174"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-int32.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:174"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:176" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:176"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:177: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int32';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:177"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int32';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:177"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_927
#AT_START_928
at_fn_group_banner 928 'mat5_compressed_write.at:181' \
  "Write 2D complex uint32 array" "                  " 13
at_xfail=no
(
  $as_echo "928. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:182" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:182"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:183: \$builddir/test_mat -v 5 -z -c uint32 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c uint32 write_complex_2d_numeric" "mat5_compressed_write.at:183"
( $at_check_trace; $builddir/test_mat -v 5 -z -c uint32 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:183"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:184: cp \$srcdir/results/write_complex_2d_numeric-uint32.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:184"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-uint32.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:184"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:186" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:186"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:187: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint32';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:187"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint32';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:187"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_928
#AT_START_929
at_fn_group_banner 929 'mat5_compressed_write.at:191' \
  "Write 2D complex int16 array" "                   " 13
at_xfail=no
(
  $as_echo "929. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:192" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:192"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:193: \$builddir/test_mat -v 5 -z -c int16 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c int16 write_complex_2d_numeric" "mat5_compressed_write.at:193"
( $at_check_trace; $builddir/test_mat -v 5 -z -c int16 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:193"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:194: cp \$srcdir/results/write_complex_2d_numeric-int16.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:194"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-int16.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:194"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:196" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:196"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:197: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int16';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:197"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int16';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:197"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_929
#AT_START_930
at_fn_group_banner 930 'mat5_compressed_write.at:201' \
  "Write 2D complex uint16 array" "                  " 13
at_xfail=no
(
  $as_echo "930. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:202" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:202"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:203: \$builddir/test_mat -v 5 -z -c uint16 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c uint16 write_complex_2d_numeric" "mat5_compressed_write.at:203"
( $at_check_trace; $builddir/test_mat -v 5 -z -c uint16 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:203"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:204: cp \$srcdir/results/write_complex_2d_numeric-uint16.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:204"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-uint16.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:204"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:206" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:206"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:207: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint16';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:207"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint16';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:207"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_930
#AT_START_931
at_fn_group_banner 931 'mat5_compressed_write.at:211' \
  "Write 2D complex int8 array" "                    " 13
at_xfail=no
(
  $as_echo "931. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:212" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:212"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:213: \$builddir/test_mat -v 5 -z -c int8 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c int8 write_complex_2d_numeric" "mat5_compressed_write.at:213"
( $at_check_trace; $builddir/test_mat -v 5 -z -c int8 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:213"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:214: cp \$srcdir/results/write_complex_2d_numeric-int8.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:214"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-int8.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:214"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:216" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:216"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:217: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int8';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:217"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int8';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:217"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_931
#AT_START_932
at_fn_group_banner 932 'mat5_compressed_write.at:221' \
  "Write 2D complex uint8 array" "                   " 13
at_xfail=no
(
  $as_echo "932. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:222" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:222"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:223: \$builddir/test_mat -v 5 -z -c uint8 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c uint8 write_complex_2d_numeric" "mat5_compressed_write.at:223"
( $at_check_trace; $builddir/test_mat -v 5 -z -c uint8 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:223"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:224: cp \$srcdir/results/write_complex_2d_numeric-uint8.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:224"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-uint8.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:224"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:226" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:226"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:227: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint8';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:227"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint8';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:227"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_932
#AT_START_933
at_fn_group_banner 933 'mat5_compressed_write.at:231' \
  "Write 2D logical array" "                         " 13
at_xfail=no
(
  $as_echo "933. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:232" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:232"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:233: \$builddir/test_mat -v 5 -z write_2d_logical"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z write_2d_logical" "mat5_compressed_write.at:233"
( $at_check_trace; $builddir/test_mat -v 5 -z write_2d_logical
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:233"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:234: cp \$srcdir/results/write_2d_numeric-l1-logical.out expout
          \$builddir/test_mat readvar test_write_2d_logical.mat l1"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:234"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-l1-logical.out expout
          $builddir/test_mat readvar test_write_2d_logical.mat l1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:234"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:236: cp \$srcdir/results/write_2d_numeric-l2-logical.out expout
          \$builddir/test_mat readvar test_write_2d_logical.mat l2"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:236"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-l2-logical.out expout
          $builddir/test_mat readvar test_write_2d_logical.mat l2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:236"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:238: cp \$srcdir/results/write_2d_numeric-l4-logical.out expout
          \$builddir/test_mat readvar test_write_2d_logical.mat l4"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:238"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-l4-logical.out expout
          $builddir/test_mat readvar test_write_2d_logical.mat l4
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:238"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:240" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:240"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:241: cp \$srcdir/matlab/test_write_2d_logical.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_2d_logical\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:241"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_logical.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_2d_logical" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:241"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_933
#AT_START_934
at_fn_group_banner 934 'mat5_compressed_write.at:245' \
  "Write 2D sparse double array" "                   " 13
at_xfail=no
(
  $as_echo "934. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:246" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:246"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:247: \$builddir/test_mat -v 5 -z -c double write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c double write_sparse" "mat5_compressed_write.at:247"
( $at_check_trace; $builddir/test_mat -v 5 -z -c double write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:247"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:248: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-double.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:248"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-double.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:248"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:250" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:250"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:251: cp \$srcdir/matlab/test_write_sparse.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_sparse\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:251"
( $at_check_trace; cp $srcdir/matlab/test_write_sparse.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_sparse" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:251"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_934
#AT_START_935
at_fn_group_banner 935 'mat5_compressed_write.at:255' \
  "Write 2D sparse complex double array" "           " 13
at_xfail=no
(
  $as_echo "935. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:256" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:256"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:257: \$builddir/test_mat -v 5 -z -c double write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c double write_complex_sparse" "mat5_compressed_write.at:257"
( $at_check_trace; $builddir/test_mat -v 5 -z -c double write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:257"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:258: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-double.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:258"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-double.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:258"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:260" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:260"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:261: cp \$srcdir/matlab/test_write_sparse_complex.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_sparse_complex\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:261"
( $at_check_trace; cp $srcdir/matlab/test_write_sparse_complex.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_sparse_complex" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:261"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_935
#AT_START_936
at_fn_group_banner 936 'mat5_compressed_write.at:265' \
  "Write 2D empty array" "                           " 13
at_xfail=no
(
  $as_echo "936. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_write.at:267" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:267"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:268: \$builddir/test_mat -v 5 -z -c double write_empty_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c double write_empty_2d_numeric" "mat5_compressed_write.at:268"
( $at_check_trace; $builddir/test_mat -v 5 -z -c double write_empty_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:268"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:269: cp \$srcdir/results/readvar-write_empty_2d_numeric-empty.out expout
          \$builddir/test_mat readvar test_write_empty_2d_numeric.mat empty"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:269"
( $at_check_trace; cp $srcdir/results/readvar-write_empty_2d_numeric-empty.out expout
          $builddir/test_mat readvar test_write_empty_2d_numeric.mat empty
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:269"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:271" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:271"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:272: cp \$srcdir/matlab/test_write_empty.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_empty\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:272"
( $at_check_trace; cp $srcdir/matlab/test_write_empty.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_empty" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:272"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_936
#AT_START_937
at_fn_group_banner 937 'mat5_compressed_write.at:276' \
  "Write character array" "                          " 13
at_xfail=no
(
  $as_echo "937. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:277" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:277"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:278: \$builddir/test_mat -v 5 -z write_char"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z write_char" "mat5_compressed_write.at:278"
( $at_check_trace; $builddir/test_mat -v 5 -z write_char
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:278"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:279: cp \$srcdir/results/readvar-write_char-a.out expout
          \$builddir/test_mat readvar test_write_char.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:279"
( $at_check_trace; cp $srcdir/results/readvar-write_char-a.out expout
          $builddir/test_mat readvar test_write_char.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:279"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:281" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:281"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:282: cp \$srcdir/matlab/test_write_char.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_char\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:282"
( $at_check_trace; cp $srcdir/matlab/test_write_char.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_char" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:282"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_937
#AT_START_938
at_fn_group_banner 938 'mat5_compressed_write.at:286' \
  "Write empty struct" "                             " 13
at_xfail=no
(
  $as_echo "938. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_write.at:288" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:288"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:289: \$builddir/test_mat -v 5 -z write_empty_struct"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z write_empty_struct" "mat5_compressed_write.at:289"
( $at_check_trace; $builddir/test_mat -v 5 -z write_empty_struct
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:289"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:290: cp \$srcdir/results/readvar-write_empty_struct-var1.out expout
          \$builddir/test_mat readvar test_write_empty_struct.mat var1"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:290"
( $at_check_trace; cp $srcdir/results/readvar-write_empty_struct-var1.out expout
          $builddir/test_mat readvar test_write_empty_struct.mat var1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:290"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:292: cp \$srcdir/results/readvar-write_empty_struct-var2.out expout
          \$builddir/test_mat readvar test_write_empty_struct.mat var2"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:292"
( $at_check_trace; cp $srcdir/results/readvar-write_empty_struct-var2.out expout
          $builddir/test_mat readvar test_write_empty_struct.mat var2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:292"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:294: cp \$srcdir/results/readvar-write_empty_struct-var3.out expout
          \$builddir/test_mat readvar test_write_empty_struct.mat var3"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:294"
( $at_check_trace; cp $srcdir/results/readvar-write_empty_struct-var3.out expout
          $builddir/test_mat readvar test_write_empty_struct.mat var3
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:294"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:296: cp \$srcdir/results/readvar-write_empty_struct-var4.out expout
          \$builddir/test_mat readvar test_write_empty_struct.mat var4"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:296"
( $at_check_trace; cp $srcdir/results/readvar-write_empty_struct-var4.out expout
          $builddir/test_mat readvar test_write_empty_struct.mat var4
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:296"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:298" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:298"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:299: cp \$srcdir/matlab/test_write_empty_struct.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_empty_struct\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:299"
( $at_check_trace; cp $srcdir/matlab/test_write_empty_struct.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_empty_struct" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:299"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_938
#AT_START_939
at_fn_group_banner 939 'mat5_compressed_write.at:303' \
  "Write struct with 2D double fields" "             " 13
at_xfail=no
(
  $as_echo "939. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:304" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:304"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:305: \$builddir/test_mat -v 5 -z write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z write_struct_2d_numeric" "mat5_compressed_write.at:305"
( $at_check_trace; $builddir/test_mat -v 5 -z write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:305"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:306: cp \$srcdir/results/write_struct_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:306"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:306"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:308" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:308"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:309: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:309"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:309"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_939
#AT_START_940
at_fn_group_banner 940 'mat5_compressed_write.at:313' \
  "Write struct with 2D single fields" "             " 13
at_xfail=no
(
  $as_echo "940. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:314" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:314"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:315: \$builddir/test_mat -v 5 -z -c single write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c single write_struct_2d_numeric" "mat5_compressed_write.at:315"
( $at_check_trace; $builddir/test_mat -v 5 -z -c single write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:315"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:316: cp \$srcdir/results/write_struct_2d_numeric-single.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:316"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-single.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:316"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:318" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:318"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:319: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='single';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:319"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='single';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:319"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_940
#AT_START_941
at_fn_group_banner 941 'mat5_compressed_write.at:323' \
  "Write struct with 2D int64 fields" "              " 13
at_xfail=no
(
  $as_echo "941. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:324" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:324"
$as_echo "mat5_compressed_write.at:325" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:325"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:326: \$builddir/test_mat -v 5 -z -c int64 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c int64 write_struct_2d_numeric" "mat5_compressed_write.at:326"
( $at_check_trace; $builddir/test_mat -v 5 -z -c int64 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:326"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:327: cp \$srcdir/results/write_struct_2d_numeric-int64.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:327"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-int64.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:327"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:329" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:329"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:330: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int64';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:330"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int64';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:330"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_941
#AT_START_942
at_fn_group_banner 942 'mat5_compressed_write.at:334' \
  "Write struct with 2D uint64 fields" "             " 13
at_xfail=no
(
  $as_echo "942. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:335" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:335"
$as_echo "mat5_compressed_write.at:336" >"$at_check_line_file"
(test $HAVE_UINT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:336"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:337: \$builddir/test_mat -v 5 -z -c uint64 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c uint64 write_struct_2d_numeric" "mat5_compressed_write.at:337"
( $at_check_trace; $builddir/test_mat -v 5 -z -c uint64 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:337"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:338: cp \$srcdir/results/write_struct_2d_numeric-uint64.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:338"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-uint64.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:338"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:340" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:340"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:341: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint64';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:341"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint64';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:341"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_942
#AT_START_943
at_fn_group_banner 943 'mat5_compressed_write.at:345' \
  "Write struct with 2D int32 fields" "              " 13
at_xfail=no
(
  $as_echo "943. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:346" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:346"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:347: \$builddir/test_mat -v 5 -z -c int32 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c int32 write_struct_2d_numeric" "mat5_compressed_write.at:347"
( $at_check_trace; $builddir/test_mat -v 5 -z -c int32 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:347"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:348: cp \$srcdir/results/write_struct_2d_numeric-int32.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:348"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-int32.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:348"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:350" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:350"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:351: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int32';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:351"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int32';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:351"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_943
#AT_START_944
at_fn_group_banner 944 'mat5_compressed_write.at:355' \
  "Write struct with 2D uint32 fields" "             " 13
at_xfail=no
(
  $as_echo "944. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:356" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:356"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:357: \$builddir/test_mat -v 5 -z -c uint32 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c uint32 write_struct_2d_numeric" "mat5_compressed_write.at:357"
( $at_check_trace; $builddir/test_mat -v 5 -z -c uint32 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:357"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:358: cp \$srcdir/results/write_struct_2d_numeric-uint32.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:358"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-uint32.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:358"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:360" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:360"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:361: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint32';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:361"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint32';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:361"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_944
#AT_START_945
at_fn_group_banner 945 'mat5_compressed_write.at:365' \
  "Write struct with 2D int16 fields" "              " 13
at_xfail=no
(
  $as_echo "945. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:366" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:366"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:367: \$builddir/test_mat -v 5 -z -c int16 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c int16 write_struct_2d_numeric" "mat5_compressed_write.at:367"
( $at_check_trace; $builddir/test_mat -v 5 -z -c int16 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:367"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:368: cp \$srcdir/results/write_struct_2d_numeric-int16.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:368"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-int16.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:368"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:370" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:370"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:371: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int16';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:371"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int16';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:371"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_945
#AT_START_946
at_fn_group_banner 946 'mat5_compressed_write.at:375' \
  "Write struct with 2D uint16 fields" "             " 13
at_xfail=no
(
  $as_echo "946. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:376" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:376"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:377: \$builddir/test_mat -v 5 -z -c uint16 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c uint16 write_struct_2d_numeric" "mat5_compressed_write.at:377"
( $at_check_trace; $builddir/test_mat -v 5 -z -c uint16 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:377"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:378: cp \$srcdir/results/write_struct_2d_numeric-uint16.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:378"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-uint16.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:378"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:380" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:380"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:381: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint16';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:381"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint16';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:381"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_946
#AT_START_947
at_fn_group_banner 947 'mat5_compressed_write.at:385' \
  "Write struct with 2D int8 fields" "               " 13
at_xfail=no
(
  $as_echo "947. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:386" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:386"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:387: \$builddir/test_mat -v 5 -z -c int8 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c int8 write_struct_2d_numeric" "mat5_compressed_write.at:387"
( $at_check_trace; $builddir/test_mat -v 5 -z -c int8 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:387"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:388: cp \$srcdir/results/write_struct_2d_numeric-int8.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:388"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-int8.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:388"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:390" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:390"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:391: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int8';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:391"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int8';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:391"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_947
#AT_START_948
at_fn_group_banner 948 'mat5_compressed_write.at:395' \
  "Write struct with 2D uint8 fields" "              " 13
at_xfail=no
(
  $as_echo "948. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:396" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:396"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:397: \$builddir/test_mat -v 5 -z -c uint8 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c uint8 write_struct_2d_numeric" "mat5_compressed_write.at:397"
( $at_check_trace; $builddir/test_mat -v 5 -z -c uint8 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:397"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:398: cp \$srcdir/results/write_struct_2d_numeric-uint8.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:398"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-uint8.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:398"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:400" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:400"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:401: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint8';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:401"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint8';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:401"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_948
#AT_START_949
at_fn_group_banner 949 'mat5_compressed_write.at:405' \
  "Write struct with 2D complex double fields" "     " 13
at_xfail=no
(
  $as_echo "949. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:406" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:406"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:407: \$builddir/test_mat -v 5 -z write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z write_struct_complex_2d_numeric" "mat5_compressed_write.at:407"
( $at_check_trace; $builddir/test_mat -v 5 -z write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:407"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:408: cp \$srcdir/results/write_struct_complex_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:408"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:408"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:410" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:410"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:411: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:411"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:411"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_949
#AT_START_950
at_fn_group_banner 950 'mat5_compressed_write.at:415' \
  "Write struct with 2D complex single fields" "     " 13
at_xfail=no
(
  $as_echo "950. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:416" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:416"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:417: \$builddir/test_mat -v 5 -z -c single write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c single write_struct_complex_2d_numeric" "mat5_compressed_write.at:417"
( $at_check_trace; $builddir/test_mat -v 5 -z -c single write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:417"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:418: cp \$srcdir/results/write_struct_complex_2d_numeric-single.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:418"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-single.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:418"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:420" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:420"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:421: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='single';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:421"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='single';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:421"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_950
#AT_START_951
at_fn_group_banner 951 'mat5_compressed_write.at:425' \
  "Write struct with 2D complex int64 fields" "      " 13
at_xfail=no
(
  $as_echo "951. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:426" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:426"
$as_echo "mat5_compressed_write.at:427" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:427"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:428: \$builddir/test_mat -v 5 -z -c int64 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c int64 write_struct_complex_2d_numeric" "mat5_compressed_write.at:428"
( $at_check_trace; $builddir/test_mat -v 5 -z -c int64 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:428"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:429: cp \$srcdir/results/write_struct_complex_2d_numeric-int64.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:429"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-int64.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:429"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:431" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:431"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:432: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int64';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:432"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int64';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:432"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_951
#AT_START_952
at_fn_group_banner 952 'mat5_compressed_write.at:436' \
  "Write struct with 2D complex uint64 fields" "     " 13
at_xfail=no
(
  $as_echo "952. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:437" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:437"
$as_echo "mat5_compressed_write.at:438" >"$at_check_line_file"
(test $HAVE_UINT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:438"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:439: \$builddir/test_mat -v 5 -z -c uint64 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c uint64 write_struct_complex_2d_numeric" "mat5_compressed_write.at:439"
( $at_check_trace; $builddir/test_mat -v 5 -z -c uint64 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:439"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:440: cp \$srcdir/results/write_struct_complex_2d_numeric-uint64.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:440"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-uint64.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:440"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:442" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:442"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:443: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint64';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:443"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint64';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:443"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_952
#AT_START_953
at_fn_group_banner 953 'mat5_compressed_write.at:447' \
  "Write struct with 2D complex int32 fields" "      " 13
at_xfail=no
(
  $as_echo "953. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:448" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:448"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:449: \$builddir/test_mat -v 5 -z -c int32 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c int32 write_struct_complex_2d_numeric" "mat5_compressed_write.at:449"
( $at_check_trace; $builddir/test_mat -v 5 -z -c int32 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:449"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:450: cp \$srcdir/results/write_struct_complex_2d_numeric-int32.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:450"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-int32.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:450"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:452" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:452"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:453: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int32';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:453"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int32';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:453"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_953
#AT_START_954
at_fn_group_banner 954 'mat5_compressed_write.at:457' \
  "Write struct with 2D complex uint32 fields" "     " 13
at_xfail=no
(
  $as_echo "954. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:458" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:458"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:459: \$builddir/test_mat -v 5 -z -c uint32 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c uint32 write_struct_complex_2d_numeric" "mat5_compressed_write.at:459"
( $at_check_trace; $builddir/test_mat -v 5 -z -c uint32 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:459"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:460: cp \$srcdir/results/write_struct_complex_2d_numeric-uint32.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:460"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-uint32.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:460"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:462" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:462"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:463: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint32';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:463"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint32';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:463"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_954
#AT_START_955
at_fn_group_banner 955 'mat5_compressed_write.at:467' \
  "Write struct with 2D complex int16 fields" "      " 13
at_xfail=no
(
  $as_echo "955. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:468" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:468"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:469: \$builddir/test_mat -v 5 -z -c int16 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c int16 write_struct_complex_2d_numeric" "mat5_compressed_write.at:469"
( $at_check_trace; $builddir/test_mat -v 5 -z -c int16 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:469"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:470: cp \$srcdir/results/write_struct_complex_2d_numeric-int16.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:470"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-int16.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:470"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:472" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:472"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:473: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int16';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:473"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int16';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:473"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_955
#AT_START_956
at_fn_group_banner 956 'mat5_compressed_write.at:477' \
  "Write struct with 2D complex uint16 fields" "     " 13
at_xfail=no
(
  $as_echo "956. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:478" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:478"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:479: \$builddir/test_mat -v 5 -z -c uint16 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c uint16 write_struct_complex_2d_numeric" "mat5_compressed_write.at:479"
( $at_check_trace; $builddir/test_mat -v 5 -z -c uint16 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:479"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:480: cp \$srcdir/results/write_struct_complex_2d_numeric-uint16.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:480"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-uint16.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:480"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:482" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:482"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:483: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint16';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:483"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint16';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:483"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_956
#AT_START_957
at_fn_group_banner 957 'mat5_compressed_write.at:487' \
  "Write struct with 2D complex int8 fields" "       " 13
at_xfail=no
(
  $as_echo "957. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:488" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:488"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:489: \$builddir/test_mat -v 5 -z -c int8 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c int8 write_struct_complex_2d_numeric" "mat5_compressed_write.at:489"
( $at_check_trace; $builddir/test_mat -v 5 -z -c int8 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:489"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:490: cp \$srcdir/results/write_struct_complex_2d_numeric-int8.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:490"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-int8.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:490"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:492" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:492"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:493: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int8';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:493"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int8';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:493"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_957
#AT_START_958
at_fn_group_banner 958 'mat5_compressed_write.at:497' \
  "Write struct with 2D complex uint8 fields" "      " 13
at_xfail=no
(
  $as_echo "958. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:498" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:498"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:499: \$builddir/test_mat -v 5 -z -c uint8 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c uint8 write_struct_complex_2d_numeric" "mat5_compressed_write.at:499"
( $at_check_trace; $builddir/test_mat -v 5 -z -c uint8 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:499"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:500: cp \$srcdir/results/write_struct_complex_2d_numeric-uint8.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:500"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-uint8.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:500"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:502" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:502"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:503: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint8';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:503"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint8';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:503"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_958
#AT_START_959
at_fn_group_banner 959 'mat5_compressed_write.at:507' \
  "Write struct with 2D logical fields" "            " 13
at_xfail=no
(
  $as_echo "959. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:508" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:508"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:509: \$builddir/test_mat -v 5 -z write_struct_2d_logical"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z write_struct_2d_logical" "mat5_compressed_write.at:509"
( $at_check_trace; $builddir/test_mat -v 5 -z write_struct_2d_logical
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:509"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:510: cp \$srcdir/results/write_struct_2d_numeric-logical.out expout
          \$builddir/test_mat readvar test_write_struct_2d_logical.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:510"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-logical.out expout
          $builddir/test_mat readvar test_write_struct_2d_logical.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:510"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:512" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:512"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:513: cp \$srcdir/matlab/test_write_struct_2d_logical.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_struct_2d_logical\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:513"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_logical.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_struct_2d_logical" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:513"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_959
#AT_START_960
at_fn_group_banner 960 'mat5_compressed_write.at:517' \
  "Write struct with character fields" "             " 13
at_xfail=no
(
  $as_echo "960. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_write.at:519" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:519"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:520: \$builddir/test_mat -v 5 -z write_struct_char"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z write_struct_char" "mat5_compressed_write.at:520"
( $at_check_trace; $builddir/test_mat -v 5 -z write_struct_char
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:520"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:521: cp \$srcdir/results/write_struct_char.out expout
          \$builddir/test_mat readvar test_write_struct_char.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:521"
( $at_check_trace; cp $srcdir/results/write_struct_char.out expout
          $builddir/test_mat readvar test_write_struct_char.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:521"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:523" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:523"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:524: cp \$srcdir/matlab/test_write_struct_char.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_struct_char\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:524"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_char.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_struct_char" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:524"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_960
#AT_START_961
at_fn_group_banner 961 'mat5_compressed_write.at:528' \
  "Write empty cell array" "                         " 13
at_xfail=no
(
  $as_echo "961. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_write.at:530" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:530"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:531: \$builddir/test_mat -v 5 -z write_empty_cell"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z write_empty_cell" "mat5_compressed_write.at:531"
( $at_check_trace; $builddir/test_mat -v 5 -z write_empty_cell
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:531"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:532: cp \$srcdir/results/readvar-write_empty_cell-var1.out expout
          \$builddir/test_mat readvar test_write_empty_cell.mat var1"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:532"
( $at_check_trace; cp $srcdir/results/readvar-write_empty_cell-var1.out expout
          $builddir/test_mat readvar test_write_empty_cell.mat var1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:532"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:534: cp \$srcdir/results/readvar-write_empty_cell-var2.out expout
          \$builddir/test_mat readvar test_write_empty_cell.mat var2"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:534"
( $at_check_trace; cp $srcdir/results/readvar-write_empty_cell-var2.out expout
          $builddir/test_mat readvar test_write_empty_cell.mat var2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:534"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:536" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:536"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:537: cp \$srcdir/matlab/test_write_empty_cell.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_empty_cell\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:537"
( $at_check_trace; cp $srcdir/matlab/test_write_empty_cell.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_empty_cell" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:537"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_961
#AT_START_962
at_fn_group_banner 962 'mat5_compressed_write.at:541' \
  "Write cell array with 2D double fields" "         " 13
at_xfail=no
(
  $as_echo "962. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:542" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:542"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:543: \$builddir/test_mat -v 5 -z write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z write_cell_2d_numeric" "mat5_compressed_write.at:543"
( $at_check_trace; $builddir/test_mat -v 5 -z write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:543"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:544: cp \$srcdir/results/write_cell_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:544"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:544"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:546" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:546"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:547: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:547"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:547"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_962
#AT_START_963
at_fn_group_banner 963 'mat5_compressed_write.at:551' \
  "Write cell array with 2D single fields" "         " 13
at_xfail=no
(
  $as_echo "963. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:552" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:552"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:553: \$builddir/test_mat -v 5 -z -c single write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c single write_cell_2d_numeric" "mat5_compressed_write.at:553"
( $at_check_trace; $builddir/test_mat -v 5 -z -c single write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:553"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:554: cp \$srcdir/results/write_cell_2d_numeric-single.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:554"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-single.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:554"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:556" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:556"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:557: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='single';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:557"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='single';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:557"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_963
#AT_START_964
at_fn_group_banner 964 'mat5_compressed_write.at:561' \
  "Write cell array with 2D int64 fields" "          " 13
at_xfail=no
(
  $as_echo "964. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:562" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:562"
$as_echo "mat5_compressed_write.at:563" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:563"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:564: \$builddir/test_mat -v 5 -z -c int64 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c int64 write_cell_2d_numeric" "mat5_compressed_write.at:564"
( $at_check_trace; $builddir/test_mat -v 5 -z -c int64 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:564"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:565: cp \$srcdir/results/write_cell_2d_numeric-int64.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:565"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-int64.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:565"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:567" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:567"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:568: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int64';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:568"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int64';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:568"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_964
#AT_START_965
at_fn_group_banner 965 'mat5_compressed_write.at:572' \
  "Write cell array with 2D uint64 fields" "         " 13
at_xfail=no
(
  $as_echo "965. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:573" >"$at_check_line_file"
(test $HAVE_UINT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:573"
$as_echo "mat5_compressed_write.at:574" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:574"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:575: \$builddir/test_mat -v 5 -z -c uint64 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c uint64 write_cell_2d_numeric" "mat5_compressed_write.at:575"
( $at_check_trace; $builddir/test_mat -v 5 -z -c uint64 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:575"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:576: cp \$srcdir/results/write_cell_2d_numeric-uint64.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:576"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-uint64.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:576"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:578" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:578"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:579: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint64';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:579"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint64';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:579"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_965
#AT_START_966
at_fn_group_banner 966 'mat5_compressed_write.at:583' \
  "Write cell array with 2D int32 fields" "          " 13
at_xfail=no
(
  $as_echo "966. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:584" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:584"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:585: \$builddir/test_mat -v 5 -z -c int32 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c int32 write_cell_2d_numeric" "mat5_compressed_write.at:585"
( $at_check_trace; $builddir/test_mat -v 5 -z -c int32 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:585"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:586: cp \$srcdir/results/write_cell_2d_numeric-int32.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:586"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-int32.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:586"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:588" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:588"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:589: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int32';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:589"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int32';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:589"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_966
#AT_START_967
at_fn_group_banner 967 'mat5_compressed_write.at:593' \
  "Write cell array with 2D uint32 fields" "         " 13
at_xfail=no
(
  $as_echo "967. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:594" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:594"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:595: \$builddir/test_mat -v 5 -z -c uint32 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c uint32 write_cell_2d_numeric" "mat5_compressed_write.at:595"
( $at_check_trace; $builddir/test_mat -v 5 -z -c uint32 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:595"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:596: cp \$srcdir/results/write_cell_2d_numeric-uint32.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:596"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-uint32.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:596"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:598" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:598"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:599: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint32';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:599"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint32';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:599"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_967
#AT_START_968
at_fn_group_banner 968 'mat5_compressed_write.at:603' \
  "Write cell array with 2D int16 fields" "          " 13
at_xfail=no
(
  $as_echo "968. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:604" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:604"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:605: \$builddir/test_mat -v 5 -z -c int16 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c int16 write_cell_2d_numeric" "mat5_compressed_write.at:605"
( $at_check_trace; $builddir/test_mat -v 5 -z -c int16 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:605"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:606: cp \$srcdir/results/write_cell_2d_numeric-int16.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:606"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-int16.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:606"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:608" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:608"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:609: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int16';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:609"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int16';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:609"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_968
#AT_START_969
at_fn_group_banner 969 'mat5_compressed_write.at:613' \
  "Write cell array with 2D uint16 fields" "         " 13
at_xfail=no
(
  $as_echo "969. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:614" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:614"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:615: \$builddir/test_mat -v 5 -z -c uint16 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c uint16 write_cell_2d_numeric" "mat5_compressed_write.at:615"
( $at_check_trace; $builddir/test_mat -v 5 -z -c uint16 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:615"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:616: cp \$srcdir/results/write_cell_2d_numeric-uint16.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:616"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-uint16.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:616"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:618" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:618"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:619: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint16';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:619"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint16';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:619"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_969
#AT_START_970
at_fn_group_banner 970 'mat5_compressed_write.at:623' \
  "Write cell array with 2D int8 fields" "           " 13
at_xfail=no
(
  $as_echo "970. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:624" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:624"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:625: \$builddir/test_mat -v 5 -z -c int8 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c int8 write_cell_2d_numeric" "mat5_compressed_write.at:625"
( $at_check_trace; $builddir/test_mat -v 5 -z -c int8 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:625"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:626: cp \$srcdir/results/write_cell_2d_numeric-int8.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:626"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-int8.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:626"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:628" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:628"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:629: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int8';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:629"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int8';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:629"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_970
#AT_START_971
at_fn_group_banner 971 'mat5_compressed_write.at:633' \
  "Write cell array with 2D uint8 fields" "          " 13
at_xfail=no
(
  $as_echo "971. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:634" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:634"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:635: \$builddir/test_mat -v 5 -z -c uint8 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c uint8 write_cell_2d_numeric" "mat5_compressed_write.at:635"
( $at_check_trace; $builddir/test_mat -v 5 -z -c uint8 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:635"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:636: cp \$srcdir/results/write_cell_2d_numeric-uint8.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:636"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-uint8.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:636"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:638" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:638"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:639: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint8';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:639"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint8';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:639"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_971
#AT_START_972
at_fn_group_banner 972 'mat5_compressed_write.at:643' \
  "Write cell array with 2D complex double fields" " " 13
at_xfail=no
(
  $as_echo "972. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:644" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:644"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:645: \$builddir/test_mat -v 5 -z write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z write_cell_complex_2d_numeric" "mat5_compressed_write.at:645"
( $at_check_trace; $builddir/test_mat -v 5 -z write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:645"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:646: cp \$srcdir/results/write_cell_complex_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:646"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:646"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:648" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:648"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:649: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:649"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:649"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_972
#AT_START_973
at_fn_group_banner 973 'mat5_compressed_write.at:653' \
  "Write cell array with 2D complex single fields" " " 13
at_xfail=no
(
  $as_echo "973. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:654" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:654"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:655: \$builddir/test_mat -v 5 -z -c single write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c single write_cell_complex_2d_numeric" "mat5_compressed_write.at:655"
( $at_check_trace; $builddir/test_mat -v 5 -z -c single write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:655"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:656: cp \$srcdir/results/write_cell_complex_2d_numeric-single.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:656"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-single.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:656"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:658" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:658"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:659: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='single';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:659"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='single';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:659"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_973
#AT_START_974
at_fn_group_banner 974 'mat5_compressed_write.at:663' \
  "Write cell array with 2D complex int64 fields" "  " 13
at_xfail=no
(
  $as_echo "974. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:664" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:664"
$as_echo "mat5_compressed_write.at:665" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:665"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:666: \$builddir/test_mat -v 5 -z -c int64 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c int64 write_cell_complex_2d_numeric" "mat5_compressed_write.at:666"
( $at_check_trace; $builddir/test_mat -v 5 -z -c int64 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:666"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:667: cp \$srcdir/results/write_cell_complex_2d_numeric-int64.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:667"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-int64.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:667"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:669" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:669"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:670: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int64';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:670"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int64';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:670"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_974
#AT_START_975
at_fn_group_banner 975 'mat5_compressed_write.at:674' \
  "Write cell array with 2D complex uint64 fields" " " 13
at_xfail=no
(
  $as_echo "975. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:675" >"$at_check_line_file"
(test $HAVE_UINT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:675"
$as_echo "mat5_compressed_write.at:676" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:676"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:677: \$builddir/test_mat -v 5 -z -c uint64 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c uint64 write_cell_complex_2d_numeric" "mat5_compressed_write.at:677"
( $at_check_trace; $builddir/test_mat -v 5 -z -c uint64 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:677"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:678: cp \$srcdir/results/write_cell_complex_2d_numeric-uint64.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:678"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-uint64.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:678"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:680" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:680"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:681: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint64';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:681"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint64';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:681"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_975
#AT_START_976
at_fn_group_banner 976 'mat5_compressed_write.at:685' \
  "Write cell array with 2D complex int32 fields" "  " 13
at_xfail=no
(
  $as_echo "976. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:686" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:686"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:687: \$builddir/test_mat -v 5 -z -c int32 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c int32 write_cell_complex_2d_numeric" "mat5_compressed_write.at:687"
( $at_check_trace; $builddir/test_mat -v 5 -z -c int32 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:687"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:688: cp \$srcdir/results/write_cell_complex_2d_numeric-int32.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:688"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-int32.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:688"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:690" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:690"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:691: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int32';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:691"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int32';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:691"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_976
#AT_START_977
at_fn_group_banner 977 'mat5_compressed_write.at:695' \
  "Write cell array with 2D complex uint32 fields" " " 13
at_xfail=no
(
  $as_echo "977. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:696" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:696"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:697: \$builddir/test_mat -v 5 -z -c uint32 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c uint32 write_cell_complex_2d_numeric" "mat5_compressed_write.at:697"
( $at_check_trace; $builddir/test_mat -v 5 -z -c uint32 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:697"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:698: cp \$srcdir/results/write_cell_complex_2d_numeric-uint32.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:698"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-uint32.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:698"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:700" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:700"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:701: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint32';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:701"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint32';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:701"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_977
#AT_START_978
at_fn_group_banner 978 'mat5_compressed_write.at:705' \
  "Write cell array with 2D complex int16 fields" "  " 13
at_xfail=no
(
  $as_echo "978. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:706" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:706"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:707: \$builddir/test_mat -v 5 -z -c int16 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c int16 write_cell_complex_2d_numeric" "mat5_compressed_write.at:707"
( $at_check_trace; $builddir/test_mat -v 5 -z -c int16 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:707"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:708: cp \$srcdir/results/write_cell_complex_2d_numeric-int16.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:708"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-int16.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:708"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:710" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:710"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:711: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int16';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:711"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int16';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:711"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_978
#AT_START_979
at_fn_group_banner 979 'mat5_compressed_write.at:715' \
  "Write cell array with 2D complex uint16 fields" " " 13
at_xfail=no
(
  $as_echo "979. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:716" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:716"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:717: \$builddir/test_mat -v 5 -z -c uint16 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c uint16 write_cell_complex_2d_numeric" "mat5_compressed_write.at:717"
( $at_check_trace; $builddir/test_mat -v 5 -z -c uint16 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:717"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:718: cp \$srcdir/results/write_cell_complex_2d_numeric-uint16.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:718"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-uint16.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:718"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:720" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:720"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:721: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint16';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:721"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint16';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:721"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_979
#AT_START_980
at_fn_group_banner 980 'mat5_compressed_write.at:725' \
  "Write cell array with 2D complex int8 fields" "   " 13
at_xfail=no
(
  $as_echo "980. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:726" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:726"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:727: \$builddir/test_mat -v 5 -z -c int8 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c int8 write_cell_complex_2d_numeric" "mat5_compressed_write.at:727"
( $at_check_trace; $builddir/test_mat -v 5 -z -c int8 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:727"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:728: cp \$srcdir/results/write_cell_complex_2d_numeric-int8.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:728"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-int8.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:728"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:730" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:730"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:731: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int8';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:731"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int8';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:731"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_980
#AT_START_981
at_fn_group_banner 981 'mat5_compressed_write.at:735' \
  "Write cell array with 2D complex uint8 fields" "  " 13
at_xfail=no
(
  $as_echo "981. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:736" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:736"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:737: \$builddir/test_mat -v 5 -z -c uint8 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c uint8 write_cell_complex_2d_numeric" "mat5_compressed_write.at:737"
( $at_check_trace; $builddir/test_mat -v 5 -z -c uint8 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:737"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:738: cp \$srcdir/results/write_cell_complex_2d_numeric-uint8.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:738"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-uint8.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:738"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:740" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:740"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:741: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint8';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:741"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint8';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:741"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_981
#AT_START_982
at_fn_group_banner 982 'mat5_compressed_write.at:745' \
  "Write cell array with 2D logical fields" "        " 13
at_xfail=no
(
  $as_echo "982. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_write.at:746" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:746"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:747: \$builddir/test_mat -v 5 -z write_cell_2d_logical"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z write_cell_2d_logical" "mat5_compressed_write.at:747"
( $at_check_trace; $builddir/test_mat -v 5 -z write_cell_2d_logical
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:747"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:748: cp \$srcdir/results/write_cell_numeric-logical.out expout
          \$builddir/test_mat readvar test_write_cell_2d_logical.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:748"
( $at_check_trace; cp $srcdir/results/write_cell_numeric-logical.out expout
          $builddir/test_mat readvar test_write_cell_2d_logical.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:748"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:750" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:750"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:751: cp \$srcdir/matlab/test_write_cell_2d_logical.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_cell_2d_logical\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:751"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_logical.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_cell_2d_logical" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:751"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_982
#AT_START_983
at_fn_group_banner 983 'mat5_compressed_write.at:755' \
  "Write cell array with empty structs" "            " 13
at_xfail=no
(
  $as_echo "983. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_write.at:757" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:757"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:758: \$builddir/test_mat -v 5 -z write_cell_empty_struct"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z write_cell_empty_struct" "mat5_compressed_write.at:758"
( $at_check_trace; $builddir/test_mat -v 5 -z write_cell_empty_struct
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:758"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:759: cp \$srcdir/results/readvar-write_cell_empty_struct-var1.out expout
          \$builddir/test_mat readvar test_write_cell_empty_struct.mat var1"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:759"
( $at_check_trace; cp $srcdir/results/readvar-write_cell_empty_struct-var1.out expout
          $builddir/test_mat readvar test_write_cell_empty_struct.mat var1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:759"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat5_compressed_write.at:761" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_write.at:761"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_write.at:762: cp \$srcdir/matlab/test_write_cell_empty_struct.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_cell_empty_struct\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_write.at:762"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_empty_struct.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_cell_empty_struct" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_write.at:762"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_983
#AT_START_984
at_fn_group_banner 984 'mat5_compressed_readwrite.at:27' \
  "Copy variables" "                                 " 14
at_xfail=no
(
  $as_echo "984. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readwrite.at:29" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readwrite.at:29"
$as_echo "mat5_compressed_readwrite.at:30" >"$at_check_line_file"
(! grep -q "#define SIZEOF_VOID_P 4" $abs_top_builddir/src/matioConfig.h) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readwrite.at:30"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:31: \$builddir/test_mat -v 5 -z copy \$srcdir/datasets/matio_test_cases_compressed_le.mat"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z copy $srcdir/datasets/matio_test_cases_compressed_le.mat" "mat5_compressed_readwrite.at:31"
( $at_check_trace; $builddir/test_mat -v 5 -z copy $srcdir/datasets/matio_test_cases_compressed_le.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:31"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:32: cp \$srcdir/results/dump-mat_copy-5_32.out expout
          \$builddir/../tools/matdump -f whos -h -d test_mat_copy.mat"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readwrite.at:32"
( $at_check_trace; cp $srcdir/results/dump-mat_copy-5_32.out expout
          $builddir/../tools/matdump -f whos -h -d test_mat_copy.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:32"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_984
#AT_START_985
at_fn_group_banner 985 'mat5_compressed_readwrite.at:36' \
  "Copy variables" "                                 " 14
at_xfail=no
(
  $as_echo "985. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readwrite.at:38" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readwrite.at:38"
$as_echo "mat5_compressed_readwrite.at:39" >"$at_check_line_file"
(! grep -q "#define SIZEOF_VOID_P 8" $abs_top_builddir/src/matioConfig.h) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readwrite.at:39"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:40: \$builddir/test_mat -v 5 -z copy \$srcdir/datasets/matio_test_cases_compressed_le.mat"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z copy $srcdir/datasets/matio_test_cases_compressed_le.mat" "mat5_compressed_readwrite.at:40"
( $at_check_trace; $builddir/test_mat -v 5 -z copy $srcdir/datasets/matio_test_cases_compressed_le.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:40"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:41: cp \$srcdir/results/dump-mat_copy-5.out expout
          \$builddir/../tools/matdump -f whos -h -d test_mat_copy.mat"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readwrite.at:41"
( $at_check_trace; cp $srcdir/results/dump-mat_copy-5.out expout
          $builddir/../tools/matdump -f whos -h -d test_mat_copy.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:41"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_985
#AT_START_986
at_fn_group_banner 986 'mat5_compressed_readwrite.at:45' \
  "Delete variables" "                               " 14
at_xfail=no
(
  $as_echo "986. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readwrite.at:47" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readwrite.at:47"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:48: \$builddir/test_mat -v 5 -z copy \$srcdir/datasets/matio_test_cases_compressed_be.mat"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z copy $srcdir/datasets/matio_test_cases_compressed_be.mat" "mat5_compressed_readwrite.at:48"
( $at_check_trace; $builddir/test_mat -v 5 -z copy $srcdir/datasets/matio_test_cases_compressed_be.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:48"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:49: \$builddir/test_mat delete test_mat_copy.mat var2"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var2" "mat5_compressed_readwrite.at:49"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:49"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:50: \$builddir/test_mat delete test_mat_copy.mat var3"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var3" "mat5_compressed_readwrite.at:50"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var3
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:50"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:51: \$builddir/test_mat delete test_mat_copy.mat var4"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var4" "mat5_compressed_readwrite.at:51"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var4
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:51"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:52: \$builddir/test_mat delete test_mat_copy.mat var5"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var5" "mat5_compressed_readwrite.at:52"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var5
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:52"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:53: \$builddir/test_mat delete test_mat_copy.mat var6"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var6" "mat5_compressed_readwrite.at:53"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var6
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:53"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:54: \$builddir/test_mat delete test_mat_copy.mat var7"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var7" "mat5_compressed_readwrite.at:54"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var7
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:54"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:55: \$builddir/test_mat delete test_mat_copy.mat var8"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var8" "mat5_compressed_readwrite.at:55"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var8
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:55"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:56: \$builddir/test_mat delete test_mat_copy.mat var9"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var9" "mat5_compressed_readwrite.at:56"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var9
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:56"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:57: \$builddir/test_mat delete test_mat_copy.mat var10"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var10" "mat5_compressed_readwrite.at:57"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var10
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:57"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:58: \$builddir/test_mat delete test_mat_copy.mat var11"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var11" "mat5_compressed_readwrite.at:58"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var11
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:58"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:59: \$builddir/test_mat delete test_mat_copy.mat var12"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var12" "mat5_compressed_readwrite.at:59"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var12
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:59"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:60: \$builddir/test_mat delete test_mat_copy.mat var13"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var13" "mat5_compressed_readwrite.at:60"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var13
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:60"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:61: \$builddir/test_mat delete test_mat_copy.mat var14"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var14" "mat5_compressed_readwrite.at:61"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var14
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:61"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:62: \$builddir/test_mat delete test_mat_copy.mat var15"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var15" "mat5_compressed_readwrite.at:62"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var15
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:62"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:63: \$builddir/test_mat delete test_mat_copy.mat var16"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var16" "mat5_compressed_readwrite.at:63"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var16
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:63"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:64: \$builddir/test_mat delete test_mat_copy.mat var17"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var17" "mat5_compressed_readwrite.at:64"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var17
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:64"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:65: \$builddir/test_mat delete test_mat_copy.mat var18"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var18" "mat5_compressed_readwrite.at:65"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var18
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:65"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:66: \$builddir/test_mat delete test_mat_copy.mat var19"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var19" "mat5_compressed_readwrite.at:66"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var19
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:66"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:67: \$builddir/test_mat delete test_mat_copy.mat var20"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var20" "mat5_compressed_readwrite.at:67"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var20
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:67"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:68: \$builddir/test_mat delete test_mat_copy.mat var21"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var21" "mat5_compressed_readwrite.at:68"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var21
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:68"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:69: \$builddir/test_mat delete test_mat_copy.mat var22"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var22" "mat5_compressed_readwrite.at:69"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var22
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:69"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:70: \$builddir/test_mat delete test_mat_copy.mat var23"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var23" "mat5_compressed_readwrite.at:70"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var23
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:70"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:71: \$builddir/test_mat delete test_mat_copy.mat var25"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var25" "mat5_compressed_readwrite.at:71"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var25
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:71"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:72: \$builddir/test_mat delete test_mat_copy.mat var26"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var26" "mat5_compressed_readwrite.at:72"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var26
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:72"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:73: \$builddir/test_mat delete test_mat_copy.mat var27"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var27" "mat5_compressed_readwrite.at:73"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var27
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:73"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:74: \$builddir/test_mat delete test_mat_copy.mat var28"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var28" "mat5_compressed_readwrite.at:74"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var28
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:74"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:75: \$builddir/test_mat delete test_mat_copy.mat var29"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var29" "mat5_compressed_readwrite.at:75"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var29
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:75"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:76: \$builddir/test_mat delete test_mat_copy.mat var30"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var30" "mat5_compressed_readwrite.at:76"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var30
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:76"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:77: \$builddir/test_mat delete test_mat_copy.mat var31"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var31" "mat5_compressed_readwrite.at:77"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var31
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:77"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:78: \$builddir/test_mat delete test_mat_copy.mat var32"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var32" "mat5_compressed_readwrite.at:78"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var32
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:78"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:79: \$builddir/test_mat delete test_mat_copy.mat var33"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var33" "mat5_compressed_readwrite.at:79"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var33
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:79"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:80: \$builddir/test_mat delete test_mat_copy.mat var34"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var34" "mat5_compressed_readwrite.at:80"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var34
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:80"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:81: \$builddir/test_mat delete test_mat_copy.mat var35"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var35" "mat5_compressed_readwrite.at:81"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var35
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:81"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:82: \$builddir/test_mat delete test_mat_copy.mat var36"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var36" "mat5_compressed_readwrite.at:82"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var36
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:82"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:83: \$builddir/test_mat delete test_mat_copy.mat var37"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var37" "mat5_compressed_readwrite.at:83"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var37
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:83"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:84: \$builddir/test_mat delete test_mat_copy.mat var38"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var38" "mat5_compressed_readwrite.at:84"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var38
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:84"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:85: \$builddir/test_mat delete test_mat_copy.mat var39"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var39" "mat5_compressed_readwrite.at:85"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var39
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:85"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:86: \$builddir/test_mat delete test_mat_copy.mat var40"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var40" "mat5_compressed_readwrite.at:86"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var40
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:86"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:87: \$builddir/test_mat delete test_mat_copy.mat var41"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var41" "mat5_compressed_readwrite.at:87"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var41
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:87"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:88: \$builddir/test_mat delete test_mat_copy.mat var42"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var42" "mat5_compressed_readwrite.at:88"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var42
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:88"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:89: \$builddir/test_mat delete test_mat_copy.mat var43"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var43" "mat5_compressed_readwrite.at:89"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var43
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:89"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:90: \$builddir/test_mat delete test_mat_copy.mat var44"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var44" "mat5_compressed_readwrite.at:90"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var44
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:90"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:91: \$builddir/test_mat delete test_mat_copy.mat var45"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var45" "mat5_compressed_readwrite.at:91"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var45
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:91"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:92: \$builddir/test_mat delete test_mat_copy.mat var46"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var46" "mat5_compressed_readwrite.at:92"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var46
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:92"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:93: \$builddir/test_mat delete test_mat_copy.mat var47"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var47" "mat5_compressed_readwrite.at:93"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var47
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:93"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:94: \$builddir/test_mat delete test_mat_copy.mat var48"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var48" "mat5_compressed_readwrite.at:94"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var48
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:94"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:95: \$builddir/test_mat delete test_mat_copy.mat var49"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var49" "mat5_compressed_readwrite.at:95"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var49
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:95"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:96: \$builddir/test_mat delete test_mat_copy.mat var50"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var50" "mat5_compressed_readwrite.at:96"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var50
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:96"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:97: \$builddir/test_mat delete test_mat_copy.mat var51"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var51" "mat5_compressed_readwrite.at:97"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var51
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:97"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:98: \$builddir/test_mat delete test_mat_copy.mat var52"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var52" "mat5_compressed_readwrite.at:98"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var52
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:98"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:99: \$builddir/test_mat delete test_mat_copy.mat var53"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var53" "mat5_compressed_readwrite.at:99"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var53
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:99"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:100: \$builddir/test_mat delete test_mat_copy.mat var54"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var54" "mat5_compressed_readwrite.at:100"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var54
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:100"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:101: \$builddir/test_mat delete test_mat_copy.mat var55"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var55" "mat5_compressed_readwrite.at:101"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var55
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:101"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:102: \$builddir/test_mat delete test_mat_copy.mat var56"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var56" "mat5_compressed_readwrite.at:102"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var56
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:102"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:103: \$builddir/test_mat delete test_mat_copy.mat var57"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var57" "mat5_compressed_readwrite.at:103"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var57
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:103"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:104: \$builddir/test_mat delete test_mat_copy.mat var58"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var58" "mat5_compressed_readwrite.at:104"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var58
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:104"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:105: \$builddir/test_mat delete test_mat_copy.mat var59"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var59" "mat5_compressed_readwrite.at:105"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var59
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:105"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:106: \$builddir/test_mat delete test_mat_copy.mat var60"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var60" "mat5_compressed_readwrite.at:106"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var60
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:106"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:107: \$builddir/test_mat delete test_mat_copy.mat var61"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var61" "mat5_compressed_readwrite.at:107"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var61
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:107"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:108: \$builddir/test_mat delete test_mat_copy.mat var62"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var62" "mat5_compressed_readwrite.at:108"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var62
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:108"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:109: \$builddir/test_mat delete test_mat_copy.mat var63"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var63" "mat5_compressed_readwrite.at:109"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var63
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:109"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:110: \$builddir/test_mat delete test_mat_copy.mat var64"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var64" "mat5_compressed_readwrite.at:110"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var64
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:110"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:111: \$builddir/test_mat delete test_mat_copy.mat var65"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var65" "mat5_compressed_readwrite.at:111"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var65
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:111"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:112: \$builddir/test_mat delete test_mat_copy.mat var66"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var66" "mat5_compressed_readwrite.at:112"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var66
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:112"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:113: \$builddir/test_mat delete test_mat_copy.mat var67"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var67" "mat5_compressed_readwrite.at:113"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var67
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:113"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:114: \$builddir/test_mat delete test_mat_copy.mat var68"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var68" "mat5_compressed_readwrite.at:114"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var68
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:114"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:115: \$builddir/test_mat delete test_mat_copy.mat var69"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var69" "mat5_compressed_readwrite.at:115"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var69
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:115"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:116: \$builddir/test_mat delete test_mat_copy.mat var70"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var70" "mat5_compressed_readwrite.at:116"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var70
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:116"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:117: \$builddir/test_mat delete test_mat_copy.mat var71"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var71" "mat5_compressed_readwrite.at:117"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var71
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:117"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:118: \$builddir/test_mat delete test_mat_copy.mat var72"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var72" "mat5_compressed_readwrite.at:118"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var72
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:118"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:119: \$builddir/test_mat delete test_mat_copy.mat var73"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var73" "mat5_compressed_readwrite.at:119"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var73
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:119"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:120: \$builddir/test_mat delete test_mat_copy.mat var74"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var74" "mat5_compressed_readwrite.at:120"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var74
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:120"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:121: \$builddir/test_mat delete test_mat_copy.mat var75"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var75" "mat5_compressed_readwrite.at:121"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var75
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:121"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:122: \$builddir/test_mat delete test_mat_copy.mat var76"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var76" "mat5_compressed_readwrite.at:122"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var76
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:122"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:123: \$builddir/test_mat delete test_mat_copy.mat var77"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var77" "mat5_compressed_readwrite.at:123"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var77
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:123"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:124: \$builddir/test_mat delete test_mat_copy.mat var78"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var78" "mat5_compressed_readwrite.at:124"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var78
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:124"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:125: \$builddir/test_mat delete test_mat_copy.mat var79"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var79" "mat5_compressed_readwrite.at:125"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var79
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:125"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:126: \$builddir/test_mat delete test_mat_copy.mat var80"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var80" "mat5_compressed_readwrite.at:126"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var80
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:126"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:127: \$builddir/test_mat delete test_mat_copy.mat var81"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var81" "mat5_compressed_readwrite.at:127"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var81
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:127"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:128: \$builddir/test_mat delete test_mat_copy.mat var82"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var82" "mat5_compressed_readwrite.at:128"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var82
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:128"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:129: \$builddir/test_mat delete test_mat_copy.mat var83"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var83" "mat5_compressed_readwrite.at:129"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var83
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:129"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:130: \$builddir/test_mat delete test_mat_copy.mat var84"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var84" "mat5_compressed_readwrite.at:130"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var84
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:130"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:131: \$builddir/test_mat delete test_mat_copy.mat var85"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var85" "mat5_compressed_readwrite.at:131"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var85
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:131"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:132: \$builddir/test_mat delete test_mat_copy.mat var86"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var86" "mat5_compressed_readwrite.at:132"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var86
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:132"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:133: \$builddir/test_mat delete test_mat_copy.mat var87"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var87" "mat5_compressed_readwrite.at:133"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var87
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:133"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:134: \$builddir/test_mat delete test_mat_copy.mat var88"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var88" "mat5_compressed_readwrite.at:134"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var88
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:134"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:135: \$builddir/test_mat delete test_mat_copy.mat var89"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var89" "mat5_compressed_readwrite.at:135"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var89
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:135"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:136: \$builddir/test_mat delete test_mat_copy.mat var90"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var90" "mat5_compressed_readwrite.at:136"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var90
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:136"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:137: \$builddir/test_mat delete test_mat_copy.mat var91"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var91" "mat5_compressed_readwrite.at:137"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var91
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:137"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:138: \$builddir/test_mat delete test_mat_copy.mat var92"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var92" "mat5_compressed_readwrite.at:138"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var92
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:138"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:139: cp \$srcdir/results/dump-mat_copy-partial.out expout
          \$builddir/../tools/matdump -f whos -h -d test_mat_copy.mat"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readwrite.at:139"
( $at_check_trace; cp $srcdir/results/dump-mat_copy-partial.out expout
          $builddir/../tools/matdump -f whos -h -d test_mat_copy.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:139"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:141: \$builddir/test_mat delete test_mat_copy.mat var1"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var1" "mat5_compressed_readwrite.at:141"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:141"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:142: \$builddir/test_mat delete test_mat_copy.mat var24"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var24" "mat5_compressed_readwrite.at:142"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var24
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:142"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_986
#AT_START_987
at_fn_group_banner 987 'mat5_compressed_readwrite.at:145' \
  "Copy large struct" "                              " 14
at_xfail=no
(
  $as_echo "987. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readwrite.at:147" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readwrite.at:147"
$as_echo "mat5_compressed_readwrite.at:148" >"$at_check_line_file"
(! grep -q "#define SIZEOF_VOID_P 4" $abs_top_builddir/src/matioConfig.h) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readwrite.at:148"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:149: \$builddir/test_mat -v 5 -z copy \$srcdir/datasets/large_struct_compressed_le.mat"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z copy $srcdir/datasets/large_struct_compressed_le.mat" "mat5_compressed_readwrite.at:149"
( $at_check_trace; $builddir/test_mat -v 5 -z copy $srcdir/datasets/large_struct_compressed_le.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:149"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:150: cp \$srcdir/results/dump-large_struct_compressed_32.out expout
          \$builddir/../tools/matdump -f whos -d test_mat_copy.mat"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readwrite.at:150"
( $at_check_trace; cp $srcdir/results/dump-large_struct_compressed_32.out expout
          $builddir/../tools/matdump -f whos -d test_mat_copy.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:150"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_987
#AT_START_988
at_fn_group_banner 988 'mat5_compressed_readwrite.at:154' \
  "Copy large struct" "                              " 14
at_xfail=no
(
  $as_echo "988. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat5_compressed_readwrite.at:156" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readwrite.at:156"
$as_echo "mat5_compressed_readwrite.at:157" >"$at_check_line_file"
(! grep -q "#define SIZEOF_VOID_P 8" $abs_top_builddir/src/matioConfig.h) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_readwrite.at:157"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:158: \$builddir/test_mat -v 5 -z copy \$srcdir/datasets/large_struct_compressed_le.mat"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z copy $srcdir/datasets/large_struct_compressed_le.mat" "mat5_compressed_readwrite.at:158"
( $at_check_trace; $builddir/test_mat -v 5 -z copy $srcdir/datasets/large_struct_compressed_le.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:158"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_readwrite.at:159: cp \$srcdir/results/dump-large_struct_compressed.out expout
          \$builddir/../tools/matdump -f whos -d test_mat_copy.mat"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_readwrite.at:159"
( $at_check_trace; cp $srcdir/results/dump-large_struct_compressed.out expout
          $builddir/../tools/matdump -f whos -d test_mat_copy.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_readwrite.at:159"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_988
#AT_START_989
at_fn_group_banner 989 'mat73_write.at:27' \
  "Write 2D double array" "                          " 15
at_xfail=no
(
  $as_echo "989. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:28" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:28"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:29: \$builddir/test_mat -v 7.3 -c double write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c double write_2d_numeric" "mat73_write.at:29"
( $at_check_trace; $builddir/test_mat -v 7.3 -c double write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:29"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:30: cp \$srcdir/results/write_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:30"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:30"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:32" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:32"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:33: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:33"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:33"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_989
#AT_START_990
at_fn_group_banner 990 'mat73_write.at:37' \
  "Write 2D single array" "                          " 15
at_xfail=no
(
  $as_echo "990. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:38" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:38"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:39: \$builddir/test_mat -v 7.3 -c single write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c single write_2d_numeric" "mat73_write.at:39"
( $at_check_trace; $builddir/test_mat -v 7.3 -c single write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:39"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:40: cp \$srcdir/results/write_2d_numeric-single.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:40"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-single.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:40"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:42" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:42"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:43: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='single';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:43"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='single';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:43"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_990
#AT_START_991
at_fn_group_banner 991 'mat73_write.at:47' \
  "Write 2D int64 array" "                           " 15
at_xfail=no
(
  $as_echo "991. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:48" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:48"
$as_echo "mat73_write.at:49" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:49"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:50: \$builddir/test_mat -v 7.3 -c int64 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c int64 write_2d_numeric" "mat73_write.at:50"
( $at_check_trace; $builddir/test_mat -v 7.3 -c int64 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:50"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:51: cp \$srcdir/results/write_2d_numeric-int64.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:51"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-int64.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:51"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:53" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:53"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:54: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int64';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:54"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int64';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:54"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_991
#AT_START_992
at_fn_group_banner 992 'mat73_write.at:58' \
  "Write 2D uint64 array" "                          " 15
at_xfail=no
(
  $as_echo "992. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:59" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:59"
$as_echo "mat73_write.at:60" >"$at_check_line_file"
(test $HAVE_UINT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:60"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:61: \$builddir/test_mat -v 7.3 -c uint64 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c uint64 write_2d_numeric" "mat73_write.at:61"
( $at_check_trace; $builddir/test_mat -v 7.3 -c uint64 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:61"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:62: cp \$srcdir/results/write_2d_numeric-uint64.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:62"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-uint64.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:62"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:64" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:64"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:65: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint64';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:65"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint64';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:65"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_992
#AT_START_993
at_fn_group_banner 993 'mat73_write.at:69' \
  "Write 2D int32 array" "                           " 15
at_xfail=no
(
  $as_echo "993. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:70" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:70"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:71: \$builddir/test_mat -v 7.3 -c int32 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c int32 write_2d_numeric" "mat73_write.at:71"
( $at_check_trace; $builddir/test_mat -v 7.3 -c int32 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:71"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:72: cp \$srcdir/results/write_2d_numeric-int32.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:72"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-int32.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:72"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:74" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:74"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:75: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int32';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:75"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int32';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:75"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_993
#AT_START_994
at_fn_group_banner 994 'mat73_write.at:79' \
  "Write 2D uint32 array" "                          " 15
at_xfail=no
(
  $as_echo "994. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:80" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:80"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:81: \$builddir/test_mat -v 7.3 -c uint32 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c uint32 write_2d_numeric" "mat73_write.at:81"
( $at_check_trace; $builddir/test_mat -v 7.3 -c uint32 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:81"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:82: cp \$srcdir/results/write_2d_numeric-uint32.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:82"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-uint32.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:82"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:84" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:84"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:85: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint32';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:85"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint32';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:85"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_994
#AT_START_995
at_fn_group_banner 995 'mat73_write.at:89' \
  "Write 2D int16 array" "                           " 15
at_xfail=no
(
  $as_echo "995. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:90" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:90"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:91: \$builddir/test_mat -v 7.3 -c int16 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c int16 write_2d_numeric" "mat73_write.at:91"
( $at_check_trace; $builddir/test_mat -v 7.3 -c int16 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:91"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:92: cp \$srcdir/results/write_2d_numeric-int16.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:92"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-int16.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:92"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:94" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:94"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:95: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int16';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:95"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int16';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:95"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_995
#AT_START_996
at_fn_group_banner 996 'mat73_write.at:99' \
  "Write 2D uint16 array" "                          " 15
at_xfail=no
(
  $as_echo "996. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:100" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:100"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:101: \$builddir/test_mat -v 7.3 -c uint16 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c uint16 write_2d_numeric" "mat73_write.at:101"
( $at_check_trace; $builddir/test_mat -v 7.3 -c uint16 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:101"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:102: cp \$srcdir/results/write_2d_numeric-uint16.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:102"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-uint16.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:102"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:104" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:104"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:105: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint16';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:105"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint16';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:105"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_996
#AT_START_997
at_fn_group_banner 997 'mat73_write.at:109' \
  "Write 2D int8 array" "                            " 15
at_xfail=no
(
  $as_echo "997. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:110" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:110"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:111: \$builddir/test_mat -v 7.3 -c int8 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c int8 write_2d_numeric" "mat73_write.at:111"
( $at_check_trace; $builddir/test_mat -v 7.3 -c int8 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:111"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:112: cp \$srcdir/results/write_2d_numeric-int8.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:112"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-int8.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:112"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:114" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:114"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:115: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int8';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:115"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int8';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:115"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_997
#AT_START_998
at_fn_group_banner 998 'mat73_write.at:119' \
  "Write 2D uint8 array" "                           " 15
at_xfail=no
(
  $as_echo "998. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:120" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:120"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:121: \$builddir/test_mat -v 7.3 -c uint8 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c uint8 write_2d_numeric" "mat73_write.at:121"
( $at_check_trace; $builddir/test_mat -v 7.3 -c uint8 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:121"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:122: cp \$srcdir/results/write_2d_numeric-uint8.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:122"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-uint8.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:122"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:124" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:124"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:125: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint8';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:125"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint8';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:125"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_998
#AT_START_999
at_fn_group_banner 999 'mat73_write.at:129' \
  "Write 2D complex double array" "                  " 15
at_xfail=no
(
  $as_echo "999. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:130" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:130"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:131: \$builddir/test_mat -v 7.3 -c double write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c double write_complex_2d_numeric" "mat73_write.at:131"
( $at_check_trace; $builddir/test_mat -v 7.3 -c double write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:131"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:132: cp \$srcdir/results/write_complex_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:132"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:132"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:134" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:134"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:135: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:135"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:135"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_999
#AT_START_1000
at_fn_group_banner 1000 'mat73_write.at:139' \
  "Write 2D complex single array" "                  " 15
at_xfail=no
(
  $as_echo "1000. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:140" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:140"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:141: \$builddir/test_mat -v 7.3 -c single write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c single write_complex_2d_numeric" "mat73_write.at:141"
( $at_check_trace; $builddir/test_mat -v 7.3 -c single write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:141"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:142: cp \$srcdir/results/write_complex_2d_numeric-single.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:142"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-single.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:142"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:144" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:144"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:145: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='single';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:145"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='single';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:145"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1000
#AT_START_1001
at_fn_group_banner 1001 'mat73_write.at:149' \
  "Write 2D complex int64 array" "                   " 15
at_xfail=no
(
  $as_echo "1001. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:150" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:150"
$as_echo "mat73_write.at:151" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:151"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:152: \$builddir/test_mat -v 7.3 -c int64 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c int64 write_complex_2d_numeric" "mat73_write.at:152"
( $at_check_trace; $builddir/test_mat -v 7.3 -c int64 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:152"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:153: cp \$srcdir/results/write_complex_2d_numeric-int64.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:153"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-int64.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:153"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:155" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:155"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:156: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int64';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:156"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int64';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:156"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1001
#AT_START_1002
at_fn_group_banner 1002 'mat73_write.at:160' \
  "Write 2D complex uint64 array" "                  " 15
at_xfail=no
(
  $as_echo "1002. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:161" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:161"
$as_echo "mat73_write.at:162" >"$at_check_line_file"
(test $HAVE_UINT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:162"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:163: \$builddir/test_mat -v 7.3 -c uint64 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c uint64 write_complex_2d_numeric" "mat73_write.at:163"
( $at_check_trace; $builddir/test_mat -v 7.3 -c uint64 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:163"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:164: cp \$srcdir/results/write_complex_2d_numeric-uint64.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:164"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-uint64.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:164"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:166" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:166"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:167: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint64';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:167"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint64';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:167"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1002
#AT_START_1003
at_fn_group_banner 1003 'mat73_write.at:171' \
  "Write 2D complex int32 array" "                   " 15
at_xfail=no
(
  $as_echo "1003. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:172" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:172"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:173: \$builddir/test_mat -v 7.3 -c int32 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c int32 write_complex_2d_numeric" "mat73_write.at:173"
( $at_check_trace; $builddir/test_mat -v 7.3 -c int32 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:173"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:174: cp \$srcdir/results/write_complex_2d_numeric-int32.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:174"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-int32.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:174"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:176" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:176"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:177: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int32';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:177"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int32';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:177"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1003
#AT_START_1004
at_fn_group_banner 1004 'mat73_write.at:181' \
  "Write 2D complex uint32 array" "                  " 15
at_xfail=no
(
  $as_echo "1004. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:182" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:182"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:183: \$builddir/test_mat -v 7.3 -c uint32 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c uint32 write_complex_2d_numeric" "mat73_write.at:183"
( $at_check_trace; $builddir/test_mat -v 7.3 -c uint32 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:183"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:184: cp \$srcdir/results/write_complex_2d_numeric-uint32.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:184"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-uint32.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:184"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:186" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:186"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:187: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint32';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:187"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint32';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:187"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1004
#AT_START_1005
at_fn_group_banner 1005 'mat73_write.at:191' \
  "Write 2D complex int16 array" "                   " 15
at_xfail=no
(
  $as_echo "1005. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:192" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:192"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:193: \$builddir/test_mat -v 7.3 -c int16 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c int16 write_complex_2d_numeric" "mat73_write.at:193"
( $at_check_trace; $builddir/test_mat -v 7.3 -c int16 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:193"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:194: cp \$srcdir/results/write_complex_2d_numeric-int16.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:194"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-int16.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:194"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:196" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:196"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:197: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int16';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:197"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int16';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:197"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1005
#AT_START_1006
at_fn_group_banner 1006 'mat73_write.at:201' \
  "Write 2D complex uint16 array" "                  " 15
at_xfail=no
(
  $as_echo "1006. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:202" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:202"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:203: \$builddir/test_mat -v 7.3 -c uint16 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c uint16 write_complex_2d_numeric" "mat73_write.at:203"
( $at_check_trace; $builddir/test_mat -v 7.3 -c uint16 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:203"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:204: cp \$srcdir/results/write_complex_2d_numeric-uint16.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:204"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-uint16.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:204"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:206" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:206"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:207: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint16';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:207"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint16';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:207"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1006
#AT_START_1007
at_fn_group_banner 1007 'mat73_write.at:211' \
  "Write 2D complex int8 array" "                    " 15
at_xfail=no
(
  $as_echo "1007. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:212" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:212"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:213: \$builddir/test_mat -v 7.3 -c int8 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c int8 write_complex_2d_numeric" "mat73_write.at:213"
( $at_check_trace; $builddir/test_mat -v 7.3 -c int8 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:213"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:214: cp \$srcdir/results/write_complex_2d_numeric-int8.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:214"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-int8.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:214"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:216" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:216"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:217: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int8';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:217"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int8';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:217"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1007
#AT_START_1008
at_fn_group_banner 1008 'mat73_write.at:221' \
  "Write 2D complex uint8 array" "                   " 15
at_xfail=no
(
  $as_echo "1008. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:222" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:222"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:223: \$builddir/test_mat -v 7.3 -c uint8 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c uint8 write_complex_2d_numeric" "mat73_write.at:223"
( $at_check_trace; $builddir/test_mat -v 7.3 -c uint8 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:223"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:224: cp \$srcdir/results/write_complex_2d_numeric-uint8.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:224"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-uint8.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:224"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:226" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:226"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:227: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint8';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:227"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint8';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:227"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1008
#AT_START_1009
at_fn_group_banner 1009 'mat73_write.at:231' \
  "Write 2D logical array" "                         " 15
at_xfail=no
(
  $as_echo "1009. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:232" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:232"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:233: \$builddir/test_mat -v 7.3 write_2d_logical"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 write_2d_logical" "mat73_write.at:233"
( $at_check_trace; $builddir/test_mat -v 7.3 write_2d_logical
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:233"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:234: cp \$srcdir/results/write_2d_numeric-l1-logical.out expout
          \$builddir/test_mat readvar test_write_2d_logical.mat l1"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:234"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-l1-logical.out expout
          $builddir/test_mat readvar test_write_2d_logical.mat l1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:234"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:236: cp \$srcdir/results/write_2d_numeric-73-l2-logical.out expout
          \$builddir/test_mat readvar test_write_2d_logical.mat l2"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:236"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-73-l2-logical.out expout
          $builddir/test_mat readvar test_write_2d_logical.mat l2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:236"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:238: cp \$srcdir/results/write_2d_numeric-73-l4-logical.out expout
          \$builddir/test_mat readvar test_write_2d_logical.mat l4"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:238"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-73-l4-logical.out expout
          $builddir/test_mat readvar test_write_2d_logical.mat l4
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:238"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:240" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:240"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:241: cp \$srcdir/matlab/test_write_2d_logical.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_2d_logical\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:241"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_logical.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_2d_logical" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:241"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1009
#AT_START_1010
at_fn_group_banner 1010 'mat73_write.at:245' \
  "Write 2D sparse double array" "                   " 15
at_xfail=no
(
  $as_echo "1010. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:246" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:246"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:247: \$builddir/test_mat -v 7.3 -c double write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c double write_sparse" "mat73_write.at:247"
( $at_check_trace; $builddir/test_mat -v 7.3 -c double write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:247"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:248: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-double.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:248"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-double.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:248"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:250" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:250"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:251: cp \$srcdir/matlab/test_write_sparse.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_sparse\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:251"
( $at_check_trace; cp $srcdir/matlab/test_write_sparse.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_sparse" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:251"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1010
#AT_START_1011
at_fn_group_banner 1011 'mat73_write.at:255' \
  "Write 2D sparse complex double array" "           " 15
at_xfail=no
(
  $as_echo "1011. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:256" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:256"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:257: \$builddir/test_mat -v 7.3 -c double write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c double write_complex_sparse" "mat73_write.at:257"
( $at_check_trace; $builddir/test_mat -v 7.3 -c double write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:257"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:258: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-double.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:258"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-double.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:258"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:260" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:260"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:261: cp \$srcdir/matlab/test_write_sparse_complex.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_sparse_complex\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:261"
( $at_check_trace; cp $srcdir/matlab/test_write_sparse_complex.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_sparse_complex" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:261"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1011
#AT_START_1012
at_fn_group_banner 1012 'mat73_write.at:265' \
  "Write 2D empty array" "                           " 15
at_xfail=no
(
  $as_echo "1012. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_write.at:267" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:267"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:268: \$builddir/test_mat -v 7.3 -c double write_empty_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c double write_empty_2d_numeric" "mat73_write.at:268"
( $at_check_trace; $builddir/test_mat -v 7.3 -c double write_empty_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:268"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:269: cp \$srcdir/results/readvar-write_empty_2d_numeric-empty.out expout
          \$builddir/test_mat readvar test_write_empty_2d_numeric.mat empty"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:269"
( $at_check_trace; cp $srcdir/results/readvar-write_empty_2d_numeric-empty.out expout
          $builddir/test_mat readvar test_write_empty_2d_numeric.mat empty
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:269"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:271" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:271"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:272: cp \$srcdir/matlab/test_write_empty.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_empty\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:272"
( $at_check_trace; cp $srcdir/matlab/test_write_empty.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_empty" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:272"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1012
#AT_START_1013
at_fn_group_banner 1013 'mat73_write.at:276' \
  "Write character array" "                          " 15
at_xfail=no
(
  $as_echo "1013. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:277" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:277"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:278: \$builddir/test_mat -v 7.3 write_char"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 write_char" "mat73_write.at:278"
( $at_check_trace; $builddir/test_mat -v 7.3 write_char
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:278"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:279: cp \$srcdir/results/readvar-write_char-a.out expout
          \$builddir/test_mat readvar test_write_char.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:279"
( $at_check_trace; cp $srcdir/results/readvar-write_char-a.out expout
          $builddir/test_mat readvar test_write_char.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:279"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:281" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:281"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:282: cp \$srcdir/matlab/test_write_char.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_char\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:282"
( $at_check_trace; cp $srcdir/matlab/test_write_char.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_char" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:282"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1013
#AT_START_1014
at_fn_group_banner 1014 'mat73_write.at:286' \
  "Write empty struct" "                             " 15
at_xfail=no
(
  $as_echo "1014. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_write.at:288" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:288"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:289: \$builddir/test_mat -v 7.3 write_empty_struct"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 write_empty_struct" "mat73_write.at:289"
( $at_check_trace; $builddir/test_mat -v 7.3 write_empty_struct
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:289"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:290: cp \$srcdir/results/readvar-write_empty_struct-var1.out expout
          \$builddir/test_mat readvar test_write_empty_struct.mat var1"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:290"
( $at_check_trace; cp $srcdir/results/readvar-write_empty_struct-var1.out expout
          $builddir/test_mat readvar test_write_empty_struct.mat var1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:290"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:292: cp \$srcdir/results/readvar-write_empty_struct-var2.out expout
          \$builddir/test_mat readvar test_write_empty_struct.mat var2"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:292"
( $at_check_trace; cp $srcdir/results/readvar-write_empty_struct-var2.out expout
          $builddir/test_mat readvar test_write_empty_struct.mat var2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:292"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:294: cp \$srcdir/results/readvar-write_empty_struct-var3.out expout
          \$builddir/test_mat readvar test_write_empty_struct.mat var3"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:294"
( $at_check_trace; cp $srcdir/results/readvar-write_empty_struct-var3.out expout
          $builddir/test_mat readvar test_write_empty_struct.mat var3
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:294"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:296: cp \$srcdir/results/readvar-write_empty_struct-var4.out expout
          \$builddir/test_mat readvar test_write_empty_struct.mat var4"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:296"
( $at_check_trace; cp $srcdir/results/readvar-write_empty_struct-var4.out expout
          $builddir/test_mat readvar test_write_empty_struct.mat var4
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:296"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:298" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:298"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:299: cp \$srcdir/matlab/test_write_empty_struct.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_empty_struct\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:299"
( $at_check_trace; cp $srcdir/matlab/test_write_empty_struct.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_empty_struct" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:299"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1014
#AT_START_1015
at_fn_group_banner 1015 'mat73_write.at:303' \
  "Write struct with 2D double fields" "             " 15
at_xfail=no
(
  $as_echo "1015. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:304" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:304"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:305: \$builddir/test_mat -v 7.3 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 write_struct_2d_numeric" "mat73_write.at:305"
( $at_check_trace; $builddir/test_mat -v 7.3 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:305"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:306: cp \$srcdir/results/write_struct_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:306"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:306"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:308" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:308"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:309: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:309"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:309"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1015
#AT_START_1016
at_fn_group_banner 1016 'mat73_write.at:313' \
  "Write struct with 2D single fields" "             " 15
at_xfail=no
(
  $as_echo "1016. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:314" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:314"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:315: \$builddir/test_mat -v 7.3 -c single write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c single write_struct_2d_numeric" "mat73_write.at:315"
( $at_check_trace; $builddir/test_mat -v 7.3 -c single write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:315"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:316: cp \$srcdir/results/write_struct_2d_numeric-single.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:316"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-single.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:316"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:318" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:318"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:319: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='single';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:319"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='single';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:319"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1016
#AT_START_1017
at_fn_group_banner 1017 'mat73_write.at:323' \
  "Write struct with 2D int64 fields" "              " 15
at_xfail=no
(
  $as_echo "1017. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:324" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:324"
$as_echo "mat73_write.at:325" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:325"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:326: \$builddir/test_mat -v 7.3 -c int64 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c int64 write_struct_2d_numeric" "mat73_write.at:326"
( $at_check_trace; $builddir/test_mat -v 7.3 -c int64 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:326"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:327: cp \$srcdir/results/write_struct_2d_numeric-int64.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:327"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-int64.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:327"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:329" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:329"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:330: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int64';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:330"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int64';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:330"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1017
#AT_START_1018
at_fn_group_banner 1018 'mat73_write.at:334' \
  "Write struct with 2D uint64 fields" "             " 15
at_xfail=no
(
  $as_echo "1018. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:335" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:335"
$as_echo "mat73_write.at:336" >"$at_check_line_file"
(test $HAVE_UINT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:336"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:337: \$builddir/test_mat -v 7.3 -c uint64 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c uint64 write_struct_2d_numeric" "mat73_write.at:337"
( $at_check_trace; $builddir/test_mat -v 7.3 -c uint64 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:337"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:338: cp \$srcdir/results/write_struct_2d_numeric-uint64.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:338"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-uint64.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:338"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:340" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:340"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:341: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint64';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:341"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint64';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:341"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1018
#AT_START_1019
at_fn_group_banner 1019 'mat73_write.at:345' \
  "Write struct with 2D int32 fields" "              " 15
at_xfail=no
(
  $as_echo "1019. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:346" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:346"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:347: \$builddir/test_mat -v 7.3 -c int32 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c int32 write_struct_2d_numeric" "mat73_write.at:347"
( $at_check_trace; $builddir/test_mat -v 7.3 -c int32 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:347"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:348: cp \$srcdir/results/write_struct_2d_numeric-int32.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:348"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-int32.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:348"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:350" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:350"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:351: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int32';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:351"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int32';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:351"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1019
#AT_START_1020
at_fn_group_banner 1020 'mat73_write.at:355' \
  "Write struct with 2D uint32 fields" "             " 15
at_xfail=no
(
  $as_echo "1020. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:356" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:356"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:357: \$builddir/test_mat -v 7.3 -c uint32 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c uint32 write_struct_2d_numeric" "mat73_write.at:357"
( $at_check_trace; $builddir/test_mat -v 7.3 -c uint32 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:357"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:358: cp \$srcdir/results/write_struct_2d_numeric-uint32.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:358"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-uint32.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:358"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:360" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:360"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:361: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint32';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:361"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint32';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:361"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1020
#AT_START_1021
at_fn_group_banner 1021 'mat73_write.at:365' \
  "Write struct with 2D int16 fields" "              " 15
at_xfail=no
(
  $as_echo "1021. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:366" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:366"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:367: \$builddir/test_mat -v 7.3 -c int16 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c int16 write_struct_2d_numeric" "mat73_write.at:367"
( $at_check_trace; $builddir/test_mat -v 7.3 -c int16 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:367"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:368: cp \$srcdir/results/write_struct_2d_numeric-int16.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:368"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-int16.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:368"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:370" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:370"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:371: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int16';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:371"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int16';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:371"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1021
#AT_START_1022
at_fn_group_banner 1022 'mat73_write.at:375' \
  "Write struct with 2D uint16 fields" "             " 15
at_xfail=no
(
  $as_echo "1022. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:376" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:376"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:377: \$builddir/test_mat -v 7.3 -c uint16 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c uint16 write_struct_2d_numeric" "mat73_write.at:377"
( $at_check_trace; $builddir/test_mat -v 7.3 -c uint16 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:377"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:378: cp \$srcdir/results/write_struct_2d_numeric-uint16.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:378"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-uint16.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:378"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:380" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:380"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:381: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint16';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:381"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint16';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:381"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1022
#AT_START_1023
at_fn_group_banner 1023 'mat73_write.at:385' \
  "Write struct with 2D int8 fields" "               " 15
at_xfail=no
(
  $as_echo "1023. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:386" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:386"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:387: \$builddir/test_mat -v 7.3 -c int8 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c int8 write_struct_2d_numeric" "mat73_write.at:387"
( $at_check_trace; $builddir/test_mat -v 7.3 -c int8 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:387"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:388: cp \$srcdir/results/write_struct_2d_numeric-int8.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:388"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-int8.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:388"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:390" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:390"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:391: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int8';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:391"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int8';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:391"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1023
#AT_START_1024
at_fn_group_banner 1024 'mat73_write.at:395' \
  "Write struct with 2D uint8 fields" "              " 15
at_xfail=no
(
  $as_echo "1024. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:396" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:396"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:397: \$builddir/test_mat -v 7.3 -c uint8 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c uint8 write_struct_2d_numeric" "mat73_write.at:397"
( $at_check_trace; $builddir/test_mat -v 7.3 -c uint8 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:397"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:398: cp \$srcdir/results/write_struct_2d_numeric-uint8.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:398"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-uint8.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:398"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:400" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:400"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:401: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint8';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:401"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint8';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:401"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1024
#AT_START_1025
at_fn_group_banner 1025 'mat73_write.at:405' \
  "Write struct with 2D complex double fields" "     " 15
at_xfail=no
(
  $as_echo "1025. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:406" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:406"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:407: \$builddir/test_mat -v 7.3 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 write_struct_complex_2d_numeric" "mat73_write.at:407"
( $at_check_trace; $builddir/test_mat -v 7.3 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:407"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:408: cp \$srcdir/results/write_struct_complex_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:408"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:408"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:410" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:410"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:411: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:411"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:411"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1025
#AT_START_1026
at_fn_group_banner 1026 'mat73_write.at:415' \
  "Write struct with 2D complex single fields" "     " 15
at_xfail=no
(
  $as_echo "1026. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:416" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:416"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:417: \$builddir/test_mat -v 7.3 -c single write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c single write_struct_complex_2d_numeric" "mat73_write.at:417"
( $at_check_trace; $builddir/test_mat -v 7.3 -c single write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:417"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:418: cp \$srcdir/results/write_struct_complex_2d_numeric-single.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:418"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-single.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:418"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:420" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:420"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:421: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='single';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:421"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='single';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:421"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1026
#AT_START_1027
at_fn_group_banner 1027 'mat73_write.at:425' \
  "Write struct with 2D complex int64 fields" "      " 15
at_xfail=no
(
  $as_echo "1027. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:426" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:426"
$as_echo "mat73_write.at:427" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:427"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:428: \$builddir/test_mat -v 7.3 -c int64 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c int64 write_struct_complex_2d_numeric" "mat73_write.at:428"
( $at_check_trace; $builddir/test_mat -v 7.3 -c int64 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:428"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:429: cp \$srcdir/results/write_struct_complex_2d_numeric-int64.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:429"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-int64.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:429"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:431" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:431"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:432: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int64';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:432"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int64';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:432"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1027
#AT_START_1028
at_fn_group_banner 1028 'mat73_write.at:436' \
  "Write struct with 2D complex uint64 fields" "     " 15
at_xfail=no
(
  $as_echo "1028. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:437" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:437"
$as_echo "mat73_write.at:438" >"$at_check_line_file"
(test $HAVE_UINT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:438"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:439: \$builddir/test_mat -v 7.3 -c uint64 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c uint64 write_struct_complex_2d_numeric" "mat73_write.at:439"
( $at_check_trace; $builddir/test_mat -v 7.3 -c uint64 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:439"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:440: cp \$srcdir/results/write_struct_complex_2d_numeric-uint64.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:440"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-uint64.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:440"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:442" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:442"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:443: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint64';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:443"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint64';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:443"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1028
#AT_START_1029
at_fn_group_banner 1029 'mat73_write.at:447' \
  "Write struct with 2D complex int32 fields" "      " 15
at_xfail=no
(
  $as_echo "1029. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:448" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:448"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:449: \$builddir/test_mat -v 7.3 -c int32 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c int32 write_struct_complex_2d_numeric" "mat73_write.at:449"
( $at_check_trace; $builddir/test_mat -v 7.3 -c int32 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:449"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:450: cp \$srcdir/results/write_struct_complex_2d_numeric-int32.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:450"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-int32.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:450"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:452" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:452"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:453: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int32';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:453"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int32';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:453"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1029
#AT_START_1030
at_fn_group_banner 1030 'mat73_write.at:457' \
  "Write struct with 2D complex uint32 fields" "     " 15
at_xfail=no
(
  $as_echo "1030. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:458" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:458"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:459: \$builddir/test_mat -v 7.3 -c uint32 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c uint32 write_struct_complex_2d_numeric" "mat73_write.at:459"
( $at_check_trace; $builddir/test_mat -v 7.3 -c uint32 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:459"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:460: cp \$srcdir/results/write_struct_complex_2d_numeric-uint32.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:460"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-uint32.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:460"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:462" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:462"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:463: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint32';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:463"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint32';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:463"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1030
#AT_START_1031
at_fn_group_banner 1031 'mat73_write.at:467' \
  "Write struct with 2D complex int16 fields" "      " 15
at_xfail=no
(
  $as_echo "1031. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:468" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:468"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:469: \$builddir/test_mat -v 7.3 -c int16 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c int16 write_struct_complex_2d_numeric" "mat73_write.at:469"
( $at_check_trace; $builddir/test_mat -v 7.3 -c int16 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:469"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:470: cp \$srcdir/results/write_struct_complex_2d_numeric-int16.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:470"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-int16.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:470"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:472" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:472"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:473: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int16';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:473"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int16';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:473"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1031
#AT_START_1032
at_fn_group_banner 1032 'mat73_write.at:477' \
  "Write struct with 2D complex uint16 fields" "     " 15
at_xfail=no
(
  $as_echo "1032. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:478" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:478"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:479: \$builddir/test_mat -v 7.3 -c uint16 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c uint16 write_struct_complex_2d_numeric" "mat73_write.at:479"
( $at_check_trace; $builddir/test_mat -v 7.3 -c uint16 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:479"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:480: cp \$srcdir/results/write_struct_complex_2d_numeric-uint16.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:480"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-uint16.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:480"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:482" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:482"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:483: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint16';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:483"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint16';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:483"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1032
#AT_START_1033
at_fn_group_banner 1033 'mat73_write.at:487' \
  "Write struct with 2D complex int8 fields" "       " 15
at_xfail=no
(
  $as_echo "1033. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:488" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:488"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:489: \$builddir/test_mat -v 7.3 -c int8 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c int8 write_struct_complex_2d_numeric" "mat73_write.at:489"
( $at_check_trace; $builddir/test_mat -v 7.3 -c int8 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:489"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:490: cp \$srcdir/results/write_struct_complex_2d_numeric-int8.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:490"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-int8.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:490"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:492" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:492"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:493: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int8';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:493"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int8';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:493"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1033
#AT_START_1034
at_fn_group_banner 1034 'mat73_write.at:497' \
  "Write struct with 2D complex uint8 fields" "      " 15
at_xfail=no
(
  $as_echo "1034. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:498" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:498"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:499: \$builddir/test_mat -v 7.3 -c uint8 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c uint8 write_struct_complex_2d_numeric" "mat73_write.at:499"
( $at_check_trace; $builddir/test_mat -v 7.3 -c uint8 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:499"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:500: cp \$srcdir/results/write_struct_complex_2d_numeric-uint8.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:500"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-uint8.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:500"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:502" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:502"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:503: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint8';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:503"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint8';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:503"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1034
#AT_START_1035
at_fn_group_banner 1035 'mat73_write.at:507' \
  "Write struct with 2D logical fields" "            " 15
at_xfail=no
(
  $as_echo "1035. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:508" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:508"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:509: \$builddir/test_mat -v 7.3 write_struct_2d_logical"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 write_struct_2d_logical" "mat73_write.at:509"
( $at_check_trace; $builddir/test_mat -v 7.3 write_struct_2d_logical
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:509"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:510: cp \$srcdir/results/write_struct_2d_numeric-73-logical.out expout
          \$builddir/test_mat readvar test_write_struct_2d_logical.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:510"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-73-logical.out expout
          $builddir/test_mat readvar test_write_struct_2d_logical.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:510"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:512" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:512"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:513: cp \$srcdir/matlab/test_write_struct_2d_logical.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_struct_2d_logical\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:513"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_logical.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_struct_2d_logical" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:513"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1035
#AT_START_1036
at_fn_group_banner 1036 'mat73_write.at:517' \
  "Write struct with character fields" "             " 15
at_xfail=no
(
  $as_echo "1036. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_write.at:519" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:519"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:520: \$builddir/test_mat -v 7.3 write_struct_char"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 write_struct_char" "mat73_write.at:520"
( $at_check_trace; $builddir/test_mat -v 7.3 write_struct_char
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:520"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:521: cp \$srcdir/results/write_struct_char.out expout
          \$builddir/test_mat readvar test_write_struct_char.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:521"
( $at_check_trace; cp $srcdir/results/write_struct_char.out expout
          $builddir/test_mat readvar test_write_struct_char.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:521"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:523" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:523"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:524: cp \$srcdir/matlab/test_write_struct_char.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_struct_char\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:524"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_char.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_struct_char" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:524"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1036
#AT_START_1037
at_fn_group_banner 1037 'mat73_write.at:528' \
  "Write empty cell array" "                         " 15
at_xfail=no
(
  $as_echo "1037. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:529" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:529"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:530: \$builddir/test_mat -v 7.3 write_empty_cell"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 write_empty_cell" "mat73_write.at:530"
( $at_check_trace; $builddir/test_mat -v 7.3 write_empty_cell
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:530"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:531: cp \$srcdir/results/readvar-write_empty_cell-var1.out expout
          \$builddir/test_mat readvar test_write_empty_cell.mat var1"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:531"
( $at_check_trace; cp $srcdir/results/readvar-write_empty_cell-var1.out expout
          $builddir/test_mat readvar test_write_empty_cell.mat var1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:531"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:533: cp \$srcdir/results/readvar-write_empty_cell-var2.out expout
          \$builddir/test_mat readvar test_write_empty_cell.mat var2"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:533"
( $at_check_trace; cp $srcdir/results/readvar-write_empty_cell-var2.out expout
          $builddir/test_mat readvar test_write_empty_cell.mat var2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:533"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:535" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:535"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:536: cp \$srcdir/matlab/test_write_empty_cell.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_empty_cell\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:536"
( $at_check_trace; cp $srcdir/matlab/test_write_empty_cell.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_empty_cell" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:536"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1037
#AT_START_1038
at_fn_group_banner 1038 'mat73_write.at:540' \
  "Write cell array with 2D double fields" "         " 15
at_xfail=no
(
  $as_echo "1038. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:541" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:541"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:542: \$builddir/test_mat -v 7.3 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 write_cell_2d_numeric" "mat73_write.at:542"
( $at_check_trace; $builddir/test_mat -v 7.3 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:542"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:543: cp \$srcdir/results/write_cell_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:543"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:543"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:545" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:545"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:546: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:546"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:546"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1038
#AT_START_1039
at_fn_group_banner 1039 'mat73_write.at:550' \
  "Write cell array with 2D single fields" "         " 15
at_xfail=no
(
  $as_echo "1039. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:551" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:551"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:552: \$builddir/test_mat -v 7.3 -c single write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c single write_cell_2d_numeric" "mat73_write.at:552"
( $at_check_trace; $builddir/test_mat -v 7.3 -c single write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:552"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:553: cp \$srcdir/results/write_cell_2d_numeric-single.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:553"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-single.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:553"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:555" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:555"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:556: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='single';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:556"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='single';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:556"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1039
#AT_START_1040
at_fn_group_banner 1040 'mat73_write.at:560' \
  "Write cell array with 2D int64 fields" "          " 15
at_xfail=no
(
  $as_echo "1040. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:561" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:561"
$as_echo "mat73_write.at:562" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:562"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:563: \$builddir/test_mat -v 7.3 -c int64 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c int64 write_cell_2d_numeric" "mat73_write.at:563"
( $at_check_trace; $builddir/test_mat -v 7.3 -c int64 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:563"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:564: cp \$srcdir/results/write_cell_2d_numeric-int64.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:564"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-int64.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:564"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:566" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:566"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:567: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int64';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:567"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int64';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:567"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1040
#AT_START_1041
at_fn_group_banner 1041 'mat73_write.at:571' \
  "Write cell array with 2D uint64 fields" "         " 15
at_xfail=no
(
  $as_echo "1041. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:572" >"$at_check_line_file"
(test $HAVE_UINT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:572"
$as_echo "mat73_write.at:573" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:573"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:574: \$builddir/test_mat -v 7.3 -c uint64 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c uint64 write_cell_2d_numeric" "mat73_write.at:574"
( $at_check_trace; $builddir/test_mat -v 7.3 -c uint64 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:574"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:575: cp \$srcdir/results/write_cell_2d_numeric-uint64.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:575"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-uint64.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:575"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:577" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:577"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:578: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint64';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:578"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint64';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:578"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1041
#AT_START_1042
at_fn_group_banner 1042 'mat73_write.at:582' \
  "Write cell array with 2D int32 fields" "          " 15
at_xfail=no
(
  $as_echo "1042. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:583" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:583"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:584: \$builddir/test_mat -v 7.3 -c int32 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c int32 write_cell_2d_numeric" "mat73_write.at:584"
( $at_check_trace; $builddir/test_mat -v 7.3 -c int32 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:584"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:585: cp \$srcdir/results/write_cell_2d_numeric-int32.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:585"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-int32.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:585"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:587" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:587"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:588: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int32';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:588"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int32';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:588"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1042
#AT_START_1043
at_fn_group_banner 1043 'mat73_write.at:592' \
  "Write cell array with 2D uint32 fields" "         " 15
at_xfail=no
(
  $as_echo "1043. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:593" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:593"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:594: \$builddir/test_mat -v 7.3 -c uint32 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c uint32 write_cell_2d_numeric" "mat73_write.at:594"
( $at_check_trace; $builddir/test_mat -v 7.3 -c uint32 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:594"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:595: cp \$srcdir/results/write_cell_2d_numeric-uint32.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:595"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-uint32.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:595"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:597" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:597"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:598: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint32';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:598"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint32';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:598"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1043
#AT_START_1044
at_fn_group_banner 1044 'mat73_write.at:602' \
  "Write cell array with 2D int16 fields" "          " 15
at_xfail=no
(
  $as_echo "1044. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:603" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:603"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:604: \$builddir/test_mat -v 7.3 -c int16 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c int16 write_cell_2d_numeric" "mat73_write.at:604"
( $at_check_trace; $builddir/test_mat -v 7.3 -c int16 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:604"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:605: cp \$srcdir/results/write_cell_2d_numeric-int16.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:605"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-int16.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:605"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:607" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:607"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:608: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int16';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:608"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int16';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:608"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1044
#AT_START_1045
at_fn_group_banner 1045 'mat73_write.at:612' \
  "Write cell array with 2D uint16 fields" "         " 15
at_xfail=no
(
  $as_echo "1045. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:613" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:613"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:614: \$builddir/test_mat -v 7.3 -c uint16 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c uint16 write_cell_2d_numeric" "mat73_write.at:614"
( $at_check_trace; $builddir/test_mat -v 7.3 -c uint16 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:614"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:615: cp \$srcdir/results/write_cell_2d_numeric-uint16.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:615"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-uint16.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:615"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:617" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:617"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:618: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint16';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:618"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint16';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:618"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1045
#AT_START_1046
at_fn_group_banner 1046 'mat73_write.at:622' \
  "Write cell array with 2D int8 fields" "           " 15
at_xfail=no
(
  $as_echo "1046. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:623" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:623"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:624: \$builddir/test_mat -v 7.3 -c int8 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c int8 write_cell_2d_numeric" "mat73_write.at:624"
( $at_check_trace; $builddir/test_mat -v 7.3 -c int8 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:624"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:625: cp \$srcdir/results/write_cell_2d_numeric-int8.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:625"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-int8.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:625"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:627" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:627"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:628: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int8';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:628"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int8';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:628"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1046
#AT_START_1047
at_fn_group_banner 1047 'mat73_write.at:632' \
  "Write cell array with 2D uint8 fields" "          " 15
at_xfail=no
(
  $as_echo "1047. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:633" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:633"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:634: \$builddir/test_mat -v 7.3 -c uint8 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c uint8 write_cell_2d_numeric" "mat73_write.at:634"
( $at_check_trace; $builddir/test_mat -v 7.3 -c uint8 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:634"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:635: cp \$srcdir/results/write_cell_2d_numeric-uint8.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:635"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-uint8.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:635"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:637" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:637"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:638: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint8';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:638"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint8';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:638"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1047
#AT_START_1048
at_fn_group_banner 1048 'mat73_write.at:642' \
  "Write cell array with 2D complex double fields" " " 15
at_xfail=no
(
  $as_echo "1048. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:643" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:643"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:644: \$builddir/test_mat -v 7.3 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 write_cell_complex_2d_numeric" "mat73_write.at:644"
( $at_check_trace; $builddir/test_mat -v 7.3 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:644"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:645: cp \$srcdir/results/write_cell_complex_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:645"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:645"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:647" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:647"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:648: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:648"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:648"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1048
#AT_START_1049
at_fn_group_banner 1049 'mat73_write.at:652' \
  "Write cell array with 2D complex single fields" " " 15
at_xfail=no
(
  $as_echo "1049. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:653" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:653"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:654: \$builddir/test_mat -v 7.3 -c single write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c single write_cell_complex_2d_numeric" "mat73_write.at:654"
( $at_check_trace; $builddir/test_mat -v 7.3 -c single write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:654"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:655: cp \$srcdir/results/write_cell_complex_2d_numeric-single.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:655"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-single.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:655"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:657" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:657"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:658: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='single';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:658"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='single';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:658"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1049
#AT_START_1050
at_fn_group_banner 1050 'mat73_write.at:662' \
  "Write cell array with 2D complex int64 fields" "  " 15
at_xfail=no
(
  $as_echo "1050. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:663" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:663"
$as_echo "mat73_write.at:664" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:664"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:665: \$builddir/test_mat -v 7.3 -c int64 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c int64 write_cell_complex_2d_numeric" "mat73_write.at:665"
( $at_check_trace; $builddir/test_mat -v 7.3 -c int64 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:665"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:666: cp \$srcdir/results/write_cell_complex_2d_numeric-int64.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:666"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-int64.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:666"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:668" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:668"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:669: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int64';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:669"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int64';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:669"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1050
#AT_START_1051
at_fn_group_banner 1051 'mat73_write.at:673' \
  "Write cell array with 2D complex uint64 fields" " " 15
at_xfail=no
(
  $as_echo "1051. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:674" >"$at_check_line_file"
(test $HAVE_UINT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:674"
$as_echo "mat73_write.at:675" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:675"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:676: \$builddir/test_mat -v 7.3 -c uint64 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c uint64 write_cell_complex_2d_numeric" "mat73_write.at:676"
( $at_check_trace; $builddir/test_mat -v 7.3 -c uint64 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:676"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:677: cp \$srcdir/results/write_cell_complex_2d_numeric-uint64.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:677"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-uint64.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:677"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:679" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:679"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:680: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint64';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:680"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint64';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:680"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1051
#AT_START_1052
at_fn_group_banner 1052 'mat73_write.at:684' \
  "Write cell array with 2D complex int32 fields" "  " 15
at_xfail=no
(
  $as_echo "1052. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:685" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:685"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:686: \$builddir/test_mat -v 7.3 -c int32 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c int32 write_cell_complex_2d_numeric" "mat73_write.at:686"
( $at_check_trace; $builddir/test_mat -v 7.3 -c int32 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:686"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:687: cp \$srcdir/results/write_cell_complex_2d_numeric-int32.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:687"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-int32.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:687"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:689" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:689"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:690: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int32';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:690"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int32';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:690"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1052
#AT_START_1053
at_fn_group_banner 1053 'mat73_write.at:694' \
  "Write cell array with 2D complex uint32 fields" " " 15
at_xfail=no
(
  $as_echo "1053. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:695" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:695"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:696: \$builddir/test_mat -v 7.3 -c uint32 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c uint32 write_cell_complex_2d_numeric" "mat73_write.at:696"
( $at_check_trace; $builddir/test_mat -v 7.3 -c uint32 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:696"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:697: cp \$srcdir/results/write_cell_complex_2d_numeric-uint32.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:697"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-uint32.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:697"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:699" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:699"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:700: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint32';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:700"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint32';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:700"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1053
#AT_START_1054
at_fn_group_banner 1054 'mat73_write.at:704' \
  "Write cell array with 2D complex int16 fields" "  " 15
at_xfail=no
(
  $as_echo "1054. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:705" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:705"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:706: \$builddir/test_mat -v 7.3 -c int16 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c int16 write_cell_complex_2d_numeric" "mat73_write.at:706"
( $at_check_trace; $builddir/test_mat -v 7.3 -c int16 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:706"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:707: cp \$srcdir/results/write_cell_complex_2d_numeric-int16.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:707"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-int16.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:707"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:709" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:709"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:710: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int16';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:710"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int16';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:710"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1054
#AT_START_1055
at_fn_group_banner 1055 'mat73_write.at:714' \
  "Write cell array with 2D complex uint16 fields" " " 15
at_xfail=no
(
  $as_echo "1055. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:715" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:715"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:716: \$builddir/test_mat -v 7.3 -c uint16 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c uint16 write_cell_complex_2d_numeric" "mat73_write.at:716"
( $at_check_trace; $builddir/test_mat -v 7.3 -c uint16 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:716"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:717: cp \$srcdir/results/write_cell_complex_2d_numeric-uint16.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:717"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-uint16.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:717"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:719" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:719"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:720: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint16';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:720"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint16';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:720"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1055
#AT_START_1056
at_fn_group_banner 1056 'mat73_write.at:724' \
  "Write cell array with 2D complex int8 fields" "   " 15
at_xfail=no
(
  $as_echo "1056. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:725" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:725"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:726: \$builddir/test_mat -v 7.3 -c int8 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c int8 write_cell_complex_2d_numeric" "mat73_write.at:726"
( $at_check_trace; $builddir/test_mat -v 7.3 -c int8 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:726"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:727: cp \$srcdir/results/write_cell_complex_2d_numeric-int8.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:727"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-int8.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:727"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:729" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:729"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:730: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int8';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:730"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int8';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:730"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1056
#AT_START_1057
at_fn_group_banner 1057 'mat73_write.at:734' \
  "Write cell array with 2D complex uint8 fields" "  " 15
at_xfail=no
(
  $as_echo "1057. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:735" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:735"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:736: \$builddir/test_mat -v 7.3 -c uint8 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c uint8 write_cell_complex_2d_numeric" "mat73_write.at:736"
( $at_check_trace; $builddir/test_mat -v 7.3 -c uint8 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:736"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:737: cp \$srcdir/results/write_cell_complex_2d_numeric-uint8.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:737"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-uint8.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:737"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:739" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:739"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:740: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint8';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:740"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint8';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:740"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1057
#AT_START_1058
at_fn_group_banner 1058 'mat73_write.at:744' \
  "Write cell array with 2D logical fields" "        " 15
at_xfail=no
(
  $as_echo "1058. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_write.at:745" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:745"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:746: \$builddir/test_mat -v 7.3 write_cell_2d_logical"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 write_cell_2d_logical" "mat73_write.at:746"
( $at_check_trace; $builddir/test_mat -v 7.3 write_cell_2d_logical
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:746"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:747: cp \$srcdir/results/write_cell_numeric-73-logical.out expout
          \$builddir/test_mat readvar test_write_cell_2d_logical.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:747"
( $at_check_trace; cp $srcdir/results/write_cell_numeric-73-logical.out expout
          $builddir/test_mat readvar test_write_cell_2d_logical.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:747"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:749" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:749"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:750: cp \$srcdir/matlab/test_write_cell_2d_logical.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_cell_2d_logical\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:750"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_logical.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_cell_2d_logical" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:750"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1058
#AT_START_1059
at_fn_group_banner 1059 'mat73_write.at:754' \
  "Write cell array with empty struct fields" "      " 15
at_xfail=no
(
  $as_echo "1059. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_write.at:756" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:756"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:757: \$builddir/test_mat -v 7.3 write_cell_empty_struct"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 write_cell_empty_struct" "mat73_write.at:757"
( $at_check_trace; $builddir/test_mat -v 7.3 write_cell_empty_struct
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:757"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_write.at:758: cp \$srcdir/results/readvar-write_cell_empty_struct-var1.out expout
          \$builddir/test_mat readvar test_write_cell_empty_struct.mat var1"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:758"
( $at_check_trace; cp $srcdir/results/readvar-write_cell_empty_struct-var1.out expout
          $builddir/test_mat readvar test_write_cell_empty_struct.mat var1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:758"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_write.at:760" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_write.at:760"
{ set +x
$as_echo "$at_srcdir/mat73_write.at:761: cp \$srcdir/matlab/test_write_cell_empty_struct.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_cell_empty_struct\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_write.at:761"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_empty_struct.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_cell_empty_struct" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_write.at:761"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1059
#AT_START_1060
at_fn_group_banner 1060 'mat73_readwrite.at:27' \
  "Copy variables" "                                 " 16
at_xfail=no
(
  $as_echo "1060. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readwrite.at:29" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readwrite.at:29"
$as_echo "mat73_readwrite.at:30" >"$at_check_line_file"
(! grep -q "#define SIZEOF_VOID_P 4" $abs_top_builddir/src/matioConfig.h) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readwrite.at:30"
{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:31: \$builddir/test_mat -v 7.3 copy \$srcdir/datasets/matio_test_cases_hdf_le.mat"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 copy $srcdir/datasets/matio_test_cases_hdf_le.mat" "mat73_readwrite.at:31"
( $at_check_trace; $builddir/test_mat -v 7.3 copy $srcdir/datasets/matio_test_cases_hdf_le.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:31"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:32: cp \$srcdir/results/dump-mat_copy-73_32.out expout
          \$builddir/../tools/matdump -f whos -h -d test_mat_copy.mat"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readwrite.at:32"
( $at_check_trace; cp $srcdir/results/dump-mat_copy-73_32.out expout
          $builddir/../tools/matdump -f whos -h -d test_mat_copy.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:32"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1060
#AT_START_1061
at_fn_group_banner 1061 'mat73_readwrite.at:36' \
  "Copy variables" "                                 " 16
at_xfail=no
(
  $as_echo "1061. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readwrite.at:38" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readwrite.at:38"
$as_echo "mat73_readwrite.at:39" >"$at_check_line_file"
(! grep -q "#define SIZEOF_VOID_P 8" $abs_top_builddir/src/matioConfig.h) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readwrite.at:39"
{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:40: \$builddir/test_mat -v 7.3 copy \$srcdir/datasets/matio_test_cases_hdf_le.mat"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 copy $srcdir/datasets/matio_test_cases_hdf_le.mat" "mat73_readwrite.at:40"
( $at_check_trace; $builddir/test_mat -v 7.3 copy $srcdir/datasets/matio_test_cases_hdf_le.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:40"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:41: cp \$srcdir/results/dump-mat_copy-73.out expout
          \$builddir/../tools/matdump -f whos -h -d test_mat_copy.mat"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readwrite.at:41"
( $at_check_trace; cp $srcdir/results/dump-mat_copy-73.out expout
          $builddir/../tools/matdump -f whos -h -d test_mat_copy.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:41"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1061
#AT_START_1062
at_fn_group_banner 1062 'mat73_readwrite.at:45' \
  "Delete variables" "                               " 16
at_xfail=no
(
  $as_echo "1062. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_readwrite.at:47" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_readwrite.at:47"
{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:48: \$builddir/test_mat -v 7.3 copy \$srcdir/datasets/matio_test_cases_hdf_be.mat"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 copy $srcdir/datasets/matio_test_cases_hdf_be.mat" "mat73_readwrite.at:48"
( $at_check_trace; $builddir/test_mat -v 7.3 copy $srcdir/datasets/matio_test_cases_hdf_be.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:48"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:49: \$builddir/test_mat delete test_mat_copy.mat var2"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var2" "mat73_readwrite.at:49"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:49"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:50: \$builddir/test_mat delete test_mat_copy.mat var3"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var3" "mat73_readwrite.at:50"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var3
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:50"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:51: \$builddir/test_mat delete test_mat_copy.mat var4"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var4" "mat73_readwrite.at:51"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var4
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:51"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:52: \$builddir/test_mat delete test_mat_copy.mat var5"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var5" "mat73_readwrite.at:52"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var5
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:52"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:53: \$builddir/test_mat delete test_mat_copy.mat var6"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var6" "mat73_readwrite.at:53"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var6
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:53"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:54: \$builddir/test_mat delete test_mat_copy.mat var7"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var7" "mat73_readwrite.at:54"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var7
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:54"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:55: \$builddir/test_mat delete test_mat_copy.mat var8"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var8" "mat73_readwrite.at:55"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var8
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:55"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:56: \$builddir/test_mat delete test_mat_copy.mat var9"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var9" "mat73_readwrite.at:56"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var9
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:56"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:57: \$builddir/test_mat delete test_mat_copy.mat var10"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var10" "mat73_readwrite.at:57"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var10
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:57"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:58: \$builddir/test_mat delete test_mat_copy.mat var11"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var11" "mat73_readwrite.at:58"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var11
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:58"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:59: \$builddir/test_mat delete test_mat_copy.mat var12"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var12" "mat73_readwrite.at:59"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var12
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:59"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:60: \$builddir/test_mat delete test_mat_copy.mat var13"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var13" "mat73_readwrite.at:60"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var13
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:60"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:61: \$builddir/test_mat delete test_mat_copy.mat var14"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var14" "mat73_readwrite.at:61"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var14
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:61"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:62: \$builddir/test_mat delete test_mat_copy.mat var15"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var15" "mat73_readwrite.at:62"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var15
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:62"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:63: \$builddir/test_mat delete test_mat_copy.mat var16"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var16" "mat73_readwrite.at:63"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var16
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:63"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:64: \$builddir/test_mat delete test_mat_copy.mat var17"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var17" "mat73_readwrite.at:64"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var17
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:64"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:65: \$builddir/test_mat delete test_mat_copy.mat var18"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var18" "mat73_readwrite.at:65"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var18
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:65"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:66: \$builddir/test_mat delete test_mat_copy.mat var19"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var19" "mat73_readwrite.at:66"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var19
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:66"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:67: \$builddir/test_mat delete test_mat_copy.mat var20"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var20" "mat73_readwrite.at:67"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var20
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:67"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:68: \$builddir/test_mat delete test_mat_copy.mat var21"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var21" "mat73_readwrite.at:68"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var21
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:68"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:69: \$builddir/test_mat delete test_mat_copy.mat var22"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var22" "mat73_readwrite.at:69"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var22
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:69"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:70: \$builddir/test_mat delete test_mat_copy.mat var23"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var23" "mat73_readwrite.at:70"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var23
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:70"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:71: \$builddir/test_mat delete test_mat_copy.mat var25"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var25" "mat73_readwrite.at:71"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var25
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:71"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:72: \$builddir/test_mat delete test_mat_copy.mat var26"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var26" "mat73_readwrite.at:72"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var26
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:72"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:73: \$builddir/test_mat delete test_mat_copy.mat var27"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var27" "mat73_readwrite.at:73"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var27
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:73"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:74: \$builddir/test_mat delete test_mat_copy.mat var28"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var28" "mat73_readwrite.at:74"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var28
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:74"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:75: \$builddir/test_mat delete test_mat_copy.mat var29"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var29" "mat73_readwrite.at:75"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var29
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:75"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:76: \$builddir/test_mat delete test_mat_copy.mat var30"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var30" "mat73_readwrite.at:76"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var30
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:76"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:77: \$builddir/test_mat delete test_mat_copy.mat var31"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var31" "mat73_readwrite.at:77"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var31
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:77"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:78: \$builddir/test_mat delete test_mat_copy.mat var32"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var32" "mat73_readwrite.at:78"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var32
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:78"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:79: \$builddir/test_mat delete test_mat_copy.mat var33"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var33" "mat73_readwrite.at:79"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var33
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:79"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:80: \$builddir/test_mat delete test_mat_copy.mat var34"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var34" "mat73_readwrite.at:80"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var34
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:80"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:81: \$builddir/test_mat delete test_mat_copy.mat var35"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var35" "mat73_readwrite.at:81"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var35
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:81"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:82: \$builddir/test_mat delete test_mat_copy.mat var36"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var36" "mat73_readwrite.at:82"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var36
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:82"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:83: \$builddir/test_mat delete test_mat_copy.mat var37"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var37" "mat73_readwrite.at:83"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var37
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:83"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:84: \$builddir/test_mat delete test_mat_copy.mat var38"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var38" "mat73_readwrite.at:84"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var38
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:84"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:85: \$builddir/test_mat delete test_mat_copy.mat var39"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var39" "mat73_readwrite.at:85"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var39
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:85"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:86: \$builddir/test_mat delete test_mat_copy.mat var40"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var40" "mat73_readwrite.at:86"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var40
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:86"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:87: \$builddir/test_mat delete test_mat_copy.mat var41"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var41" "mat73_readwrite.at:87"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var41
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:87"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:88: \$builddir/test_mat delete test_mat_copy.mat var42"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var42" "mat73_readwrite.at:88"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var42
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:88"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:89: \$builddir/test_mat delete test_mat_copy.mat var43"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var43" "mat73_readwrite.at:89"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var43
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:89"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:90: \$builddir/test_mat delete test_mat_copy.mat var44"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var44" "mat73_readwrite.at:90"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var44
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:90"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:91: \$builddir/test_mat delete test_mat_copy.mat var45"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var45" "mat73_readwrite.at:91"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var45
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:91"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:92: \$builddir/test_mat delete test_mat_copy.mat var46"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var46" "mat73_readwrite.at:92"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var46
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:92"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:93: \$builddir/test_mat delete test_mat_copy.mat var47"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var47" "mat73_readwrite.at:93"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var47
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:93"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:94: \$builddir/test_mat delete test_mat_copy.mat var48"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var48" "mat73_readwrite.at:94"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var48
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:94"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:95: \$builddir/test_mat delete test_mat_copy.mat var49"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var49" "mat73_readwrite.at:95"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var49
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:95"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:96: \$builddir/test_mat delete test_mat_copy.mat var50"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var50" "mat73_readwrite.at:96"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var50
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:96"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:97: \$builddir/test_mat delete test_mat_copy.mat var51"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var51" "mat73_readwrite.at:97"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var51
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:97"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:98: \$builddir/test_mat delete test_mat_copy.mat var52"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var52" "mat73_readwrite.at:98"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var52
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:98"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:99: \$builddir/test_mat delete test_mat_copy.mat var53"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var53" "mat73_readwrite.at:99"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var53
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:99"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:100: \$builddir/test_mat delete test_mat_copy.mat var54"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var54" "mat73_readwrite.at:100"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var54
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:100"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:101: \$builddir/test_mat delete test_mat_copy.mat var55"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var55" "mat73_readwrite.at:101"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var55
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:101"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:102: \$builddir/test_mat delete test_mat_copy.mat var56"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var56" "mat73_readwrite.at:102"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var56
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:102"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:103: \$builddir/test_mat delete test_mat_copy.mat var57"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var57" "mat73_readwrite.at:103"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var57
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:103"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:104: \$builddir/test_mat delete test_mat_copy.mat var58"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var58" "mat73_readwrite.at:104"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var58
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:104"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:105: \$builddir/test_mat delete test_mat_copy.mat var59"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var59" "mat73_readwrite.at:105"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var59
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:105"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:106: \$builddir/test_mat delete test_mat_copy.mat var60"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var60" "mat73_readwrite.at:106"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var60
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:106"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:107: \$builddir/test_mat delete test_mat_copy.mat var61"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var61" "mat73_readwrite.at:107"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var61
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:107"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:108: \$builddir/test_mat delete test_mat_copy.mat var62"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var62" "mat73_readwrite.at:108"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var62
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:108"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:109: \$builddir/test_mat delete test_mat_copy.mat var63"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var63" "mat73_readwrite.at:109"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var63
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:109"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:110: \$builddir/test_mat delete test_mat_copy.mat var64"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var64" "mat73_readwrite.at:110"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var64
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:110"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:111: \$builddir/test_mat delete test_mat_copy.mat var65"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var65" "mat73_readwrite.at:111"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var65
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:111"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:112: \$builddir/test_mat delete test_mat_copy.mat var66"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var66" "mat73_readwrite.at:112"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var66
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:112"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:113: \$builddir/test_mat delete test_mat_copy.mat var67"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var67" "mat73_readwrite.at:113"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var67
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:113"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:114: \$builddir/test_mat delete test_mat_copy.mat var68"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var68" "mat73_readwrite.at:114"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var68
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:114"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:115: \$builddir/test_mat delete test_mat_copy.mat var69"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var69" "mat73_readwrite.at:115"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var69
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:115"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:116: \$builddir/test_mat delete test_mat_copy.mat var70"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var70" "mat73_readwrite.at:116"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var70
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:116"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:117: \$builddir/test_mat delete test_mat_copy.mat var71"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var71" "mat73_readwrite.at:117"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var71
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:117"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:118: \$builddir/test_mat delete test_mat_copy.mat var72"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var72" "mat73_readwrite.at:118"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var72
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:118"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:119: \$builddir/test_mat delete test_mat_copy.mat var73"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var73" "mat73_readwrite.at:119"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var73
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:119"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:120: \$builddir/test_mat delete test_mat_copy.mat var74"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var74" "mat73_readwrite.at:120"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var74
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:120"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:121: \$builddir/test_mat delete test_mat_copy.mat var75"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var75" "mat73_readwrite.at:121"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var75
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:121"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:122: \$builddir/test_mat delete test_mat_copy.mat var76"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var76" "mat73_readwrite.at:122"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var76
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:122"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:123: \$builddir/test_mat delete test_mat_copy.mat var77"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var77" "mat73_readwrite.at:123"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var77
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:123"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:124: \$builddir/test_mat delete test_mat_copy.mat var78"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var78" "mat73_readwrite.at:124"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var78
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:124"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:125: \$builddir/test_mat delete test_mat_copy.mat var79"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var79" "mat73_readwrite.at:125"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var79
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:125"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:126: \$builddir/test_mat delete test_mat_copy.mat var80"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var80" "mat73_readwrite.at:126"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var80
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:126"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:127: \$builddir/test_mat delete test_mat_copy.mat var81"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var81" "mat73_readwrite.at:127"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var81
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:127"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:128: \$builddir/test_mat delete test_mat_copy.mat var82"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var82" "mat73_readwrite.at:128"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var82
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:128"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:129: \$builddir/test_mat delete test_mat_copy.mat var83"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var83" "mat73_readwrite.at:129"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var83
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:129"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:130: \$builddir/test_mat delete test_mat_copy.mat var84"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var84" "mat73_readwrite.at:130"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var84
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:130"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:131: \$builddir/test_mat delete test_mat_copy.mat var85"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var85" "mat73_readwrite.at:131"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var85
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:131"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:132: \$builddir/test_mat delete test_mat_copy.mat var86"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var86" "mat73_readwrite.at:132"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var86
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:132"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:133: \$builddir/test_mat delete test_mat_copy.mat var87"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var87" "mat73_readwrite.at:133"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var87
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:133"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:134: \$builddir/test_mat delete test_mat_copy.mat var88"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var88" "mat73_readwrite.at:134"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var88
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:134"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:135: \$builddir/test_mat delete test_mat_copy.mat var89"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var89" "mat73_readwrite.at:135"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var89
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:135"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:136: \$builddir/test_mat delete test_mat_copy.mat var90"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var90" "mat73_readwrite.at:136"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var90
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:136"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:137: \$builddir/test_mat delete test_mat_copy.mat var91"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var91" "mat73_readwrite.at:137"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var91
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:137"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:138: \$builddir/test_mat delete test_mat_copy.mat var92"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var92" "mat73_readwrite.at:138"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var92
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:138"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:139: cp \$srcdir/results/dump-mat_copy-partial.out expout
          \$builddir/../tools/matdump -f whos -h -d test_mat_copy.mat"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_readwrite.at:139"
( $at_check_trace; cp $srcdir/results/dump-mat_copy-partial.out expout
          $builddir/../tools/matdump -f whos -h -d test_mat_copy.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:139"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:141: \$builddir/test_mat delete test_mat_copy.mat var1"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var1" "mat73_readwrite.at:141"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:141"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_readwrite.at:142: \$builddir/test_mat delete test_mat_copy.mat var24"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var24" "mat73_readwrite.at:142"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var24
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_readwrite.at:142"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1062
#AT_START_1063
at_fn_group_banner 1063 'mat73_compressed_write.at:27' \
  "Write 2D double array" "                          " 17
at_xfail=no
(
  $as_echo "1063. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:28" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:28"
$as_echo "mat73_compressed_write.at:29" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:29"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:30: \$builddir/test_mat -v 7.3 -z -c double write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c double write_2d_numeric" "mat73_compressed_write.at:30"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c double write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:30"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:31: cp \$srcdir/results/write_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:31"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:31"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:33" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:33"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:34: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:34"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:34"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1063
#AT_START_1064
at_fn_group_banner 1064 'mat73_compressed_write.at:38' \
  "Write 2D single array" "                          " 17
at_xfail=no
(
  $as_echo "1064. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:39" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:39"
$as_echo "mat73_compressed_write.at:40" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:40"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:41: \$builddir/test_mat -v 7.3 -z -c single write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c single write_2d_numeric" "mat73_compressed_write.at:41"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c single write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:41"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:42: cp \$srcdir/results/write_2d_numeric-single.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:42"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-single.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:42"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:44" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:44"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:45: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='single';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:45"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='single';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:45"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1064
#AT_START_1065
at_fn_group_banner 1065 'mat73_compressed_write.at:49' \
  "Write 2D int64 array" "                           " 17
at_xfail=no
(
  $as_echo "1065. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:50" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:50"
$as_echo "mat73_compressed_write.at:51" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:51"
$as_echo "mat73_compressed_write.at:52" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:52"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:53: \$builddir/test_mat -v 7.3 -z -c int64 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c int64 write_2d_numeric" "mat73_compressed_write.at:53"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c int64 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:53"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:54: cp \$srcdir/results/write_2d_numeric-int64.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:54"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-int64.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:54"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:56" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:56"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:57: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int64';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:57"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int64';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:57"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1065
#AT_START_1066
at_fn_group_banner 1066 'mat73_compressed_write.at:61' \
  "Write 2D uint64 array" "                          " 17
at_xfail=no
(
  $as_echo "1066. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:62" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:62"
$as_echo "mat73_compressed_write.at:63" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:63"
$as_echo "mat73_compressed_write.at:64" >"$at_check_line_file"
(test $HAVE_UINT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:64"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:65: \$builddir/test_mat -v 7.3 -z -c uint64 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c uint64 write_2d_numeric" "mat73_compressed_write.at:65"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c uint64 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:65"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:66: cp \$srcdir/results/write_2d_numeric-uint64.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:66"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-uint64.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:66"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:68" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:68"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:69: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint64';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:69"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint64';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:69"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1066
#AT_START_1067
at_fn_group_banner 1067 'mat73_compressed_write.at:73' \
  "Write 2D int32 array" "                           " 17
at_xfail=no
(
  $as_echo "1067. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:74" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:74"
$as_echo "mat73_compressed_write.at:75" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:75"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:76: \$builddir/test_mat -v 7.3 -z -c int32 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c int32 write_2d_numeric" "mat73_compressed_write.at:76"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c int32 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:76"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:77: cp \$srcdir/results/write_2d_numeric-int32.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:77"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-int32.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:77"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:79" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:79"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:80: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int32';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:80"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int32';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:80"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1067
#AT_START_1068
at_fn_group_banner 1068 'mat73_compressed_write.at:84' \
  "Write 2D uint32 array" "                          " 17
at_xfail=no
(
  $as_echo "1068. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:85" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:85"
$as_echo "mat73_compressed_write.at:86" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:86"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:87: \$builddir/test_mat -v 7.3 -z -c uint32 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c uint32 write_2d_numeric" "mat73_compressed_write.at:87"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c uint32 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:87"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:88: cp \$srcdir/results/write_2d_numeric-uint32.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:88"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-uint32.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:88"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:90" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:90"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:91: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint32';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:91"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint32';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:91"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1068
#AT_START_1069
at_fn_group_banner 1069 'mat73_compressed_write.at:95' \
  "Write 2D int16 array" "                           " 17
at_xfail=no
(
  $as_echo "1069. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:96" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:96"
$as_echo "mat73_compressed_write.at:97" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:97"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:98: \$builddir/test_mat -v 7.3 -z -c int16 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c int16 write_2d_numeric" "mat73_compressed_write.at:98"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c int16 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:98"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:99: cp \$srcdir/results/write_2d_numeric-int16.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:99"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-int16.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:99"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:101" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:101"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:102: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int16';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:102"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int16';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:102"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1069
#AT_START_1070
at_fn_group_banner 1070 'mat73_compressed_write.at:106' \
  "Write 2D uint16 array" "                          " 17
at_xfail=no
(
  $as_echo "1070. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:107" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:107"
$as_echo "mat73_compressed_write.at:108" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:108"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:109: \$builddir/test_mat -v 7.3 -z -c uint16 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c uint16 write_2d_numeric" "mat73_compressed_write.at:109"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c uint16 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:109"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:110: cp \$srcdir/results/write_2d_numeric-uint16.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:110"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-uint16.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:110"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:112" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:112"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:113: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint16';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:113"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint16';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:113"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1070
#AT_START_1071
at_fn_group_banner 1071 'mat73_compressed_write.at:117' \
  "Write 2D int8 array" "                            " 17
at_xfail=no
(
  $as_echo "1071. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:118" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:118"
$as_echo "mat73_compressed_write.at:119" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:119"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:120: \$builddir/test_mat -v 7.3 -z -c int8 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c int8 write_2d_numeric" "mat73_compressed_write.at:120"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c int8 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:120"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:121: cp \$srcdir/results/write_2d_numeric-int8.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:121"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-int8.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:121"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:123" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:123"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:124: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int8';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:124"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int8';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:124"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1071
#AT_START_1072
at_fn_group_banner 1072 'mat73_compressed_write.at:128' \
  "Write 2D uint8 array" "                           " 17
at_xfail=no
(
  $as_echo "1072. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:129" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:129"
$as_echo "mat73_compressed_write.at:130" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:130"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:131: \$builddir/test_mat -v 7.3 -z -c uint8 write_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c uint8 write_2d_numeric" "mat73_compressed_write.at:131"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c uint8 write_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:131"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:132: cp \$srcdir/results/write_2d_numeric-uint8.out expout
          \$builddir/test_mat readvar test_write_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:132"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-uint8.out expout
          $builddir/test_mat readvar test_write_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:132"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:134" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:134"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:135: cp \$srcdir/matlab/test_write_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint8';test_write_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:135"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint8';test_write_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:135"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1072
#AT_START_1073
at_fn_group_banner 1073 'mat73_compressed_write.at:139' \
  "Write 2D complex double array" "                  " 17
at_xfail=no
(
  $as_echo "1073. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:140" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:140"
$as_echo "mat73_compressed_write.at:141" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:141"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:142: \$builddir/test_mat -v 7.3 -z -c double write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c double write_complex_2d_numeric" "mat73_compressed_write.at:142"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c double write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:142"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:143: cp \$srcdir/results/write_complex_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:143"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:143"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:145" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:145"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:146: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:146"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:146"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1073
#AT_START_1074
at_fn_group_banner 1074 'mat73_compressed_write.at:150' \
  "Write 2D complex single array" "                  " 17
at_xfail=no
(
  $as_echo "1074. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:151" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:151"
$as_echo "mat73_compressed_write.at:152" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:152"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:153: \$builddir/test_mat -v 7.3 -z -c single write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c single write_complex_2d_numeric" "mat73_compressed_write.at:153"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c single write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:153"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:154: cp \$srcdir/results/write_complex_2d_numeric-single.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:154"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-single.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:154"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:156" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:156"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:157: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='single';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:157"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='single';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:157"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1074
#AT_START_1075
at_fn_group_banner 1075 'mat73_compressed_write.at:161' \
  "Write 2D complex int64 array" "                   " 17
at_xfail=no
(
  $as_echo "1075. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:162" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:162"
$as_echo "mat73_compressed_write.at:163" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:163"
$as_echo "mat73_compressed_write.at:164" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:164"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:165: \$builddir/test_mat -v 7.3 -z -c int64 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c int64 write_complex_2d_numeric" "mat73_compressed_write.at:165"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c int64 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:165"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:166: cp \$srcdir/results/write_complex_2d_numeric-int64.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:166"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-int64.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:166"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:168" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:168"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:169: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int64';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:169"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int64';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:169"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1075
#AT_START_1076
at_fn_group_banner 1076 'mat73_compressed_write.at:173' \
  "Write 2D complex uint64 array" "                  " 17
at_xfail=no
(
  $as_echo "1076. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:174" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:174"
$as_echo "mat73_compressed_write.at:175" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:175"
$as_echo "mat73_compressed_write.at:176" >"$at_check_line_file"
(test $HAVE_UINT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:176"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:177: \$builddir/test_mat -v 7.3 -z -c uint64 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c uint64 write_complex_2d_numeric" "mat73_compressed_write.at:177"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c uint64 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:177"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:178: cp \$srcdir/results/write_complex_2d_numeric-uint64.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:178"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-uint64.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:178"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:180" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:180"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:181: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint64';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:181"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint64';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:181"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1076
#AT_START_1077
at_fn_group_banner 1077 'mat73_compressed_write.at:185' \
  "Write 2D complex int32 array" "                   " 17
at_xfail=no
(
  $as_echo "1077. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:186" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:186"
$as_echo "mat73_compressed_write.at:187" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:187"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:188: \$builddir/test_mat -v 7.3 -z -c int32 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c int32 write_complex_2d_numeric" "mat73_compressed_write.at:188"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c int32 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:188"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:189: cp \$srcdir/results/write_complex_2d_numeric-int32.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:189"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-int32.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:189"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:191" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:191"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:192: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int32';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:192"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int32';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:192"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1077
#AT_START_1078
at_fn_group_banner 1078 'mat73_compressed_write.at:196' \
  "Write 2D complex uint32 array" "                  " 17
at_xfail=no
(
  $as_echo "1078. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:197" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:197"
$as_echo "mat73_compressed_write.at:198" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:198"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:199: \$builddir/test_mat -v 7.3 -z -c uint32 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c uint32 write_complex_2d_numeric" "mat73_compressed_write.at:199"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c uint32 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:199"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:200: cp \$srcdir/results/write_complex_2d_numeric-uint32.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:200"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-uint32.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:200"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:202" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:202"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:203: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint32';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:203"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint32';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:203"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1078
#AT_START_1079
at_fn_group_banner 1079 'mat73_compressed_write.at:207' \
  "Write 2D complex int16 array" "                   " 17
at_xfail=no
(
  $as_echo "1079. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:208" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:208"
$as_echo "mat73_compressed_write.at:209" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:209"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:210: \$builddir/test_mat -v 7.3 -z -c int16 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c int16 write_complex_2d_numeric" "mat73_compressed_write.at:210"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c int16 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:210"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:211: cp \$srcdir/results/write_complex_2d_numeric-int16.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:211"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-int16.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:211"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:213" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:213"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:214: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int16';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:214"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int16';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:214"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1079
#AT_START_1080
at_fn_group_banner 1080 'mat73_compressed_write.at:218' \
  "Write 2D complex uint16 array" "                  " 17
at_xfail=no
(
  $as_echo "1080. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:219" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:219"
$as_echo "mat73_compressed_write.at:220" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:220"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:221: \$builddir/test_mat -v 7.3 -z -c uint16 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c uint16 write_complex_2d_numeric" "mat73_compressed_write.at:221"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c uint16 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:221"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:222: cp \$srcdir/results/write_complex_2d_numeric-uint16.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:222"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-uint16.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:222"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:224" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:224"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:225: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint16';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:225"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint16';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:225"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1080
#AT_START_1081
at_fn_group_banner 1081 'mat73_compressed_write.at:229' \
  "Write 2D complex int8 array" "                    " 17
at_xfail=no
(
  $as_echo "1081. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:230" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:230"
$as_echo "mat73_compressed_write.at:231" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:231"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:232: \$builddir/test_mat -v 7.3 -z -c int8 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c int8 write_complex_2d_numeric" "mat73_compressed_write.at:232"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c int8 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:232"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:233: cp \$srcdir/results/write_complex_2d_numeric-int8.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:233"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-int8.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:233"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:235" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:235"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:236: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int8';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:236"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int8';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:236"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1081
#AT_START_1082
at_fn_group_banner 1082 'mat73_compressed_write.at:240' \
  "Write 2D complex uint8 array" "                   " 17
at_xfail=no
(
  $as_echo "1082. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:241" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:241"
$as_echo "mat73_compressed_write.at:242" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:242"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:243: \$builddir/test_mat -v 7.3 -z -c uint8 write_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c uint8 write_complex_2d_numeric" "mat73_compressed_write.at:243"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c uint8 write_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:243"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:244: cp \$srcdir/results/write_complex_2d_numeric-uint8.out expout
          \$builddir/test_mat readvar test_write_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:244"
( $at_check_trace; cp $srcdir/results/write_complex_2d_numeric-uint8.out expout
          $builddir/test_mat readvar test_write_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:244"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:246" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:246"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:247: cp \$srcdir/matlab/test_write_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint8';test_write_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:247"
( $at_check_trace; cp $srcdir/matlab/test_write_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint8';test_write_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:247"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1082
#AT_START_1083
at_fn_group_banner 1083 'mat73_compressed_write.at:251' \
  "Write 2D logical array" "                         " 17
at_xfail=no
(
  $as_echo "1083. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:252" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:252"
$as_echo "mat73_compressed_write.at:253" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:253"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:254: \$builddir/test_mat -v 7.3 -z write_2d_logical"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z write_2d_logical" "mat73_compressed_write.at:254"
( $at_check_trace; $builddir/test_mat -v 7.3 -z write_2d_logical
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:254"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:255: cp \$srcdir/results/write_2d_numeric-l1-logical.out expout
          \$builddir/test_mat readvar test_write_2d_logical.mat l1"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:255"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-l1-logical.out expout
          $builddir/test_mat readvar test_write_2d_logical.mat l1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:255"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:257: cp \$srcdir/results/write_2d_numeric-73-l2-logical.out expout
          \$builddir/test_mat readvar test_write_2d_logical.mat l2"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:257"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-73-l2-logical.out expout
          $builddir/test_mat readvar test_write_2d_logical.mat l2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:257"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:259: cp \$srcdir/results/write_2d_numeric-73-l4-logical.out expout
          \$builddir/test_mat readvar test_write_2d_logical.mat l4"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:259"
( $at_check_trace; cp $srcdir/results/write_2d_numeric-73-l4-logical.out expout
          $builddir/test_mat readvar test_write_2d_logical.mat l4
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:259"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:261" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:261"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:262: cp \$srcdir/matlab/test_write_2d_logical.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_2d_logical\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:262"
( $at_check_trace; cp $srcdir/matlab/test_write_2d_logical.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_2d_logical" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:262"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1083
#AT_START_1084
at_fn_group_banner 1084 'mat73_compressed_write.at:266' \
  "Write 2D sparse double array" "                   " 17
at_xfail=no
(
  $as_echo "1084. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:267" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:267"
$as_echo "mat73_compressed_write.at:268" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:268"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:269: \$builddir/test_mat -v 7.3 -z -c double write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c double write_sparse" "mat73_compressed_write.at:269"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c double write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:269"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:270: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-double.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:270"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-double.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:270"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:272" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:272"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:273: cp \$srcdir/matlab/test_write_sparse.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_sparse\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:273"
( $at_check_trace; cp $srcdir/matlab/test_write_sparse.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_sparse" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:273"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1084
#AT_START_1085
at_fn_group_banner 1085 'mat73_compressed_write.at:277' \
  "Write 2D sparse complex double array" "           " 17
at_xfail=no
(
  $as_echo "1085. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:278" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:278"
$as_echo "mat73_compressed_write.at:279" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:279"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:280: \$builddir/test_mat -v 7.3 -z -c double write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c double write_complex_sparse" "mat73_compressed_write.at:280"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c double write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:280"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:281: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-double.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:281"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-double.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:281"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:283" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:283"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:284: cp \$srcdir/matlab/test_write_sparse_complex.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_sparse_complex\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:284"
( $at_check_trace; cp $srcdir/matlab/test_write_sparse_complex.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_sparse_complex" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:284"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1085
#AT_START_1086
at_fn_group_banner 1086 'mat73_compressed_write.at:288' \
  "Write 2D empty array" "                           " 17
at_xfail=no
(
  $as_echo "1086. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_compressed_write.at:290" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:290"
$as_echo "mat73_compressed_write.at:291" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:291"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:292: \$builddir/test_mat -v 7.3 -z -c double write_empty_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c double write_empty_2d_numeric" "mat73_compressed_write.at:292"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c double write_empty_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:292"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:293: cp \$srcdir/results/readvar-write_empty_2d_numeric-empty.out expout
          \$builddir/test_mat readvar test_write_empty_2d_numeric.mat empty"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:293"
( $at_check_trace; cp $srcdir/results/readvar-write_empty_2d_numeric-empty.out expout
          $builddir/test_mat readvar test_write_empty_2d_numeric.mat empty
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:293"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:295" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:295"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:296: cp \$srcdir/matlab/test_write_empty.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_empty\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:296"
( $at_check_trace; cp $srcdir/matlab/test_write_empty.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_empty" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:296"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1086
#AT_START_1087
at_fn_group_banner 1087 'mat73_compressed_write.at:300' \
  "Write character array" "                          " 17
at_xfail=no
(
  $as_echo "1087. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:301" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:301"
$as_echo "mat73_compressed_write.at:302" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:302"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:303: \$builddir/test_mat -v 7.3 -z write_char"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z write_char" "mat73_compressed_write.at:303"
( $at_check_trace; $builddir/test_mat -v 7.3 -z write_char
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:303"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:304: cp \$srcdir/results/readvar-write_char-a.out expout
          \$builddir/test_mat readvar test_write_char.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:304"
( $at_check_trace; cp $srcdir/results/readvar-write_char-a.out expout
          $builddir/test_mat readvar test_write_char.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:304"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:306" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:306"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:307: cp \$srcdir/matlab/test_write_char.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_char\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:307"
( $at_check_trace; cp $srcdir/matlab/test_write_char.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_char" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:307"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1087
#AT_START_1088
at_fn_group_banner 1088 'mat73_compressed_write.at:311' \
  "Write empty struct" "                             " 17
at_xfail=no
(
  $as_echo "1088. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_compressed_write.at:313" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:313"
$as_echo "mat73_compressed_write.at:314" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:314"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:315: \$builddir/test_mat -v 7.3 -z write_empty_struct"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z write_empty_struct" "mat73_compressed_write.at:315"
( $at_check_trace; $builddir/test_mat -v 7.3 -z write_empty_struct
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:315"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:316: cp \$srcdir/results/readvar-write_empty_struct-var1.out expout
          \$builddir/test_mat readvar test_write_empty_struct.mat var1"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:316"
( $at_check_trace; cp $srcdir/results/readvar-write_empty_struct-var1.out expout
          $builddir/test_mat readvar test_write_empty_struct.mat var1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:316"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:318: cp \$srcdir/results/readvar-write_empty_struct-var2.out expout
          \$builddir/test_mat readvar test_write_empty_struct.mat var2"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:318"
( $at_check_trace; cp $srcdir/results/readvar-write_empty_struct-var2.out expout
          $builddir/test_mat readvar test_write_empty_struct.mat var2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:318"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:320: cp \$srcdir/results/readvar-write_empty_struct-var3.out expout
          \$builddir/test_mat readvar test_write_empty_struct.mat var3"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:320"
( $at_check_trace; cp $srcdir/results/readvar-write_empty_struct-var3.out expout
          $builddir/test_mat readvar test_write_empty_struct.mat var3
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:320"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:322: cp \$srcdir/results/readvar-write_empty_struct-var4.out expout
          \$builddir/test_mat readvar test_write_empty_struct.mat var4"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:322"
( $at_check_trace; cp $srcdir/results/readvar-write_empty_struct-var4.out expout
          $builddir/test_mat readvar test_write_empty_struct.mat var4
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:322"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:324" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:324"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:325: cp \$srcdir/matlab/test_write_empty_struct.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_empty_struct\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:325"
( $at_check_trace; cp $srcdir/matlab/test_write_empty_struct.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_empty_struct" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:325"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1088
#AT_START_1089
at_fn_group_banner 1089 'mat73_compressed_write.at:329' \
  "Write struct with 2D double fields" "             " 17
at_xfail=no
(
  $as_echo "1089. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:330" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:330"
$as_echo "mat73_compressed_write.at:331" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:331"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:332: \$builddir/test_mat -v 7.3 -z write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z write_struct_2d_numeric" "mat73_compressed_write.at:332"
( $at_check_trace; $builddir/test_mat -v 7.3 -z write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:332"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:333: cp \$srcdir/results/write_struct_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:333"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:333"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:335" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:335"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:336: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:336"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:336"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1089
#AT_START_1090
at_fn_group_banner 1090 'mat73_compressed_write.at:340' \
  "Write struct with 2D single fields" "             " 17
at_xfail=no
(
  $as_echo "1090. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:341" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:341"
$as_echo "mat73_compressed_write.at:342" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:342"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:343: \$builddir/test_mat -v 7.3 -z -c single write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c single write_struct_2d_numeric" "mat73_compressed_write.at:343"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c single write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:343"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:344: cp \$srcdir/results/write_struct_2d_numeric-single.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:344"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-single.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:344"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:346" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:346"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:347: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='single';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:347"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='single';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:347"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1090
#AT_START_1091
at_fn_group_banner 1091 'mat73_compressed_write.at:351' \
  "Write struct with 2D int64 fields" "              " 17
at_xfail=no
(
  $as_echo "1091. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:352" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:352"
$as_echo "mat73_compressed_write.at:353" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:353"
$as_echo "mat73_compressed_write.at:354" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:354"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:355: \$builddir/test_mat -v 7.3 -z -c int64 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c int64 write_struct_2d_numeric" "mat73_compressed_write.at:355"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c int64 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:355"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:356: cp \$srcdir/results/write_struct_2d_numeric-int64.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:356"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-int64.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:356"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:358" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:358"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:359: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int64';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:359"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int64';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:359"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1091
#AT_START_1092
at_fn_group_banner 1092 'mat73_compressed_write.at:363' \
  "Write struct with 2D uint64 fields" "             " 17
at_xfail=no
(
  $as_echo "1092. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:364" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:364"
$as_echo "mat73_compressed_write.at:365" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:365"
$as_echo "mat73_compressed_write.at:366" >"$at_check_line_file"
(test $HAVE_UINT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:366"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:367: \$builddir/test_mat -v 7.3 -z -c uint64 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c uint64 write_struct_2d_numeric" "mat73_compressed_write.at:367"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c uint64 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:367"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:368: cp \$srcdir/results/write_struct_2d_numeric-uint64.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:368"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-uint64.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:368"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:370" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:370"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:371: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint64';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:371"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint64';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:371"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1092
#AT_START_1093
at_fn_group_banner 1093 'mat73_compressed_write.at:375' \
  "Write struct with 2D int32 fields" "              " 17
at_xfail=no
(
  $as_echo "1093. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:376" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:376"
$as_echo "mat73_compressed_write.at:377" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:377"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:378: \$builddir/test_mat -v 7.3 -z -c int32 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c int32 write_struct_2d_numeric" "mat73_compressed_write.at:378"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c int32 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:378"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:379: cp \$srcdir/results/write_struct_2d_numeric-int32.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:379"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-int32.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:379"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:381" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:381"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:382: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int32';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:382"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int32';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:382"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1093
#AT_START_1094
at_fn_group_banner 1094 'mat73_compressed_write.at:386' \
  "Write struct with 2D uint32 fields" "             " 17
at_xfail=no
(
  $as_echo "1094. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:387" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:387"
$as_echo "mat73_compressed_write.at:388" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:388"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:389: \$builddir/test_mat -v 7.3 -z -c uint32 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c uint32 write_struct_2d_numeric" "mat73_compressed_write.at:389"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c uint32 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:389"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:390: cp \$srcdir/results/write_struct_2d_numeric-uint32.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:390"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-uint32.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:390"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:392" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:392"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:393: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint32';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:393"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint32';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:393"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1094
#AT_START_1095
at_fn_group_banner 1095 'mat73_compressed_write.at:397' \
  "Write struct with 2D int16 fields" "              " 17
at_xfail=no
(
  $as_echo "1095. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:398" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:398"
$as_echo "mat73_compressed_write.at:399" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:399"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:400: \$builddir/test_mat -v 7.3 -z -c int16 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c int16 write_struct_2d_numeric" "mat73_compressed_write.at:400"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c int16 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:400"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:401: cp \$srcdir/results/write_struct_2d_numeric-int16.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:401"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-int16.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:401"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:403" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:403"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:404: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int16';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:404"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int16';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:404"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1095
#AT_START_1096
at_fn_group_banner 1096 'mat73_compressed_write.at:408' \
  "Write struct with 2D uint16 fields" "             " 17
at_xfail=no
(
  $as_echo "1096. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:409" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:409"
$as_echo "mat73_compressed_write.at:410" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:410"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:411: \$builddir/test_mat -v 7.3 -z -c uint16 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c uint16 write_struct_2d_numeric" "mat73_compressed_write.at:411"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c uint16 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:411"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:412: cp \$srcdir/results/write_struct_2d_numeric-uint16.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:412"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-uint16.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:412"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:414" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:414"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:415: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint16';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:415"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint16';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:415"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1096
#AT_START_1097
at_fn_group_banner 1097 'mat73_compressed_write.at:419' \
  "Write struct with 2D int8 fields" "               " 17
at_xfail=no
(
  $as_echo "1097. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:420" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:420"
$as_echo "mat73_compressed_write.at:421" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:421"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:422: \$builddir/test_mat -v 7.3 -z -c int8 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c int8 write_struct_2d_numeric" "mat73_compressed_write.at:422"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c int8 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:422"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:423: cp \$srcdir/results/write_struct_2d_numeric-int8.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:423"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-int8.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:423"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:425" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:425"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:426: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int8';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:426"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int8';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:426"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1097
#AT_START_1098
at_fn_group_banner 1098 'mat73_compressed_write.at:430' \
  "Write struct with 2D uint8 fields" "              " 17
at_xfail=no
(
  $as_echo "1098. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:431" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:431"
$as_echo "mat73_compressed_write.at:432" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:432"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:433: \$builddir/test_mat -v 7.3 -z -c uint8 write_struct_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c uint8 write_struct_2d_numeric" "mat73_compressed_write.at:433"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c uint8 write_struct_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:433"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:434: cp \$srcdir/results/write_struct_2d_numeric-uint8.out expout
          \$builddir/test_mat readvar test_write_struct_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:434"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-uint8.out expout
          $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:434"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:436" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:436"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:437: cp \$srcdir/matlab/test_write_struct_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint8';test_write_struct_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:437"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint8';test_write_struct_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:437"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1098
#AT_START_1099
at_fn_group_banner 1099 'mat73_compressed_write.at:441' \
  "Write struct with 2D complex double fields" "     " 17
at_xfail=no
(
  $as_echo "1099. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:442" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:442"
$as_echo "mat73_compressed_write.at:443" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:443"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:444: \$builddir/test_mat -v 7.3 -z write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z write_struct_complex_2d_numeric" "mat73_compressed_write.at:444"
( $at_check_trace; $builddir/test_mat -v 7.3 -z write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:444"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:445: cp \$srcdir/results/write_struct_complex_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:445"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:445"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:447" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:447"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:448: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:448"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:448"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1099
#AT_START_1100
at_fn_group_banner 1100 'mat73_compressed_write.at:452' \
  "Write struct with 2D complex single fields" "     " 17
at_xfail=no
(
  $as_echo "1100. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:453" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:453"
$as_echo "mat73_compressed_write.at:454" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:454"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:455: \$builddir/test_mat -v 7.3 -z -c single write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c single write_struct_complex_2d_numeric" "mat73_compressed_write.at:455"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c single write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:455"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:456: cp \$srcdir/results/write_struct_complex_2d_numeric-single.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:456"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-single.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:456"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:458" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:458"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:459: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='single';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:459"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='single';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:459"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1100
#AT_START_1101
at_fn_group_banner 1101 'mat73_compressed_write.at:463' \
  "Write struct with 2D complex int64 fields" "      " 17
at_xfail=no
(
  $as_echo "1101. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:464" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:464"
$as_echo "mat73_compressed_write.at:465" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:465"
$as_echo "mat73_compressed_write.at:466" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:466"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:467: \$builddir/test_mat -v 7.3 -z -c int64 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c int64 write_struct_complex_2d_numeric" "mat73_compressed_write.at:467"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c int64 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:467"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:468: cp \$srcdir/results/write_struct_complex_2d_numeric-int64.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:468"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-int64.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:468"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:470" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:470"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:471: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int64';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:471"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int64';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:471"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1101
#AT_START_1102
at_fn_group_banner 1102 'mat73_compressed_write.at:475' \
  "Write struct with 2D complex uint64 fields" "     " 17
at_xfail=no
(
  $as_echo "1102. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:476" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:476"
$as_echo "mat73_compressed_write.at:477" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:477"
$as_echo "mat73_compressed_write.at:478" >"$at_check_line_file"
(test $HAVE_UINT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:478"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:479: \$builddir/test_mat -v 7.3 -z -c uint64 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c uint64 write_struct_complex_2d_numeric" "mat73_compressed_write.at:479"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c uint64 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:479"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:480: cp \$srcdir/results/write_struct_complex_2d_numeric-uint64.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:480"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-uint64.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:480"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:482" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:482"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:483: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint64';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:483"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint64';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:483"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1102
#AT_START_1103
at_fn_group_banner 1103 'mat73_compressed_write.at:487' \
  "Write struct with 2D complex int32 fields" "      " 17
at_xfail=no
(
  $as_echo "1103. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:488" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:488"
$as_echo "mat73_compressed_write.at:489" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:489"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:490: \$builddir/test_mat -v 7.3 -z -c int32 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c int32 write_struct_complex_2d_numeric" "mat73_compressed_write.at:490"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c int32 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:490"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:491: cp \$srcdir/results/write_struct_complex_2d_numeric-int32.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:491"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-int32.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:491"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:493" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:493"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:494: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int32';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:494"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int32';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:494"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1103
#AT_START_1104
at_fn_group_banner 1104 'mat73_compressed_write.at:498' \
  "Write struct with 2D complex uint32 fields" "     " 17
at_xfail=no
(
  $as_echo "1104. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:499" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:499"
$as_echo "mat73_compressed_write.at:500" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:500"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:501: \$builddir/test_mat -v 7.3 -z -c uint32 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c uint32 write_struct_complex_2d_numeric" "mat73_compressed_write.at:501"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c uint32 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:501"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:502: cp \$srcdir/results/write_struct_complex_2d_numeric-uint32.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:502"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-uint32.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:502"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:504" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:504"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:505: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint32';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:505"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint32';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:505"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1104
#AT_START_1105
at_fn_group_banner 1105 'mat73_compressed_write.at:509' \
  "Write struct with 2D complex int16 fields" "      " 17
at_xfail=no
(
  $as_echo "1105. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:510" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:510"
$as_echo "mat73_compressed_write.at:511" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:511"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:512: \$builddir/test_mat -v 7.3 -z -c int16 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c int16 write_struct_complex_2d_numeric" "mat73_compressed_write.at:512"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c int16 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:512"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:513: cp \$srcdir/results/write_struct_complex_2d_numeric-int16.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:513"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-int16.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:513"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:515" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:515"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:516: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int16';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:516"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int16';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:516"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1105
#AT_START_1106
at_fn_group_banner 1106 'mat73_compressed_write.at:520' \
  "Write struct with 2D complex uint16 fields" "     " 17
at_xfail=no
(
  $as_echo "1106. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:521" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:521"
$as_echo "mat73_compressed_write.at:522" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:522"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:523: \$builddir/test_mat -v 7.3 -z -c uint16 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c uint16 write_struct_complex_2d_numeric" "mat73_compressed_write.at:523"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c uint16 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:523"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:524: cp \$srcdir/results/write_struct_complex_2d_numeric-uint16.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:524"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-uint16.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:524"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:526" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:526"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:527: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint16';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:527"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint16';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:527"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1106
#AT_START_1107
at_fn_group_banner 1107 'mat73_compressed_write.at:531' \
  "Write struct with 2D complex int8 fields" "       " 17
at_xfail=no
(
  $as_echo "1107. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:532" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:532"
$as_echo "mat73_compressed_write.at:533" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:533"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:534: \$builddir/test_mat -v 7.3 -z -c int8 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c int8 write_struct_complex_2d_numeric" "mat73_compressed_write.at:534"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c int8 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:534"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:535: cp \$srcdir/results/write_struct_complex_2d_numeric-int8.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:535"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-int8.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:535"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:537" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:537"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:538: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int8';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:538"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int8';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:538"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1107
#AT_START_1108
at_fn_group_banner 1108 'mat73_compressed_write.at:542' \
  "Write struct with 2D complex uint8 fields" "      " 17
at_xfail=no
(
  $as_echo "1108. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:543" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:543"
$as_echo "mat73_compressed_write.at:544" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:544"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:545: \$builddir/test_mat -v 7.3 -z -c uint8 write_struct_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c uint8 write_struct_complex_2d_numeric" "mat73_compressed_write.at:545"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c uint8 write_struct_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:545"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:546: cp \$srcdir/results/write_struct_complex_2d_numeric-uint8.out expout
          \$builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:546"
( $at_check_trace; cp $srcdir/results/write_struct_complex_2d_numeric-uint8.out expout
          $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:546"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:548" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:548"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:549: cp \$srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint8';test_write_struct_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:549"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint8';test_write_struct_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:549"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1108
#AT_START_1109
at_fn_group_banner 1109 'mat73_compressed_write.at:553' \
  "Write struct with 2D logical fields" "            " 17
at_xfail=no
(
  $as_echo "1109. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:554" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:554"
$as_echo "mat73_compressed_write.at:555" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:555"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:556: \$builddir/test_mat -v 7.3 -z write_struct_2d_logical"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z write_struct_2d_logical" "mat73_compressed_write.at:556"
( $at_check_trace; $builddir/test_mat -v 7.3 -z write_struct_2d_logical
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:556"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:557: cp \$srcdir/results/write_struct_2d_numeric-73-logical.out expout
          \$builddir/test_mat readvar test_write_struct_2d_logical.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:557"
( $at_check_trace; cp $srcdir/results/write_struct_2d_numeric-73-logical.out expout
          $builddir/test_mat readvar test_write_struct_2d_logical.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:557"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:559" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:559"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:560: cp \$srcdir/matlab/test_write_struct_2d_logical.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_struct_2d_logical\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:560"
( $at_check_trace; cp $srcdir/matlab/test_write_struct_2d_logical.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_struct_2d_logical" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:560"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1109
#AT_START_1110
at_fn_group_banner 1110 'mat73_compressed_write.at:564' \
  "Write empty cell array" "                         " 17
at_xfail=no
(
  $as_echo "1110. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_compressed_write.at:566" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:566"
$as_echo "mat73_compressed_write.at:567" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:567"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:568: \$builddir/test_mat -v 7.3 -z write_empty_cell"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z write_empty_cell" "mat73_compressed_write.at:568"
( $at_check_trace; $builddir/test_mat -v 7.3 -z write_empty_cell
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:568"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:569: cp \$srcdir/results/readvar-write_empty_cell-var1.out expout
          \$builddir/test_mat readvar test_write_empty_cell.mat var1"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:569"
( $at_check_trace; cp $srcdir/results/readvar-write_empty_cell-var1.out expout
          $builddir/test_mat readvar test_write_empty_cell.mat var1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:569"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:571: cp \$srcdir/results/readvar-write_empty_cell-var2.out expout
          \$builddir/test_mat readvar test_write_empty_cell.mat var2"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:571"
( $at_check_trace; cp $srcdir/results/readvar-write_empty_cell-var2.out expout
          $builddir/test_mat readvar test_write_empty_cell.mat var2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:571"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:573" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:573"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:574: cp \$srcdir/matlab/test_write_empty_cell.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_empty_cell\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:574"
( $at_check_trace; cp $srcdir/matlab/test_write_empty_cell.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_empty_cell" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:574"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1110
#AT_START_1111
at_fn_group_banner 1111 'mat73_compressed_write.at:578' \
  "Write cell array with 2D double fields" "         " 17
at_xfail=no
(
  $as_echo "1111. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:579" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:579"
$as_echo "mat73_compressed_write.at:580" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:580"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:581: \$builddir/test_mat -v 7.3 -z write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z write_cell_2d_numeric" "mat73_compressed_write.at:581"
( $at_check_trace; $builddir/test_mat -v 7.3 -z write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:581"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:582: cp \$srcdir/results/write_cell_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:582"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:582"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:584" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:584"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:585: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:585"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:585"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1111
#AT_START_1112
at_fn_group_banner 1112 'mat73_compressed_write.at:589' \
  "Write cell array with 2D single fields" "         " 17
at_xfail=no
(
  $as_echo "1112. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:590" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:590"
$as_echo "mat73_compressed_write.at:591" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:591"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:592: \$builddir/test_mat -v 7.3 -z -c single write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c single write_cell_2d_numeric" "mat73_compressed_write.at:592"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c single write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:592"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:593: cp \$srcdir/results/write_cell_2d_numeric-single.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:593"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-single.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:593"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:595" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:595"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:596: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='single';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:596"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='single';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:596"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1112
#AT_START_1113
at_fn_group_banner 1113 'mat73_compressed_write.at:600' \
  "Write cell array with 2D int64 fields" "          " 17
at_xfail=no
(
  $as_echo "1113. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:601" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:601"
$as_echo "mat73_compressed_write.at:602" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:602"
$as_echo "mat73_compressed_write.at:603" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:603"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:604: \$builddir/test_mat -v 7.3 -z -c int64 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c int64 write_cell_2d_numeric" "mat73_compressed_write.at:604"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c int64 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:604"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:605: cp \$srcdir/results/write_cell_2d_numeric-int64.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:605"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-int64.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:605"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:607" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:607"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:608: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int64';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:608"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int64';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:608"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1113
#AT_START_1114
at_fn_group_banner 1114 'mat73_compressed_write.at:612' \
  "Write cell array with 2D uint64 fields" "         " 17
at_xfail=no
(
  $as_echo "1114. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:613" >"$at_check_line_file"
(test $HAVE_UINT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:613"
$as_echo "mat73_compressed_write.at:614" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:614"
$as_echo "mat73_compressed_write.at:615" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:615"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:616: \$builddir/test_mat -v 7.3 -z -c uint64 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c uint64 write_cell_2d_numeric" "mat73_compressed_write.at:616"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c uint64 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:616"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:617: cp \$srcdir/results/write_cell_2d_numeric-uint64.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:617"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-uint64.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:617"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:619" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:619"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:620: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint64';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:620"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint64';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:620"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1114
#AT_START_1115
at_fn_group_banner 1115 'mat73_compressed_write.at:624' \
  "Write cell array with 2D int32 fields" "          " 17
at_xfail=no
(
  $as_echo "1115. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:625" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:625"
$as_echo "mat73_compressed_write.at:626" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:626"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:627: \$builddir/test_mat -v 7.3 -z -c int32 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c int32 write_cell_2d_numeric" "mat73_compressed_write.at:627"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c int32 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:627"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:628: cp \$srcdir/results/write_cell_2d_numeric-int32.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:628"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-int32.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:628"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:630" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:630"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:631: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int32';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:631"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int32';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:631"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1115
#AT_START_1116
at_fn_group_banner 1116 'mat73_compressed_write.at:635' \
  "Write cell array with 2D uint32 fields" "         " 17
at_xfail=no
(
  $as_echo "1116. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:636" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:636"
$as_echo "mat73_compressed_write.at:637" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:637"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:638: \$builddir/test_mat -v 7.3 -z -c uint32 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c uint32 write_cell_2d_numeric" "mat73_compressed_write.at:638"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c uint32 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:638"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:639: cp \$srcdir/results/write_cell_2d_numeric-uint32.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:639"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-uint32.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:639"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:641" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:641"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:642: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint32';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:642"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint32';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:642"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1116
#AT_START_1117
at_fn_group_banner 1117 'mat73_compressed_write.at:646' \
  "Write cell array with 2D int16 fields" "          " 17
at_xfail=no
(
  $as_echo "1117. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:647" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:647"
$as_echo "mat73_compressed_write.at:648" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:648"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:649: \$builddir/test_mat -v 7.3 -z -c int16 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c int16 write_cell_2d_numeric" "mat73_compressed_write.at:649"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c int16 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:649"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:650: cp \$srcdir/results/write_cell_2d_numeric-int16.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:650"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-int16.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:650"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:652" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:652"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:653: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int16';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:653"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int16';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:653"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1117
#AT_START_1118
at_fn_group_banner 1118 'mat73_compressed_write.at:657' \
  "Write cell array with 2D uint16 fields" "         " 17
at_xfail=no
(
  $as_echo "1118. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:658" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:658"
$as_echo "mat73_compressed_write.at:659" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:659"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:660: \$builddir/test_mat -v 7.3 -z -c uint16 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c uint16 write_cell_2d_numeric" "mat73_compressed_write.at:660"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c uint16 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:660"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:661: cp \$srcdir/results/write_cell_2d_numeric-uint16.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:661"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-uint16.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:661"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:663" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:663"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:664: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint16';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:664"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint16';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:664"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1118
#AT_START_1119
at_fn_group_banner 1119 'mat73_compressed_write.at:668' \
  "Write cell array with 2D int8 fields" "           " 17
at_xfail=no
(
  $as_echo "1119. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:669" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:669"
$as_echo "mat73_compressed_write.at:670" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:670"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:671: \$builddir/test_mat -v 7.3 -z -c int8 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c int8 write_cell_2d_numeric" "mat73_compressed_write.at:671"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c int8 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:671"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:672: cp \$srcdir/results/write_cell_2d_numeric-int8.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:672"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-int8.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:672"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:674" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:674"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:675: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int8';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:675"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int8';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:675"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1119
#AT_START_1120
at_fn_group_banner 1120 'mat73_compressed_write.at:679' \
  "Write cell array with 2D uint8 fields" "          " 17
at_xfail=no
(
  $as_echo "1120. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:680" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:680"
$as_echo "mat73_compressed_write.at:681" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:681"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:682: \$builddir/test_mat -v 7.3 -z -c uint8 write_cell_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c uint8 write_cell_2d_numeric" "mat73_compressed_write.at:682"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c uint8 write_cell_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:682"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:683: cp \$srcdir/results/write_cell_2d_numeric-uint8.out expout
          \$builddir/test_mat readvar test_write_cell_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:683"
( $at_check_trace; cp $srcdir/results/write_cell_2d_numeric-uint8.out expout
          $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:683"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:685" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:685"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:686: cp \$srcdir/matlab/test_write_cell_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint8';test_write_cell_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:686"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint8';test_write_cell_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:686"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1120
#AT_START_1121
at_fn_group_banner 1121 'mat73_compressed_write.at:690' \
  "Write cell array with 2D complex double fields" " " 17
at_xfail=no
(
  $as_echo "1121. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:691" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:691"
$as_echo "mat73_compressed_write.at:692" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:692"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:693: \$builddir/test_mat -v 7.3 -z write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z write_cell_complex_2d_numeric" "mat73_compressed_write.at:693"
( $at_check_trace; $builddir/test_mat -v 7.3 -z write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:693"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:694: cp \$srcdir/results/write_cell_complex_2d_numeric-double.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:694"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-double.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:694"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:696" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:696"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:697: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='double';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:697"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='double';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:697"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1121
#AT_START_1122
at_fn_group_banner 1122 'mat73_compressed_write.at:701' \
  "Write cell array with 2D complex single fields" " " 17
at_xfail=no
(
  $as_echo "1122. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:702" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:702"
$as_echo "mat73_compressed_write.at:703" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:703"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:704: \$builddir/test_mat -v 7.3 -z -c single write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c single write_cell_complex_2d_numeric" "mat73_compressed_write.at:704"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c single write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:704"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:705: cp \$srcdir/results/write_cell_complex_2d_numeric-single.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:705"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-single.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:705"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:707" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:707"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:708: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='single';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:708"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='single';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:708"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1122
#AT_START_1123
at_fn_group_banner 1123 'mat73_compressed_write.at:712' \
  "Write cell array with 2D complex int64 fields" "  " 17
at_xfail=no
(
  $as_echo "1123. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:713" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:713"
$as_echo "mat73_compressed_write.at:714" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:714"
$as_echo "mat73_compressed_write.at:715" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:715"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:716: \$builddir/test_mat -v 7.3 -z -c int64 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c int64 write_cell_complex_2d_numeric" "mat73_compressed_write.at:716"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c int64 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:716"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:717: cp \$srcdir/results/write_cell_complex_2d_numeric-int64.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:717"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-int64.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:717"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:719" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:719"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:720: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int64';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:720"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int64';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:720"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1123
#AT_START_1124
at_fn_group_banner 1124 'mat73_compressed_write.at:724' \
  "Write cell array with 2D complex uint64 fields" " " 17
at_xfail=no
(
  $as_echo "1124. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:725" >"$at_check_line_file"
(test $HAVE_UINT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:725"
$as_echo "mat73_compressed_write.at:726" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:726"
$as_echo "mat73_compressed_write.at:727" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:727"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:728: \$builddir/test_mat -v 7.3 -z -c uint64 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c uint64 write_cell_complex_2d_numeric" "mat73_compressed_write.at:728"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c uint64 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:728"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:729: cp \$srcdir/results/write_cell_complex_2d_numeric-uint64.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:729"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-uint64.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:729"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:731" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:731"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:732: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint64';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:732"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint64';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:732"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1124
#AT_START_1125
at_fn_group_banner 1125 'mat73_compressed_write.at:736' \
  "Write cell array with 2D complex int32 fields" "  " 17
at_xfail=no
(
  $as_echo "1125. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:737" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:737"
$as_echo "mat73_compressed_write.at:738" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:738"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:739: \$builddir/test_mat -v 7.3 -z -c int32 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c int32 write_cell_complex_2d_numeric" "mat73_compressed_write.at:739"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c int32 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:739"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:740: cp \$srcdir/results/write_cell_complex_2d_numeric-int32.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:740"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-int32.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:740"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:742" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:742"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:743: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int32';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:743"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int32';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:743"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1125
#AT_START_1126
at_fn_group_banner 1126 'mat73_compressed_write.at:747' \
  "Write cell array with 2D complex uint32 fields" " " 17
at_xfail=no
(
  $as_echo "1126. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:748" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:748"
$as_echo "mat73_compressed_write.at:749" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:749"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:750: \$builddir/test_mat -v 7.3 -z -c uint32 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c uint32 write_cell_complex_2d_numeric" "mat73_compressed_write.at:750"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c uint32 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:750"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:751: cp \$srcdir/results/write_cell_complex_2d_numeric-uint32.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:751"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-uint32.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:751"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:753" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:753"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:754: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint32';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:754"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint32';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:754"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1126
#AT_START_1127
at_fn_group_banner 1127 'mat73_compressed_write.at:758' \
  "Write cell array with 2D complex int16 fields" "  " 17
at_xfail=no
(
  $as_echo "1127. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:759" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:759"
$as_echo "mat73_compressed_write.at:760" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:760"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:761: \$builddir/test_mat -v 7.3 -z -c int16 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c int16 write_cell_complex_2d_numeric" "mat73_compressed_write.at:761"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c int16 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:761"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:762: cp \$srcdir/results/write_cell_complex_2d_numeric-int16.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:762"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-int16.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:762"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:764" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:764"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:765: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int16';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:765"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int16';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:765"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1127
#AT_START_1128
at_fn_group_banner 1128 'mat73_compressed_write.at:769' \
  "Write cell array with 2D complex uint16 fields" " " 17
at_xfail=no
(
  $as_echo "1128. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:770" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:770"
$as_echo "mat73_compressed_write.at:771" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:771"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:772: \$builddir/test_mat -v 7.3 -z -c uint16 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c uint16 write_cell_complex_2d_numeric" "mat73_compressed_write.at:772"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c uint16 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:772"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:773: cp \$srcdir/results/write_cell_complex_2d_numeric-uint16.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:773"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-uint16.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:773"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:775" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:775"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:776: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint16';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:776"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint16';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:776"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1128
#AT_START_1129
at_fn_group_banner 1129 'mat73_compressed_write.at:780' \
  "Write cell array with 2D complex int8 fields" "   " 17
at_xfail=no
(
  $as_echo "1129. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:781" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:781"
$as_echo "mat73_compressed_write.at:782" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:782"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:783: \$builddir/test_mat -v 7.3 -z -c int8 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c int8 write_cell_complex_2d_numeric" "mat73_compressed_write.at:783"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c int8 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:783"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:784: cp \$srcdir/results/write_cell_complex_2d_numeric-int8.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:784"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-int8.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:784"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:786" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:786"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:787: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='int8';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:787"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='int8';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:787"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1129
#AT_START_1130
at_fn_group_banner 1130 'mat73_compressed_write.at:791' \
  "Write cell array with 2D complex uint8 fields" "  " 17
at_xfail=no
(
  $as_echo "1130. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:792" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:792"
$as_echo "mat73_compressed_write.at:793" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:793"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:794: \$builddir/test_mat -v 7.3 -z -c uint8 write_cell_complex_2d_numeric"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c uint8 write_cell_complex_2d_numeric" "mat73_compressed_write.at:794"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c uint8 write_cell_complex_2d_numeric
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:794"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:795: cp \$srcdir/results/write_cell_complex_2d_numeric-uint8.out expout
          \$builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:795"
( $at_check_trace; cp $srcdir/results/write_cell_complex_2d_numeric-uint8.out expout
          $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:795"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:797" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:797"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:798: cp \$srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          \$MATLABEXE -nosplash -nojvm -r \"type='uint8';test_write_cell_complex_2d_numeric\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:798"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_complex_2d_numeric.m .
          $MATLABEXE -nosplash -nojvm -r "type='uint8';test_write_cell_complex_2d_numeric" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:798"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1130
#AT_START_1131
at_fn_group_banner 1131 'mat73_compressed_write.at:802' \
  "Write cell array with 2D logical fields" "        " 17
at_xfail=no
(
  $as_echo "1131. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_write.at:803" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:803"
$as_echo "mat73_compressed_write.at:804" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:804"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:805: \$builddir/test_mat -v 7.3 -z write_cell_2d_logical"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z write_cell_2d_logical" "mat73_compressed_write.at:805"
( $at_check_trace; $builddir/test_mat -v 7.3 -z write_cell_2d_logical
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:805"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:806: cp \$srcdir/results/write_cell_numeric-73-logical.out expout
          \$builddir/test_mat readvar test_write_cell_2d_logical.mat a"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:806"
( $at_check_trace; cp $srcdir/results/write_cell_numeric-73-logical.out expout
          $builddir/test_mat readvar test_write_cell_2d_logical.mat a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:806"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:808" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:808"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:809: cp \$srcdir/matlab/test_write_cell_2d_logical.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_cell_2d_logical\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:809"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_2d_logical.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_cell_2d_logical" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:809"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1131
#AT_START_1132
at_fn_group_banner 1132 'mat73_compressed_write.at:813' \
  "Write cell array with empty struct fields" "      " 17
at_xfail=no
(
  $as_echo "1132. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_compressed_write.at:815" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:815"
$as_echo "mat73_compressed_write.at:816" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:816"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:817: \$builddir/test_mat -v 7.3 -z write_cell_empty_struct"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z write_cell_empty_struct" "mat73_compressed_write.at:817"
( $at_check_trace; $builddir/test_mat -v 7.3 -z write_cell_empty_struct
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:817"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:818: cp \$srcdir/results/readvar-write_cell_empty_struct-var1.out expout
          \$builddir/test_mat readvar test_write_cell_empty_struct.mat var1"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:818"
( $at_check_trace; cp $srcdir/results/readvar-write_cell_empty_struct-var1.out expout
          $builddir/test_mat readvar test_write_cell_empty_struct.mat var1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:818"
$at_failed && at_fn_log_failure
$at_traceon; }

$as_echo "mat73_compressed_write.at:820" >"$at_check_line_file"
(test -z "$MATLABEXE") \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_write.at:820"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_write.at:821: cp \$srcdir/matlab/test_write_cell_empty_struct.m .
          \$MATLABEXE -nosplash -nojvm -r \"test_write_cell_empty_struct\" | \$GREP PASSED"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_write.at:821"
( $at_check_trace; cp $srcdir/matlab/test_write_cell_empty_struct.m .
          $MATLABEXE -nosplash -nojvm -r "test_write_cell_empty_struct" | $GREP PASSED
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PASSED" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_write.at:821"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1132
#AT_START_1133
at_fn_group_banner 1133 'mat73_compressed_readwrite.at:27' \
  "Copy variables" "                                 " 18
at_xfail=no
(
  $as_echo "1133. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_compressed_readwrite.at:29" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_readwrite.at:29"
$as_echo "mat73_compressed_readwrite.at:30" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_readwrite.at:30"
$as_echo "mat73_compressed_readwrite.at:31" >"$at_check_line_file"
(! grep -q "#define SIZEOF_VOID_P 4" $abs_top_builddir/src/matioConfig.h) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_readwrite.at:31"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:32: \$builddir/test_mat -v 7.3 -z copy \$srcdir/datasets/matio_test_cases_hdf_le.mat"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z copy $srcdir/datasets/matio_test_cases_hdf_le.mat" "mat73_compressed_readwrite.at:32"
( $at_check_trace; $builddir/test_mat -v 7.3 -z copy $srcdir/datasets/matio_test_cases_hdf_le.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:32"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:33: cp \$srcdir/results/dump-mat_copy-73_32.out expout
          \$builddir/../tools/matdump -f whos -h -d test_mat_copy.mat"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_readwrite.at:33"
( $at_check_trace; cp $srcdir/results/dump-mat_copy-73_32.out expout
          $builddir/../tools/matdump -f whos -h -d test_mat_copy.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:33"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1133
#AT_START_1134
at_fn_group_banner 1134 'mat73_compressed_readwrite.at:37' \
  "Copy variables" "                                 " 18
at_xfail=no
(
  $as_echo "1134. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_compressed_readwrite.at:39" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_readwrite.at:39"
$as_echo "mat73_compressed_readwrite.at:40" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_readwrite.at:40"
$as_echo "mat73_compressed_readwrite.at:41" >"$at_check_line_file"
(! grep -q "#define SIZEOF_VOID_P 8" $abs_top_builddir/src/matioConfig.h) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_readwrite.at:41"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:42: \$builddir/test_mat -v 7.3 -z copy \$srcdir/datasets/matio_test_cases_hdf_le.mat"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z copy $srcdir/datasets/matio_test_cases_hdf_le.mat" "mat73_compressed_readwrite.at:42"
( $at_check_trace; $builddir/test_mat -v 7.3 -z copy $srcdir/datasets/matio_test_cases_hdf_le.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:42"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:43: cp \$srcdir/results/dump-mat_copy-73.out expout
          \$builddir/../tools/matdump -f whos -h -d test_mat_copy.mat"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_readwrite.at:43"
( $at_check_trace; cp $srcdir/results/dump-mat_copy-73.out expout
          $builddir/../tools/matdump -f whos -h -d test_mat_copy.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:43"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1134
#AT_START_1135
at_fn_group_banner 1135 'mat73_compressed_readwrite.at:47' \
  "Delete variables" "                               " 18
at_xfail=no
(
  $as_echo "1135. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "mat73_compressed_readwrite.at:49" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_readwrite.at:49"
$as_echo "mat73_compressed_readwrite.at:50" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_readwrite.at:50"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:51: \$builddir/test_mat -v 7.3 -z copy \$srcdir/datasets/matio_test_cases_hdf_be.mat"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z copy $srcdir/datasets/matio_test_cases_hdf_be.mat" "mat73_compressed_readwrite.at:51"
( $at_check_trace; $builddir/test_mat -v 7.3 -z copy $srcdir/datasets/matio_test_cases_hdf_be.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:51"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:52: \$builddir/test_mat delete test_mat_copy.mat var2"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var2" "mat73_compressed_readwrite.at:52"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:52"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:53: \$builddir/test_mat delete test_mat_copy.mat var3"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var3" "mat73_compressed_readwrite.at:53"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var3
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:53"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:54: \$builddir/test_mat delete test_mat_copy.mat var4"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var4" "mat73_compressed_readwrite.at:54"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var4
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:54"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:55: \$builddir/test_mat delete test_mat_copy.mat var5"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var5" "mat73_compressed_readwrite.at:55"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var5
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:55"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:56: \$builddir/test_mat delete test_mat_copy.mat var6"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var6" "mat73_compressed_readwrite.at:56"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var6
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:56"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:57: \$builddir/test_mat delete test_mat_copy.mat var7"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var7" "mat73_compressed_readwrite.at:57"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var7
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:57"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:58: \$builddir/test_mat delete test_mat_copy.mat var8"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var8" "mat73_compressed_readwrite.at:58"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var8
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:58"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:59: \$builddir/test_mat delete test_mat_copy.mat var9"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var9" "mat73_compressed_readwrite.at:59"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var9
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:59"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:60: \$builddir/test_mat delete test_mat_copy.mat var10"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var10" "mat73_compressed_readwrite.at:60"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var10
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:60"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:61: \$builddir/test_mat delete test_mat_copy.mat var11"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var11" "mat73_compressed_readwrite.at:61"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var11
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:61"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:62: \$builddir/test_mat delete test_mat_copy.mat var12"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var12" "mat73_compressed_readwrite.at:62"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var12
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:62"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:63: \$builddir/test_mat delete test_mat_copy.mat var13"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var13" "mat73_compressed_readwrite.at:63"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var13
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:63"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:64: \$builddir/test_mat delete test_mat_copy.mat var14"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var14" "mat73_compressed_readwrite.at:64"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var14
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:64"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:65: \$builddir/test_mat delete test_mat_copy.mat var15"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var15" "mat73_compressed_readwrite.at:65"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var15
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:65"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:66: \$builddir/test_mat delete test_mat_copy.mat var16"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var16" "mat73_compressed_readwrite.at:66"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var16
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:66"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:67: \$builddir/test_mat delete test_mat_copy.mat var17"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var17" "mat73_compressed_readwrite.at:67"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var17
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:67"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:68: \$builddir/test_mat delete test_mat_copy.mat var18"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var18" "mat73_compressed_readwrite.at:68"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var18
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:68"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:69: \$builddir/test_mat delete test_mat_copy.mat var19"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var19" "mat73_compressed_readwrite.at:69"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var19
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:69"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:70: \$builddir/test_mat delete test_mat_copy.mat var20"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var20" "mat73_compressed_readwrite.at:70"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var20
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:70"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:71: \$builddir/test_mat delete test_mat_copy.mat var21"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var21" "mat73_compressed_readwrite.at:71"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var21
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:71"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:72: \$builddir/test_mat delete test_mat_copy.mat var22"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var22" "mat73_compressed_readwrite.at:72"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var22
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:72"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:73: \$builddir/test_mat delete test_mat_copy.mat var23"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var23" "mat73_compressed_readwrite.at:73"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var23
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:73"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:74: \$builddir/test_mat delete test_mat_copy.mat var25"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var25" "mat73_compressed_readwrite.at:74"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var25
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:74"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:75: \$builddir/test_mat delete test_mat_copy.mat var26"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var26" "mat73_compressed_readwrite.at:75"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var26
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:75"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:76: \$builddir/test_mat delete test_mat_copy.mat var27"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var27" "mat73_compressed_readwrite.at:76"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var27
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:76"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:77: \$builddir/test_mat delete test_mat_copy.mat var28"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var28" "mat73_compressed_readwrite.at:77"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var28
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:77"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:78: \$builddir/test_mat delete test_mat_copy.mat var29"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var29" "mat73_compressed_readwrite.at:78"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var29
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:78"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:79: \$builddir/test_mat delete test_mat_copy.mat var30"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var30" "mat73_compressed_readwrite.at:79"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var30
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:79"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:80: \$builddir/test_mat delete test_mat_copy.mat var31"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var31" "mat73_compressed_readwrite.at:80"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var31
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:80"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:81: \$builddir/test_mat delete test_mat_copy.mat var32"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var32" "mat73_compressed_readwrite.at:81"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var32
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:81"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:82: \$builddir/test_mat delete test_mat_copy.mat var33"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var33" "mat73_compressed_readwrite.at:82"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var33
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:82"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:83: \$builddir/test_mat delete test_mat_copy.mat var34"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var34" "mat73_compressed_readwrite.at:83"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var34
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:83"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:84: \$builddir/test_mat delete test_mat_copy.mat var35"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var35" "mat73_compressed_readwrite.at:84"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var35
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:84"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:85: \$builddir/test_mat delete test_mat_copy.mat var36"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var36" "mat73_compressed_readwrite.at:85"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var36
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:85"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:86: \$builddir/test_mat delete test_mat_copy.mat var37"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var37" "mat73_compressed_readwrite.at:86"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var37
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:86"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:87: \$builddir/test_mat delete test_mat_copy.mat var38"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var38" "mat73_compressed_readwrite.at:87"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var38
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:87"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:88: \$builddir/test_mat delete test_mat_copy.mat var39"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var39" "mat73_compressed_readwrite.at:88"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var39
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:88"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:89: \$builddir/test_mat delete test_mat_copy.mat var40"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var40" "mat73_compressed_readwrite.at:89"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var40
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:89"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:90: \$builddir/test_mat delete test_mat_copy.mat var41"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var41" "mat73_compressed_readwrite.at:90"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var41
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:90"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:91: \$builddir/test_mat delete test_mat_copy.mat var42"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var42" "mat73_compressed_readwrite.at:91"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var42
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:91"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:92: \$builddir/test_mat delete test_mat_copy.mat var43"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var43" "mat73_compressed_readwrite.at:92"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var43
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:92"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:93: \$builddir/test_mat delete test_mat_copy.mat var44"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var44" "mat73_compressed_readwrite.at:93"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var44
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:93"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:94: \$builddir/test_mat delete test_mat_copy.mat var45"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var45" "mat73_compressed_readwrite.at:94"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var45
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:94"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:95: \$builddir/test_mat delete test_mat_copy.mat var46"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var46" "mat73_compressed_readwrite.at:95"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var46
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:95"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:96: \$builddir/test_mat delete test_mat_copy.mat var47"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var47" "mat73_compressed_readwrite.at:96"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var47
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:96"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:97: \$builddir/test_mat delete test_mat_copy.mat var48"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var48" "mat73_compressed_readwrite.at:97"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var48
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:97"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:98: \$builddir/test_mat delete test_mat_copy.mat var49"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var49" "mat73_compressed_readwrite.at:98"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var49
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:98"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:99: \$builddir/test_mat delete test_mat_copy.mat var50"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var50" "mat73_compressed_readwrite.at:99"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var50
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:99"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:100: \$builddir/test_mat delete test_mat_copy.mat var51"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var51" "mat73_compressed_readwrite.at:100"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var51
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:100"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:101: \$builddir/test_mat delete test_mat_copy.mat var52"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var52" "mat73_compressed_readwrite.at:101"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var52
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:101"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:102: \$builddir/test_mat delete test_mat_copy.mat var53"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var53" "mat73_compressed_readwrite.at:102"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var53
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:102"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:103: \$builddir/test_mat delete test_mat_copy.mat var54"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var54" "mat73_compressed_readwrite.at:103"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var54
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:103"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:104: \$builddir/test_mat delete test_mat_copy.mat var55"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var55" "mat73_compressed_readwrite.at:104"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var55
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:104"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:105: \$builddir/test_mat delete test_mat_copy.mat var56"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var56" "mat73_compressed_readwrite.at:105"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var56
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:105"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:106: \$builddir/test_mat delete test_mat_copy.mat var57"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var57" "mat73_compressed_readwrite.at:106"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var57
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:106"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:107: \$builddir/test_mat delete test_mat_copy.mat var58"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var58" "mat73_compressed_readwrite.at:107"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var58
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:107"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:108: \$builddir/test_mat delete test_mat_copy.mat var59"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var59" "mat73_compressed_readwrite.at:108"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var59
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:108"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:109: \$builddir/test_mat delete test_mat_copy.mat var60"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var60" "mat73_compressed_readwrite.at:109"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var60
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:109"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:110: \$builddir/test_mat delete test_mat_copy.mat var61"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var61" "mat73_compressed_readwrite.at:110"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var61
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:110"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:111: \$builddir/test_mat delete test_mat_copy.mat var62"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var62" "mat73_compressed_readwrite.at:111"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var62
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:111"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:112: \$builddir/test_mat delete test_mat_copy.mat var63"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var63" "mat73_compressed_readwrite.at:112"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var63
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:112"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:113: \$builddir/test_mat delete test_mat_copy.mat var64"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var64" "mat73_compressed_readwrite.at:113"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var64
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:113"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:114: \$builddir/test_mat delete test_mat_copy.mat var65"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var65" "mat73_compressed_readwrite.at:114"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var65
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:114"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:115: \$builddir/test_mat delete test_mat_copy.mat var66"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var66" "mat73_compressed_readwrite.at:115"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var66
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:115"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:116: \$builddir/test_mat delete test_mat_copy.mat var67"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var67" "mat73_compressed_readwrite.at:116"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var67
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:116"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:117: \$builddir/test_mat delete test_mat_copy.mat var68"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var68" "mat73_compressed_readwrite.at:117"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var68
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:117"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:118: \$builddir/test_mat delete test_mat_copy.mat var69"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var69" "mat73_compressed_readwrite.at:118"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var69
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:118"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:119: \$builddir/test_mat delete test_mat_copy.mat var70"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var70" "mat73_compressed_readwrite.at:119"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var70
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:119"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:120: \$builddir/test_mat delete test_mat_copy.mat var71"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var71" "mat73_compressed_readwrite.at:120"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var71
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:120"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:121: \$builddir/test_mat delete test_mat_copy.mat var72"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var72" "mat73_compressed_readwrite.at:121"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var72
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:121"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:122: \$builddir/test_mat delete test_mat_copy.mat var73"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var73" "mat73_compressed_readwrite.at:122"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var73
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:122"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:123: \$builddir/test_mat delete test_mat_copy.mat var74"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var74" "mat73_compressed_readwrite.at:123"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var74
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:123"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:124: \$builddir/test_mat delete test_mat_copy.mat var75"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var75" "mat73_compressed_readwrite.at:124"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var75
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:124"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:125: \$builddir/test_mat delete test_mat_copy.mat var76"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var76" "mat73_compressed_readwrite.at:125"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var76
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:125"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:126: \$builddir/test_mat delete test_mat_copy.mat var77"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var77" "mat73_compressed_readwrite.at:126"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var77
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:126"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:127: \$builddir/test_mat delete test_mat_copy.mat var78"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var78" "mat73_compressed_readwrite.at:127"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var78
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:127"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:128: \$builddir/test_mat delete test_mat_copy.mat var79"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var79" "mat73_compressed_readwrite.at:128"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var79
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:128"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:129: \$builddir/test_mat delete test_mat_copy.mat var80"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var80" "mat73_compressed_readwrite.at:129"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var80
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:129"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:130: \$builddir/test_mat delete test_mat_copy.mat var81"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var81" "mat73_compressed_readwrite.at:130"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var81
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:130"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:131: \$builddir/test_mat delete test_mat_copy.mat var82"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var82" "mat73_compressed_readwrite.at:131"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var82
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:131"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:132: \$builddir/test_mat delete test_mat_copy.mat var83"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var83" "mat73_compressed_readwrite.at:132"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var83
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:132"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:133: \$builddir/test_mat delete test_mat_copy.mat var84"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var84" "mat73_compressed_readwrite.at:133"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var84
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:133"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:134: \$builddir/test_mat delete test_mat_copy.mat var85"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var85" "mat73_compressed_readwrite.at:134"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var85
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:134"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:135: \$builddir/test_mat delete test_mat_copy.mat var86"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var86" "mat73_compressed_readwrite.at:135"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var86
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:135"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:136: \$builddir/test_mat delete test_mat_copy.mat var87"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var87" "mat73_compressed_readwrite.at:136"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var87
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:136"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:137: \$builddir/test_mat delete test_mat_copy.mat var88"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var88" "mat73_compressed_readwrite.at:137"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var88
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:137"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:138: \$builddir/test_mat delete test_mat_copy.mat var89"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var89" "mat73_compressed_readwrite.at:138"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var89
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:138"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:139: \$builddir/test_mat delete test_mat_copy.mat var90"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var90" "mat73_compressed_readwrite.at:139"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var90
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:139"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:140: \$builddir/test_mat delete test_mat_copy.mat var91"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var91" "mat73_compressed_readwrite.at:140"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var91
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:140"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:141: \$builddir/test_mat delete test_mat_copy.mat var92"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var92" "mat73_compressed_readwrite.at:141"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var92
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:141"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:142: cp \$srcdir/results/dump-mat_copy-partial.out expout
          \$builddir/../tools/matdump -f whos -h -d test_mat_copy.mat"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_readwrite.at:142"
( $at_check_trace; cp $srcdir/results/dump-mat_copy-partial.out expout
          $builddir/../tools/matdump -f whos -h -d test_mat_copy.mat
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:142"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:144: \$builddir/test_mat delete test_mat_copy.mat var1"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var1" "mat73_compressed_readwrite.at:144"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:144"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_readwrite.at:145: \$builddir/test_mat delete test_mat_copy.mat var24"
at_fn_check_prepare_dynamic "$builddir/test_mat delete test_mat_copy.mat var24" "mat73_compressed_readwrite.at:145"
( $at_check_trace; $builddir/test_mat delete test_mat_copy.mat var24
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_readwrite.at:145"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1135
#AT_START_1136
at_fn_group_banner 1136 'mat4_extended_sparse.at:27' \
  "Write 2D sparse single array" "                   " 19
at_xfail=no
(
  $as_echo "1136. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat4_extended_sparse.at:28" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat4_extended_sparse.at:28"
$as_echo "mat4_extended_sparse.at:29" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat4_extended_sparse.at:29"
{ set +x
$as_echo "$at_srcdir/mat4_extended_sparse.at:30: \$builddir/test_mat -v 4 -c single write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 4 -c single write_sparse" "mat4_extended_sparse.at:30"
( $at_check_trace; $builddir/test_mat -v 4 -c single write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_extended_sparse.at:30"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_extended_sparse.at:31: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-single.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_extended_sparse.at:31"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-single.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_extended_sparse.at:31"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1136
#AT_START_1137
at_fn_group_banner 1137 'mat4_extended_sparse.at:35' \
  "Write 2D sparse int32 array" "                    " 19
at_xfail=no
(
  $as_echo "1137. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat4_extended_sparse.at:36" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat4_extended_sparse.at:36"
$as_echo "mat4_extended_sparse.at:37" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat4_extended_sparse.at:37"
{ set +x
$as_echo "$at_srcdir/mat4_extended_sparse.at:38: \$builddir/test_mat -v 4 -c int32 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 4 -c int32 write_sparse" "mat4_extended_sparse.at:38"
( $at_check_trace; $builddir/test_mat -v 4 -c int32 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_extended_sparse.at:38"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_extended_sparse.at:39: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-int32.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_extended_sparse.at:39"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-int32.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_extended_sparse.at:39"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1137
#AT_START_1138
at_fn_group_banner 1138 'mat4_extended_sparse.at:43' \
  "Write 2D sparse int16 array" "                    " 19
at_xfail=no
(
  $as_echo "1138. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat4_extended_sparse.at:44" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat4_extended_sparse.at:44"
$as_echo "mat4_extended_sparse.at:45" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat4_extended_sparse.at:45"
{ set +x
$as_echo "$at_srcdir/mat4_extended_sparse.at:46: \$builddir/test_mat -v 4 -c int16 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 4 -c int16 write_sparse" "mat4_extended_sparse.at:46"
( $at_check_trace; $builddir/test_mat -v 4 -c int16 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_extended_sparse.at:46"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_extended_sparse.at:47: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-int16.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_extended_sparse.at:47"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-int16.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_extended_sparse.at:47"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1138
#AT_START_1139
at_fn_group_banner 1139 'mat4_extended_sparse.at:51' \
  "Write 2D sparse uint16 array" "                   " 19
at_xfail=no
(
  $as_echo "1139. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat4_extended_sparse.at:52" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat4_extended_sparse.at:52"
$as_echo "mat4_extended_sparse.at:53" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat4_extended_sparse.at:53"
{ set +x
$as_echo "$at_srcdir/mat4_extended_sparse.at:54: \$builddir/test_mat -v 4 -c uint16 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 4 -c uint16 write_sparse" "mat4_extended_sparse.at:54"
( $at_check_trace; $builddir/test_mat -v 4 -c uint16 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_extended_sparse.at:54"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_extended_sparse.at:55: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-uint16.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_extended_sparse.at:55"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-uint16.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_extended_sparse.at:55"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1139
#AT_START_1140
at_fn_group_banner 1140 'mat4_extended_sparse.at:59' \
  "Write 2D sparse uint8 array" "                    " 19
at_xfail=no
(
  $as_echo "1140. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat4_extended_sparse.at:60" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat4_extended_sparse.at:60"
$as_echo "mat4_extended_sparse.at:61" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat4_extended_sparse.at:61"
{ set +x
$as_echo "$at_srcdir/mat4_extended_sparse.at:62: \$builddir/test_mat -v 4 -c uint8 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 4 -c uint8 write_sparse" "mat4_extended_sparse.at:62"
( $at_check_trace; $builddir/test_mat -v 4 -c uint8 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_extended_sparse.at:62"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_extended_sparse.at:63: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-uint8.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_extended_sparse.at:63"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-uint8.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_extended_sparse.at:63"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1140
#AT_START_1141
at_fn_group_banner 1141 'mat4_extended_sparse.at:67' \
  "Write 2D sparse complex single array" "           " 19
at_xfail=no
(
  $as_echo "1141. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat4_extended_sparse.at:68" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat4_extended_sparse.at:68"
$as_echo "mat4_extended_sparse.at:69" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat4_extended_sparse.at:69"
{ set +x
$as_echo "$at_srcdir/mat4_extended_sparse.at:70: \$builddir/test_mat -v 4 -c single write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 4 -c single write_complex_sparse" "mat4_extended_sparse.at:70"
( $at_check_trace; $builddir/test_mat -v 4 -c single write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_extended_sparse.at:70"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_extended_sparse.at:71: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-single.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_extended_sparse.at:71"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-single.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_extended_sparse.at:71"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1141
#AT_START_1142
at_fn_group_banner 1142 'mat4_extended_sparse.at:75' \
  "Write 2D sparse complex int32 array" "            " 19
at_xfail=no
(
  $as_echo "1142. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat4_extended_sparse.at:76" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat4_extended_sparse.at:76"
$as_echo "mat4_extended_sparse.at:77" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat4_extended_sparse.at:77"
{ set +x
$as_echo "$at_srcdir/mat4_extended_sparse.at:78: \$builddir/test_mat -v 4 -c int32 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 4 -c int32 write_complex_sparse" "mat4_extended_sparse.at:78"
( $at_check_trace; $builddir/test_mat -v 4 -c int32 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_extended_sparse.at:78"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_extended_sparse.at:79: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-int32.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_extended_sparse.at:79"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-int32.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_extended_sparse.at:79"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1142
#AT_START_1143
at_fn_group_banner 1143 'mat4_extended_sparse.at:83' \
  "Write 2D sparse complex int16 array" "            " 19
at_xfail=no
(
  $as_echo "1143. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat4_extended_sparse.at:84" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat4_extended_sparse.at:84"
$as_echo "mat4_extended_sparse.at:85" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat4_extended_sparse.at:85"
{ set +x
$as_echo "$at_srcdir/mat4_extended_sparse.at:86: \$builddir/test_mat -v 4 -c int16 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 4 -c int16 write_complex_sparse" "mat4_extended_sparse.at:86"
( $at_check_trace; $builddir/test_mat -v 4 -c int16 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_extended_sparse.at:86"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_extended_sparse.at:87: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-int16.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_extended_sparse.at:87"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-int16.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_extended_sparse.at:87"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1143
#AT_START_1144
at_fn_group_banner 1144 'mat4_extended_sparse.at:91' \
  "Write 2D sparse complex uint16 array" "           " 19
at_xfail=no
(
  $as_echo "1144. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat4_extended_sparse.at:92" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat4_extended_sparse.at:92"
$as_echo "mat4_extended_sparse.at:93" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat4_extended_sparse.at:93"
{ set +x
$as_echo "$at_srcdir/mat4_extended_sparse.at:94: \$builddir/test_mat -v 4 -c uint16 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 4 -c uint16 write_complex_sparse" "mat4_extended_sparse.at:94"
( $at_check_trace; $builddir/test_mat -v 4 -c uint16 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_extended_sparse.at:94"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_extended_sparse.at:95: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint16.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_extended_sparse.at:95"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint16.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_extended_sparse.at:95"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1144
#AT_START_1145
at_fn_group_banner 1145 'mat4_extended_sparse.at:99' \
  "Write 2D sparse complex uint8 array" "            " 19
at_xfail=no
(
  $as_echo "1145. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat4_extended_sparse.at:100" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat4_extended_sparse.at:100"
$as_echo "mat4_extended_sparse.at:101" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat4_extended_sparse.at:101"
{ set +x
$as_echo "$at_srcdir/mat4_extended_sparse.at:102: \$builddir/test_mat -v 4 -c uint8 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 4 -c uint8 write_complex_sparse" "mat4_extended_sparse.at:102"
( $at_check_trace; $builddir/test_mat -v 4 -c uint8 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_extended_sparse.at:102"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat4_extended_sparse.at:103: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint8.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat4_extended_sparse.at:103"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint8.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat4_extended_sparse.at:103"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1145
#AT_START_1146
at_fn_group_banner 1146 'mat5_uncompressed_extended_sparse.at:27' \
  "Write 2D sparse single array" "                   " 20
at_xfail=no
(
  $as_echo "1146. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_uncompressed_extended_sparse.at:28" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_extended_sparse.at:28"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:29: \$builddir/test_mat -v 5 -c single write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c single write_sparse" "mat5_uncompressed_extended_sparse.at:29"
( $at_check_trace; $builddir/test_mat -v 5 -c single write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:29"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:30: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-single.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_extended_sparse.at:30"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-single.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:30"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1146
#AT_START_1147
at_fn_group_banner 1147 'mat5_uncompressed_extended_sparse.at:34' \
  "Write 2D sparse int64 array" "                    " 20
at_xfail=no
(
  $as_echo "1147. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_uncompressed_extended_sparse.at:35" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_extended_sparse.at:35"
$as_echo "mat5_uncompressed_extended_sparse.at:36" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_extended_sparse.at:36"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:37: \$builddir/test_mat -v 5 -c int64 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c int64 write_sparse" "mat5_uncompressed_extended_sparse.at:37"
( $at_check_trace; $builddir/test_mat -v 5 -c int64 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:37"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:38: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-int64.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_extended_sparse.at:38"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-int64.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:38"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1147
#AT_START_1148
at_fn_group_banner 1148 'mat5_uncompressed_extended_sparse.at:42' \
  "Write 2D sparse uint64 array" "                   " 20
at_xfail=no
(
  $as_echo "1148. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_uncompressed_extended_sparse.at:43" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_extended_sparse.at:43"
$as_echo "mat5_uncompressed_extended_sparse.at:44" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_extended_sparse.at:44"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:45: \$builddir/test_mat -v 5 -c uint64 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c uint64 write_sparse" "mat5_uncompressed_extended_sparse.at:45"
( $at_check_trace; $builddir/test_mat -v 5 -c uint64 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:45"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:46: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-uint64.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_extended_sparse.at:46"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-uint64.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:46"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1148
#AT_START_1149
at_fn_group_banner 1149 'mat5_uncompressed_extended_sparse.at:50' \
  "Write 2D sparse int32 array" "                    " 20
at_xfail=no
(
  $as_echo "1149. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_uncompressed_extended_sparse.at:51" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_extended_sparse.at:51"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:52: \$builddir/test_mat -v 5 -c int32 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c int32 write_sparse" "mat5_uncompressed_extended_sparse.at:52"
( $at_check_trace; $builddir/test_mat -v 5 -c int32 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:52"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:53: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-int32.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_extended_sparse.at:53"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-int32.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:53"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1149
#AT_START_1150
at_fn_group_banner 1150 'mat5_uncompressed_extended_sparse.at:57' \
  "Write 2D sparse uint32 array" "                   " 20
at_xfail=no
(
  $as_echo "1150. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_uncompressed_extended_sparse.at:58" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_extended_sparse.at:58"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:59: \$builddir/test_mat -v 5 -c uint32 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c uint32 write_sparse" "mat5_uncompressed_extended_sparse.at:59"
( $at_check_trace; $builddir/test_mat -v 5 -c uint32 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:59"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:60: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-uint32.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_extended_sparse.at:60"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-uint32.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:60"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1150
#AT_START_1151
at_fn_group_banner 1151 'mat5_uncompressed_extended_sparse.at:64' \
  "Write 2D sparse int16 array" "                    " 20
at_xfail=no
(
  $as_echo "1151. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_uncompressed_extended_sparse.at:65" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_extended_sparse.at:65"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:66: \$builddir/test_mat -v 5 -c int16 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c int16 write_sparse" "mat5_uncompressed_extended_sparse.at:66"
( $at_check_trace; $builddir/test_mat -v 5 -c int16 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:66"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:67: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-int16.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_extended_sparse.at:67"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-int16.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:67"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1151
#AT_START_1152
at_fn_group_banner 1152 'mat5_uncompressed_extended_sparse.at:71' \
  "Write 2D sparse uint16 array" "                   " 20
at_xfail=no
(
  $as_echo "1152. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_uncompressed_extended_sparse.at:72" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_extended_sparse.at:72"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:73: \$builddir/test_mat -v 5 -c uint16 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c uint16 write_sparse" "mat5_uncompressed_extended_sparse.at:73"
( $at_check_trace; $builddir/test_mat -v 5 -c uint16 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:73"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:74: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-uint16.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_extended_sparse.at:74"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-uint16.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:74"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1152
#AT_START_1153
at_fn_group_banner 1153 'mat5_uncompressed_extended_sparse.at:78' \
  "Write 2D sparse int8 array" "                     " 20
at_xfail=no
(
  $as_echo "1153. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_uncompressed_extended_sparse.at:79" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_extended_sparse.at:79"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:80: \$builddir/test_mat -v 5 -c int8 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c int8 write_sparse" "mat5_uncompressed_extended_sparse.at:80"
( $at_check_trace; $builddir/test_mat -v 5 -c int8 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:80"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:81: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-int8.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_extended_sparse.at:81"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-int8.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:81"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1153
#AT_START_1154
at_fn_group_banner 1154 'mat5_uncompressed_extended_sparse.at:85' \
  "Write 2D sparse uint8 array" "                    " 20
at_xfail=no
(
  $as_echo "1154. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_uncompressed_extended_sparse.at:86" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_extended_sparse.at:86"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:87: \$builddir/test_mat -v 5 -c uint8 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c uint8 write_sparse" "mat5_uncompressed_extended_sparse.at:87"
( $at_check_trace; $builddir/test_mat -v 5 -c uint8 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:87"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:88: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-uint8.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_extended_sparse.at:88"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-uint8.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:88"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1154
#AT_START_1155
at_fn_group_banner 1155 'mat5_uncompressed_extended_sparse.at:92' \
  "Write 2D sparse complex single array" "           " 20
at_xfail=no
(
  $as_echo "1155. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_uncompressed_extended_sparse.at:93" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_extended_sparse.at:93"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:94: \$builddir/test_mat -v 5 -c single write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c single write_complex_sparse" "mat5_uncompressed_extended_sparse.at:94"
( $at_check_trace; $builddir/test_mat -v 5 -c single write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:94"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:95: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-single.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_extended_sparse.at:95"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-single.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:95"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1155
#AT_START_1156
at_fn_group_banner 1156 'mat5_uncompressed_extended_sparse.at:99' \
  "Write 2D sparse complex int64 array" "            " 20
at_xfail=no
(
  $as_echo "1156. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_uncompressed_extended_sparse.at:100" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_extended_sparse.at:100"
$as_echo "mat5_uncompressed_extended_sparse.at:101" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_extended_sparse.at:101"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:102: \$builddir/test_mat -v 5 -c int64 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c int64 write_complex_sparse" "mat5_uncompressed_extended_sparse.at:102"
( $at_check_trace; $builddir/test_mat -v 5 -c int64 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:102"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:103: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-int64.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_extended_sparse.at:103"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-int64.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:103"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1156
#AT_START_1157
at_fn_group_banner 1157 'mat5_uncompressed_extended_sparse.at:107' \
  "Write 2D sparse complex uint64 array" "           " 20
at_xfail=no
(
  $as_echo "1157. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_uncompressed_extended_sparse.at:108" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_extended_sparse.at:108"
$as_echo "mat5_uncompressed_extended_sparse.at:109" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_extended_sparse.at:109"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:110: \$builddir/test_mat -v 5 -c uint64 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c uint64 write_complex_sparse" "mat5_uncompressed_extended_sparse.at:110"
( $at_check_trace; $builddir/test_mat -v 5 -c uint64 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:110"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:111: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint64.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_extended_sparse.at:111"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint64.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:111"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1157
#AT_START_1158
at_fn_group_banner 1158 'mat5_uncompressed_extended_sparse.at:115' \
  "Write 2D sparse complex int32 array" "            " 20
at_xfail=no
(
  $as_echo "1158. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_uncompressed_extended_sparse.at:116" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_extended_sparse.at:116"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:117: \$builddir/test_mat -v 5 -c int32 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c int32 write_complex_sparse" "mat5_uncompressed_extended_sparse.at:117"
( $at_check_trace; $builddir/test_mat -v 5 -c int32 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:117"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:118: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-int32.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_extended_sparse.at:118"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-int32.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:118"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1158
#AT_START_1159
at_fn_group_banner 1159 'mat5_uncompressed_extended_sparse.at:122' \
  "Write 2D sparse complex uint32 array" "           " 20
at_xfail=no
(
  $as_echo "1159. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_uncompressed_extended_sparse.at:123" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_extended_sparse.at:123"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:124: \$builddir/test_mat -v 5 -c uint32 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c uint32 write_complex_sparse" "mat5_uncompressed_extended_sparse.at:124"
( $at_check_trace; $builddir/test_mat -v 5 -c uint32 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:124"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:125: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint32.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_extended_sparse.at:125"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint32.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:125"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1159
#AT_START_1160
at_fn_group_banner 1160 'mat5_uncompressed_extended_sparse.at:129' \
  "Write 2D sparse complex int16 array" "            " 20
at_xfail=no
(
  $as_echo "1160. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_uncompressed_extended_sparse.at:130" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_extended_sparse.at:130"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:131: \$builddir/test_mat -v 5 -c int16 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c int16 write_complex_sparse" "mat5_uncompressed_extended_sparse.at:131"
( $at_check_trace; $builddir/test_mat -v 5 -c int16 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:131"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:132: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-int16.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_extended_sparse.at:132"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-int16.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:132"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1160
#AT_START_1161
at_fn_group_banner 1161 'mat5_uncompressed_extended_sparse.at:136' \
  "Write 2D sparse complex uint16 array" "           " 20
at_xfail=no
(
  $as_echo "1161. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_uncompressed_extended_sparse.at:137" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_extended_sparse.at:137"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:138: \$builddir/test_mat -v 5 -c uint16 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c uint16 write_complex_sparse" "mat5_uncompressed_extended_sparse.at:138"
( $at_check_trace; $builddir/test_mat -v 5 -c uint16 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:138"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:139: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint16.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_extended_sparse.at:139"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint16.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:139"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1161
#AT_START_1162
at_fn_group_banner 1162 'mat5_uncompressed_extended_sparse.at:143' \
  "Write 2D sparse complex int8 array" "             " 20
at_xfail=no
(
  $as_echo "1162. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_uncompressed_extended_sparse.at:144" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_extended_sparse.at:144"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:145: \$builddir/test_mat -v 5 -c int8 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c int8 write_complex_sparse" "mat5_uncompressed_extended_sparse.at:145"
( $at_check_trace; $builddir/test_mat -v 5 -c int8 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:145"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:146: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-int8.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_extended_sparse.at:146"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-int8.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:146"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1162
#AT_START_1163
at_fn_group_banner 1163 'mat5_uncompressed_extended_sparse.at:150' \
  "Write 2D sparse complex uint8 array" "            " 20
at_xfail=no
(
  $as_echo "1163. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_uncompressed_extended_sparse.at:151" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_uncompressed_extended_sparse.at:151"
{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:152: \$builddir/test_mat -v 5 -c uint8 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -c uint8 write_complex_sparse" "mat5_uncompressed_extended_sparse.at:152"
( $at_check_trace; $builddir/test_mat -v 5 -c uint8 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:152"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_uncompressed_extended_sparse.at:153: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint8.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_uncompressed_extended_sparse.at:153"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint8.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_uncompressed_extended_sparse.at:153"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1163
#AT_START_1164
at_fn_group_banner 1164 'mat5_compressed_extended_sparse.at:27' \
  "Write 2D sparse single array" "                   " 21
at_xfail=no
(
  $as_echo "1164. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_extended_sparse.at:28" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:28"
$as_echo "mat5_compressed_extended_sparse.at:29" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:29"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:30: \$builddir/test_mat -v 5 -z -c single write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c single write_sparse" "mat5_compressed_extended_sparse.at:30"
( $at_check_trace; $builddir/test_mat -v 5 -z -c single write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:30"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:31: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-single.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_extended_sparse.at:31"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-single.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:31"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1164
#AT_START_1165
at_fn_group_banner 1165 'mat5_compressed_extended_sparse.at:35' \
  "Write 2D sparse int64 array" "                    " 21
at_xfail=no
(
  $as_echo "1165. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_extended_sparse.at:36" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:36"
$as_echo "mat5_compressed_extended_sparse.at:37" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:37"
$as_echo "mat5_compressed_extended_sparse.at:38" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:38"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:39: \$builddir/test_mat -v 5 -z -c int64 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c int64 write_sparse" "mat5_compressed_extended_sparse.at:39"
( $at_check_trace; $builddir/test_mat -v 5 -z -c int64 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:39"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:40: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-int64.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_extended_sparse.at:40"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-int64.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:40"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1165
#AT_START_1166
at_fn_group_banner 1166 'mat5_compressed_extended_sparse.at:44' \
  "Write 2D sparse uint64 array" "                   " 21
at_xfail=no
(
  $as_echo "1166. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_extended_sparse.at:45" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:45"
$as_echo "mat5_compressed_extended_sparse.at:46" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:46"
$as_echo "mat5_compressed_extended_sparse.at:47" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:47"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:48: \$builddir/test_mat -v 5 -z -c uint64 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c uint64 write_sparse" "mat5_compressed_extended_sparse.at:48"
( $at_check_trace; $builddir/test_mat -v 5 -z -c uint64 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:48"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:49: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-uint64.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_extended_sparse.at:49"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-uint64.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:49"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1166
#AT_START_1167
at_fn_group_banner 1167 'mat5_compressed_extended_sparse.at:53' \
  "Write 2D sparse int32 array" "                    " 21
at_xfail=no
(
  $as_echo "1167. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_extended_sparse.at:54" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:54"
$as_echo "mat5_compressed_extended_sparse.at:55" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:55"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:56: \$builddir/test_mat -v 5 -z -c int32 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c int32 write_sparse" "mat5_compressed_extended_sparse.at:56"
( $at_check_trace; $builddir/test_mat -v 5 -z -c int32 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:56"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:57: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-int32.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_extended_sparse.at:57"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-int32.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:57"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1167
#AT_START_1168
at_fn_group_banner 1168 'mat5_compressed_extended_sparse.at:61' \
  "Write 2D sparse uint32 array" "                   " 21
at_xfail=no
(
  $as_echo "1168. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_extended_sparse.at:62" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:62"
$as_echo "mat5_compressed_extended_sparse.at:63" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:63"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:64: \$builddir/test_mat -v 5 -z -c uint32 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c uint32 write_sparse" "mat5_compressed_extended_sparse.at:64"
( $at_check_trace; $builddir/test_mat -v 5 -z -c uint32 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:64"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:65: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-uint32.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_extended_sparse.at:65"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-uint32.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:65"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1168
#AT_START_1169
at_fn_group_banner 1169 'mat5_compressed_extended_sparse.at:69' \
  "Write 2D sparse int16 array" "                    " 21
at_xfail=no
(
  $as_echo "1169. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_extended_sparse.at:70" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:70"
$as_echo "mat5_compressed_extended_sparse.at:71" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:71"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:72: \$builddir/test_mat -v 5 -z -c int16 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c int16 write_sparse" "mat5_compressed_extended_sparse.at:72"
( $at_check_trace; $builddir/test_mat -v 5 -z -c int16 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:72"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:73: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-int16.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_extended_sparse.at:73"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-int16.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:73"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1169
#AT_START_1170
at_fn_group_banner 1170 'mat5_compressed_extended_sparse.at:77' \
  "Write 2D sparse uint16 array" "                   " 21
at_xfail=no
(
  $as_echo "1170. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_extended_sparse.at:78" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:78"
$as_echo "mat5_compressed_extended_sparse.at:79" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:79"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:80: \$builddir/test_mat -v 5 -z -c uint16 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c uint16 write_sparse" "mat5_compressed_extended_sparse.at:80"
( $at_check_trace; $builddir/test_mat -v 5 -z -c uint16 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:80"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:81: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-uint16.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_extended_sparse.at:81"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-uint16.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:81"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1170
#AT_START_1171
at_fn_group_banner 1171 'mat5_compressed_extended_sparse.at:85' \
  "Write 2D sparse int8 array" "                     " 21
at_xfail=no
(
  $as_echo "1171. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_extended_sparse.at:86" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:86"
$as_echo "mat5_compressed_extended_sparse.at:87" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:87"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:88: \$builddir/test_mat -v 5 -z -c int8 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c int8 write_sparse" "mat5_compressed_extended_sparse.at:88"
( $at_check_trace; $builddir/test_mat -v 5 -z -c int8 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:88"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:89: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-int8.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_extended_sparse.at:89"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-int8.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:89"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1171
#AT_START_1172
at_fn_group_banner 1172 'mat5_compressed_extended_sparse.at:93' \
  "Write 2D sparse uint8 array" "                    " 21
at_xfail=no
(
  $as_echo "1172. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_extended_sparse.at:94" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:94"
$as_echo "mat5_compressed_extended_sparse.at:95" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:95"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:96: \$builddir/test_mat -v 5 -z -c uint8 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c uint8 write_sparse" "mat5_compressed_extended_sparse.at:96"
( $at_check_trace; $builddir/test_mat -v 5 -z -c uint8 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:96"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:97: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-uint8.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_extended_sparse.at:97"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-uint8.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:97"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1172
#AT_START_1173
at_fn_group_banner 1173 'mat5_compressed_extended_sparse.at:101' \
  "Write 2D sparse complex single array" "           " 21
at_xfail=no
(
  $as_echo "1173. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_extended_sparse.at:102" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:102"
$as_echo "mat5_compressed_extended_sparse.at:103" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:103"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:104: \$builddir/test_mat -v 5 -z -c single write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c single write_complex_sparse" "mat5_compressed_extended_sparse.at:104"
( $at_check_trace; $builddir/test_mat -v 5 -z -c single write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:104"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:105: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-single.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_extended_sparse.at:105"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-single.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:105"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1173
#AT_START_1174
at_fn_group_banner 1174 'mat5_compressed_extended_sparse.at:109' \
  "Write 2D sparse complex int64 array" "            " 21
at_xfail=no
(
  $as_echo "1174. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_extended_sparse.at:110" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:110"
$as_echo "mat5_compressed_extended_sparse.at:111" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:111"
$as_echo "mat5_compressed_extended_sparse.at:112" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:112"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:113: \$builddir/test_mat -v 5 -z -c int64 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c int64 write_complex_sparse" "mat5_compressed_extended_sparse.at:113"
( $at_check_trace; $builddir/test_mat -v 5 -z -c int64 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:113"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:114: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-int64.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_extended_sparse.at:114"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-int64.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:114"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1174
#AT_START_1175
at_fn_group_banner 1175 'mat5_compressed_extended_sparse.at:118' \
  "Write 2D sparse complex uint64 array" "           " 21
at_xfail=no
(
  $as_echo "1175. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_extended_sparse.at:119" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:119"
$as_echo "mat5_compressed_extended_sparse.at:120" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:120"
$as_echo "mat5_compressed_extended_sparse.at:121" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:121"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:122: \$builddir/test_mat -v 5 -z -c uint64 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c uint64 write_complex_sparse" "mat5_compressed_extended_sparse.at:122"
( $at_check_trace; $builddir/test_mat -v 5 -z -c uint64 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:122"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:123: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint64.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_extended_sparse.at:123"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint64.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:123"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1175
#AT_START_1176
at_fn_group_banner 1176 'mat5_compressed_extended_sparse.at:127' \
  "Write 2D sparse complex int32 array" "            " 21
at_xfail=no
(
  $as_echo "1176. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_extended_sparse.at:128" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:128"
$as_echo "mat5_compressed_extended_sparse.at:129" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:129"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:130: \$builddir/test_mat -v 5 -z -c int32 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c int32 write_complex_sparse" "mat5_compressed_extended_sparse.at:130"
( $at_check_trace; $builddir/test_mat -v 5 -z -c int32 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:130"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:131: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-int32.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_extended_sparse.at:131"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-int32.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:131"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1176
#AT_START_1177
at_fn_group_banner 1177 'mat5_compressed_extended_sparse.at:135' \
  "Write 2D sparse complex uint32 array" "           " 21
at_xfail=no
(
  $as_echo "1177. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_extended_sparse.at:136" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:136"
$as_echo "mat5_compressed_extended_sparse.at:137" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:137"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:138: \$builddir/test_mat -v 5 -z -c uint32 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c uint32 write_complex_sparse" "mat5_compressed_extended_sparse.at:138"
( $at_check_trace; $builddir/test_mat -v 5 -z -c uint32 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:138"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:139: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint32.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_extended_sparse.at:139"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint32.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:139"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1177
#AT_START_1178
at_fn_group_banner 1178 'mat5_compressed_extended_sparse.at:143' \
  "Write 2D sparse complex int16 array" "            " 21
at_xfail=no
(
  $as_echo "1178. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_extended_sparse.at:144" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:144"
$as_echo "mat5_compressed_extended_sparse.at:145" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:145"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:146: \$builddir/test_mat -v 5 -z -c int16 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c int16 write_complex_sparse" "mat5_compressed_extended_sparse.at:146"
( $at_check_trace; $builddir/test_mat -v 5 -z -c int16 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:146"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:147: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-int16.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_extended_sparse.at:147"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-int16.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:147"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1178
#AT_START_1179
at_fn_group_banner 1179 'mat5_compressed_extended_sparse.at:151' \
  "Write 2D sparse complex uint16 array" "           " 21
at_xfail=no
(
  $as_echo "1179. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_extended_sparse.at:152" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:152"
$as_echo "mat5_compressed_extended_sparse.at:153" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:153"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:154: \$builddir/test_mat -v 5 -z -c uint16 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c uint16 write_complex_sparse" "mat5_compressed_extended_sparse.at:154"
( $at_check_trace; $builddir/test_mat -v 5 -z -c uint16 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:154"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:155: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint16.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_extended_sparse.at:155"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint16.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:155"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1179
#AT_START_1180
at_fn_group_banner 1180 'mat5_compressed_extended_sparse.at:159' \
  "Write 2D sparse complex int8 array" "             " 21
at_xfail=no
(
  $as_echo "1180. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_extended_sparse.at:160" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:160"
$as_echo "mat5_compressed_extended_sparse.at:161" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:161"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:162: \$builddir/test_mat -v 5 -z -c int8 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c int8 write_complex_sparse" "mat5_compressed_extended_sparse.at:162"
( $at_check_trace; $builddir/test_mat -v 5 -z -c int8 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:162"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:163: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-int8.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_extended_sparse.at:163"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-int8.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:163"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1180
#AT_START_1181
at_fn_group_banner 1181 'mat5_compressed_extended_sparse.at:167' \
  "Write 2D sparse complex uint8 array" "            " 21
at_xfail=no
(
  $as_echo "1181. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat5_compressed_extended_sparse.at:168" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:168"
$as_echo "mat5_compressed_extended_sparse.at:169" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat5_compressed_extended_sparse.at:169"
{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:170: \$builddir/test_mat -v 5 -z -c uint8 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 5 -z -c uint8 write_complex_sparse" "mat5_compressed_extended_sparse.at:170"
( $at_check_trace; $builddir/test_mat -v 5 -z -c uint8 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:170"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat5_compressed_extended_sparse.at:171: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint8.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat5_compressed_extended_sparse.at:171"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint8.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat5_compressed_extended_sparse.at:171"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1181
#AT_START_1182
at_fn_group_banner 1182 'mat73_uncompressed_extended_sparse.at:27' \
  "Write 2D sparse single array" "                   " 22
at_xfail=no
(
  $as_echo "1182. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_uncompressed_extended_sparse.at:28" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:28"
$as_echo "mat73_uncompressed_extended_sparse.at:29" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:29"
{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:30: \$builddir/test_mat -v 7.3 -c single write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c single write_sparse" "mat73_uncompressed_extended_sparse.at:30"
( $at_check_trace; $builddir/test_mat -v 7.3 -c single write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:30"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:31: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-single.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_uncompressed_extended_sparse.at:31"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-single.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:31"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1182
#AT_START_1183
at_fn_group_banner 1183 'mat73_uncompressed_extended_sparse.at:35' \
  "Write 2D sparse int64 array" "                    " 22
at_xfail=no
(
  $as_echo "1183. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_uncompressed_extended_sparse.at:36" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:36"
$as_echo "mat73_uncompressed_extended_sparse.at:37" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:37"
$as_echo "mat73_uncompressed_extended_sparse.at:38" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:38"
{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:39: \$builddir/test_mat -v 7.3 -c int64 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c int64 write_sparse" "mat73_uncompressed_extended_sparse.at:39"
( $at_check_trace; $builddir/test_mat -v 7.3 -c int64 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:39"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:40: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-int64.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_uncompressed_extended_sparse.at:40"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-int64.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:40"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1183
#AT_START_1184
at_fn_group_banner 1184 'mat73_uncompressed_extended_sparse.at:44' \
  "Write 2D sparse uint64 array" "                   " 22
at_xfail=no
(
  $as_echo "1184. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_uncompressed_extended_sparse.at:45" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:45"
$as_echo "mat73_uncompressed_extended_sparse.at:46" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:46"
$as_echo "mat73_uncompressed_extended_sparse.at:47" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:47"
{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:48: \$builddir/test_mat -v 7.3 -c uint64 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c uint64 write_sparse" "mat73_uncompressed_extended_sparse.at:48"
( $at_check_trace; $builddir/test_mat -v 7.3 -c uint64 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:48"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:49: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-uint64.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_uncompressed_extended_sparse.at:49"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-uint64.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:49"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1184
#AT_START_1185
at_fn_group_banner 1185 'mat73_uncompressed_extended_sparse.at:53' \
  "Write 2D sparse int32 array" "                    " 22
at_xfail=no
(
  $as_echo "1185. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_uncompressed_extended_sparse.at:54" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:54"
$as_echo "mat73_uncompressed_extended_sparse.at:55" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:55"
{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:56: \$builddir/test_mat -v 7.3 -c int32 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c int32 write_sparse" "mat73_uncompressed_extended_sparse.at:56"
( $at_check_trace; $builddir/test_mat -v 7.3 -c int32 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:56"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:57: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-int32.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_uncompressed_extended_sparse.at:57"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-int32.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:57"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1185
#AT_START_1186
at_fn_group_banner 1186 'mat73_uncompressed_extended_sparse.at:61' \
  "Write 2D sparse uint32 array" "                   " 22
at_xfail=no
(
  $as_echo "1186. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_uncompressed_extended_sparse.at:62" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:62"
$as_echo "mat73_uncompressed_extended_sparse.at:63" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:63"
{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:64: \$builddir/test_mat -v 7.3 -c uint32 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c uint32 write_sparse" "mat73_uncompressed_extended_sparse.at:64"
( $at_check_trace; $builddir/test_mat -v 7.3 -c uint32 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:64"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:65: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-uint32.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_uncompressed_extended_sparse.at:65"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-uint32.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:65"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1186
#AT_START_1187
at_fn_group_banner 1187 'mat73_uncompressed_extended_sparse.at:69' \
  "Write 2D sparse int16 array" "                    " 22
at_xfail=no
(
  $as_echo "1187. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_uncompressed_extended_sparse.at:70" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:70"
$as_echo "mat73_uncompressed_extended_sparse.at:71" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:71"
{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:72: \$builddir/test_mat -v 7.3 -c int16 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c int16 write_sparse" "mat73_uncompressed_extended_sparse.at:72"
( $at_check_trace; $builddir/test_mat -v 7.3 -c int16 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:72"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:73: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-int16.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_uncompressed_extended_sparse.at:73"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-int16.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:73"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1187
#AT_START_1188
at_fn_group_banner 1188 'mat73_uncompressed_extended_sparse.at:77' \
  "Write 2D sparse uint16 array" "                   " 22
at_xfail=no
(
  $as_echo "1188. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_uncompressed_extended_sparse.at:78" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:78"
$as_echo "mat73_uncompressed_extended_sparse.at:79" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:79"
{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:80: \$builddir/test_mat -v 7.3 -c uint16 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c uint16 write_sparse" "mat73_uncompressed_extended_sparse.at:80"
( $at_check_trace; $builddir/test_mat -v 7.3 -c uint16 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:80"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:81: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-uint16.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_uncompressed_extended_sparse.at:81"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-uint16.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:81"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1188
#AT_START_1189
at_fn_group_banner 1189 'mat73_uncompressed_extended_sparse.at:85' \
  "Write 2D sparse int8 array" "                     " 22
at_xfail=no
(
  $as_echo "1189. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_uncompressed_extended_sparse.at:86" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:86"
$as_echo "mat73_uncompressed_extended_sparse.at:87" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:87"
{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:88: \$builddir/test_mat -v 7.3 -c int8 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c int8 write_sparse" "mat73_uncompressed_extended_sparse.at:88"
( $at_check_trace; $builddir/test_mat -v 7.3 -c int8 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:88"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:89: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-int8.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_uncompressed_extended_sparse.at:89"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-int8.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:89"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1189
#AT_START_1190
at_fn_group_banner 1190 'mat73_uncompressed_extended_sparse.at:93' \
  "Write 2D sparse uint8 array" "                    " 22
at_xfail=no
(
  $as_echo "1190. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_uncompressed_extended_sparse.at:94" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:94"
$as_echo "mat73_uncompressed_extended_sparse.at:95" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:95"
{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:96: \$builddir/test_mat -v 7.3 -c uint8 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c uint8 write_sparse" "mat73_uncompressed_extended_sparse.at:96"
( $at_check_trace; $builddir/test_mat -v 7.3 -c uint8 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:96"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:97: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-uint8.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_uncompressed_extended_sparse.at:97"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-uint8.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:97"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1190
#AT_START_1191
at_fn_group_banner 1191 'mat73_uncompressed_extended_sparse.at:101' \
  "Write 2D sparse complex single array" "           " 22
at_xfail=no
(
  $as_echo "1191. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_uncompressed_extended_sparse.at:102" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:102"
$as_echo "mat73_uncompressed_extended_sparse.at:103" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:103"
{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:104: \$builddir/test_mat -v 7.3 -c single write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c single write_complex_sparse" "mat73_uncompressed_extended_sparse.at:104"
( $at_check_trace; $builddir/test_mat -v 7.3 -c single write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:104"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:105: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-single.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_uncompressed_extended_sparse.at:105"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-single.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:105"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1191
#AT_START_1192
at_fn_group_banner 1192 'mat73_uncompressed_extended_sparse.at:109' \
  "Write 2D sparse complex int64 array" "            " 22
at_xfail=no
(
  $as_echo "1192. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_uncompressed_extended_sparse.at:110" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:110"
$as_echo "mat73_uncompressed_extended_sparse.at:111" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:111"
$as_echo "mat73_uncompressed_extended_sparse.at:112" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:112"
{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:113: \$builddir/test_mat -v 7.3 -c int64 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c int64 write_complex_sparse" "mat73_uncompressed_extended_sparse.at:113"
( $at_check_trace; $builddir/test_mat -v 7.3 -c int64 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:113"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:114: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-int64.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_uncompressed_extended_sparse.at:114"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-int64.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:114"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1192
#AT_START_1193
at_fn_group_banner 1193 'mat73_uncompressed_extended_sparse.at:118' \
  "Write 2D sparse complex uint64 array" "           " 22
at_xfail=no
(
  $as_echo "1193. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_uncompressed_extended_sparse.at:119" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:119"
$as_echo "mat73_uncompressed_extended_sparse.at:120" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:120"
$as_echo "mat73_uncompressed_extended_sparse.at:121" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:121"
{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:122: \$builddir/test_mat -v 7.3 -c uint64 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c uint64 write_complex_sparse" "mat73_uncompressed_extended_sparse.at:122"
( $at_check_trace; $builddir/test_mat -v 7.3 -c uint64 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:122"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:123: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint64.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_uncompressed_extended_sparse.at:123"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint64.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:123"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1193
#AT_START_1194
at_fn_group_banner 1194 'mat73_uncompressed_extended_sparse.at:127' \
  "Write 2D sparse complex int32 array" "            " 22
at_xfail=no
(
  $as_echo "1194. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_uncompressed_extended_sparse.at:128" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:128"
$as_echo "mat73_uncompressed_extended_sparse.at:129" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:129"
{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:130: \$builddir/test_mat -v 7.3 -c int32 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c int32 write_complex_sparse" "mat73_uncompressed_extended_sparse.at:130"
( $at_check_trace; $builddir/test_mat -v 7.3 -c int32 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:130"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:131: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-int32.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_uncompressed_extended_sparse.at:131"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-int32.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:131"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1194
#AT_START_1195
at_fn_group_banner 1195 'mat73_uncompressed_extended_sparse.at:135' \
  "Write 2D sparse complex uint32 array" "           " 22
at_xfail=no
(
  $as_echo "1195. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_uncompressed_extended_sparse.at:136" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:136"
$as_echo "mat73_uncompressed_extended_sparse.at:137" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:137"
{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:138: \$builddir/test_mat -v 7.3 -c uint32 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c uint32 write_complex_sparse" "mat73_uncompressed_extended_sparse.at:138"
( $at_check_trace; $builddir/test_mat -v 7.3 -c uint32 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:138"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:139: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint32.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_uncompressed_extended_sparse.at:139"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint32.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:139"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1195
#AT_START_1196
at_fn_group_banner 1196 'mat73_uncompressed_extended_sparse.at:143' \
  "Write 2D sparse complex int16 array" "            " 22
at_xfail=no
(
  $as_echo "1196. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_uncompressed_extended_sparse.at:144" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:144"
$as_echo "mat73_uncompressed_extended_sparse.at:145" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:145"
{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:146: \$builddir/test_mat -v 7.3 -c int16 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c int16 write_complex_sparse" "mat73_uncompressed_extended_sparse.at:146"
( $at_check_trace; $builddir/test_mat -v 7.3 -c int16 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:146"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:147: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-int16.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_uncompressed_extended_sparse.at:147"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-int16.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:147"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1196
#AT_START_1197
at_fn_group_banner 1197 'mat73_uncompressed_extended_sparse.at:151' \
  "Write 2D sparse complex uint16 array" "           " 22
at_xfail=no
(
  $as_echo "1197. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_uncompressed_extended_sparse.at:152" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:152"
$as_echo "mat73_uncompressed_extended_sparse.at:153" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:153"
{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:154: \$builddir/test_mat -v 7.3 -c uint16 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c uint16 write_complex_sparse" "mat73_uncompressed_extended_sparse.at:154"
( $at_check_trace; $builddir/test_mat -v 7.3 -c uint16 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:154"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:155: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint16.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_uncompressed_extended_sparse.at:155"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint16.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:155"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1197
#AT_START_1198
at_fn_group_banner 1198 'mat73_uncompressed_extended_sparse.at:159' \
  "Write 2D sparse complex int8 array" "             " 22
at_xfail=no
(
  $as_echo "1198. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_uncompressed_extended_sparse.at:160" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:160"
$as_echo "mat73_uncompressed_extended_sparse.at:161" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:161"
{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:162: \$builddir/test_mat -v 7.3 -c int8 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c int8 write_complex_sparse" "mat73_uncompressed_extended_sparse.at:162"
( $at_check_trace; $builddir/test_mat -v 7.3 -c int8 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:162"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:163: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-int8.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_uncompressed_extended_sparse.at:163"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-int8.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:163"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1198
#AT_START_1199
at_fn_group_banner 1199 'mat73_uncompressed_extended_sparse.at:167' \
  "Write 2D sparse complex uint8 array" "            " 22
at_xfail=no
(
  $as_echo "1199. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_uncompressed_extended_sparse.at:168" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:168"
$as_echo "mat73_uncompressed_extended_sparse.at:169" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_uncompressed_extended_sparse.at:169"
{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:170: \$builddir/test_mat -v 7.3 -c uint8 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -c uint8 write_complex_sparse" "mat73_uncompressed_extended_sparse.at:170"
( $at_check_trace; $builddir/test_mat -v 7.3 -c uint8 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:170"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_uncompressed_extended_sparse.at:171: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint8.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_uncompressed_extended_sparse.at:171"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint8.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_uncompressed_extended_sparse.at:171"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1199
#AT_START_1200
at_fn_group_banner 1200 'mat73_compressed_extended_sparse.at:27' \
  "Write 2D sparse single array" "                   " 23
at_xfail=no
(
  $as_echo "1200. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_extended_sparse.at:28" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:28"
$as_echo "mat73_compressed_extended_sparse.at:29" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:29"
$as_echo "mat73_compressed_extended_sparse.at:30" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:30"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:31: \$builddir/test_mat -v 7.3 -z -c single write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c single write_sparse" "mat73_compressed_extended_sparse.at:31"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c single write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:31"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:32: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-single.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_extended_sparse.at:32"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-single.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:32"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1200
#AT_START_1201
at_fn_group_banner 1201 'mat73_compressed_extended_sparse.at:36' \
  "Write 2D sparse int64 array" "                    " 23
at_xfail=no
(
  $as_echo "1201. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_extended_sparse.at:37" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:37"
$as_echo "mat73_compressed_extended_sparse.at:38" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:38"
$as_echo "mat73_compressed_extended_sparse.at:39" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:39"
$as_echo "mat73_compressed_extended_sparse.at:40" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:40"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:41: \$builddir/test_mat -v 7.3 -z -c int64 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c int64 write_sparse" "mat73_compressed_extended_sparse.at:41"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c int64 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:41"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:42: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-int64.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_extended_sparse.at:42"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-int64.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:42"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1201
#AT_START_1202
at_fn_group_banner 1202 'mat73_compressed_extended_sparse.at:46' \
  "Write 2D sparse uint64 array" "                   " 23
at_xfail=no
(
  $as_echo "1202. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_extended_sparse.at:47" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:47"
$as_echo "mat73_compressed_extended_sparse.at:48" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:48"
$as_echo "mat73_compressed_extended_sparse.at:49" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:49"
$as_echo "mat73_compressed_extended_sparse.at:50" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:50"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:51: \$builddir/test_mat -v 7.3 -z -c uint64 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c uint64 write_sparse" "mat73_compressed_extended_sparse.at:51"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c uint64 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:51"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:52: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-uint64.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_extended_sparse.at:52"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-uint64.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:52"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1202
#AT_START_1203
at_fn_group_banner 1203 'mat73_compressed_extended_sparse.at:56' \
  "Write 2D sparse int32 array" "                    " 23
at_xfail=no
(
  $as_echo "1203. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_extended_sparse.at:57" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:57"
$as_echo "mat73_compressed_extended_sparse.at:58" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:58"
$as_echo "mat73_compressed_extended_sparse.at:59" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:59"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:60: \$builddir/test_mat -v 7.3 -z -c int32 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c int32 write_sparse" "mat73_compressed_extended_sparse.at:60"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c int32 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:60"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:61: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-int32.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_extended_sparse.at:61"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-int32.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:61"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1203
#AT_START_1204
at_fn_group_banner 1204 'mat73_compressed_extended_sparse.at:65' \
  "Write 2D sparse uint32 array" "                   " 23
at_xfail=no
(
  $as_echo "1204. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_extended_sparse.at:66" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:66"
$as_echo "mat73_compressed_extended_sparse.at:67" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:67"
$as_echo "mat73_compressed_extended_sparse.at:68" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:68"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:69: \$builddir/test_mat -v 7.3 -z -c uint32 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c uint32 write_sparse" "mat73_compressed_extended_sparse.at:69"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c uint32 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:69"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:70: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-uint32.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_extended_sparse.at:70"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-uint32.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:70"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1204
#AT_START_1205
at_fn_group_banner 1205 'mat73_compressed_extended_sparse.at:74' \
  "Write 2D sparse int16 array" "                    " 23
at_xfail=no
(
  $as_echo "1205. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_extended_sparse.at:75" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:75"
$as_echo "mat73_compressed_extended_sparse.at:76" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:76"
$as_echo "mat73_compressed_extended_sparse.at:77" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:77"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:78: \$builddir/test_mat -v 7.3 -z -c int16 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c int16 write_sparse" "mat73_compressed_extended_sparse.at:78"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c int16 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:78"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:79: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-int16.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_extended_sparse.at:79"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-int16.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:79"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1205
#AT_START_1206
at_fn_group_banner 1206 'mat73_compressed_extended_sparse.at:83' \
  "Write 2D sparse uint16 array" "                   " 23
at_xfail=no
(
  $as_echo "1206. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_extended_sparse.at:84" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:84"
$as_echo "mat73_compressed_extended_sparse.at:85" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:85"
$as_echo "mat73_compressed_extended_sparse.at:86" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:86"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:87: \$builddir/test_mat -v 7.3 -z -c uint16 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c uint16 write_sparse" "mat73_compressed_extended_sparse.at:87"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c uint16 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:87"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:88: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-uint16.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_extended_sparse.at:88"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-uint16.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:88"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1206
#AT_START_1207
at_fn_group_banner 1207 'mat73_compressed_extended_sparse.at:92' \
  "Write 2D sparse int8 array" "                     " 23
at_xfail=no
(
  $as_echo "1207. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_extended_sparse.at:93" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:93"
$as_echo "mat73_compressed_extended_sparse.at:94" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:94"
$as_echo "mat73_compressed_extended_sparse.at:95" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:95"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:96: \$builddir/test_mat -v 7.3 -z -c int8 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c int8 write_sparse" "mat73_compressed_extended_sparse.at:96"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c int8 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:96"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:97: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-int8.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_extended_sparse.at:97"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-int8.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:97"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1207
#AT_START_1208
at_fn_group_banner 1208 'mat73_compressed_extended_sparse.at:101' \
  "Write 2D sparse uint8 array" "                    " 23
at_xfail=no
(
  $as_echo "1208. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_extended_sparse.at:102" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:102"
$as_echo "mat73_compressed_extended_sparse.at:103" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:103"
$as_echo "mat73_compressed_extended_sparse.at:104" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:104"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:105: \$builddir/test_mat -v 7.3 -z -c uint8 write_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c uint8 write_sparse" "mat73_compressed_extended_sparse.at:105"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c uint8 write_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:105"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:106: cp \$srcdir/results/readvar-write_sparse-sparse_matrix-uint8.out expout
          \$builddir/test_mat readvar test_write_sparse.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_extended_sparse.at:106"
( $at_check_trace; cp $srcdir/results/readvar-write_sparse-sparse_matrix-uint8.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:106"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1208
#AT_START_1209
at_fn_group_banner 1209 'mat73_compressed_extended_sparse.at:110' \
  "Write 2D sparse complex single array" "           " 23
at_xfail=no
(
  $as_echo "1209. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_extended_sparse.at:111" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:111"
$as_echo "mat73_compressed_extended_sparse.at:112" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:112"
$as_echo "mat73_compressed_extended_sparse.at:113" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:113"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:114: \$builddir/test_mat -v 7.3 -z -c single write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c single write_complex_sparse" "mat73_compressed_extended_sparse.at:114"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c single write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:114"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:115: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-single.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_extended_sparse.at:115"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-single.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:115"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1209
#AT_START_1210
at_fn_group_banner 1210 'mat73_compressed_extended_sparse.at:119' \
  "Write 2D sparse complex int64 array" "            " 23
at_xfail=no
(
  $as_echo "1210. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_extended_sparse.at:120" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:120"
$as_echo "mat73_compressed_extended_sparse.at:121" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:121"
$as_echo "mat73_compressed_extended_sparse.at:122" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:122"
$as_echo "mat73_compressed_extended_sparse.at:123" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:123"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:124: \$builddir/test_mat -v 7.3 -z -c int64 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c int64 write_complex_sparse" "mat73_compressed_extended_sparse.at:124"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c int64 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:124"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:125: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-int64.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_extended_sparse.at:125"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-int64.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:125"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1210
#AT_START_1211
at_fn_group_banner 1211 'mat73_compressed_extended_sparse.at:129' \
  "Write 2D sparse complex uint64 array" "           " 23
at_xfail=no
(
  $as_echo "1211. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_extended_sparse.at:130" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:130"
$as_echo "mat73_compressed_extended_sparse.at:131" >"$at_check_line_file"
(test $HAVE_INT64 -eq 0) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:131"
$as_echo "mat73_compressed_extended_sparse.at:132" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:132"
$as_echo "mat73_compressed_extended_sparse.at:133" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:133"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:134: \$builddir/test_mat -v 7.3 -z -c uint64 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c uint64 write_complex_sparse" "mat73_compressed_extended_sparse.at:134"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c uint64 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:134"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:135: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint64.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_extended_sparse.at:135"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint64.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:135"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1211
#AT_START_1212
at_fn_group_banner 1212 'mat73_compressed_extended_sparse.at:139' \
  "Write 2D sparse complex int32 array" "            " 23
at_xfail=no
(
  $as_echo "1212. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_extended_sparse.at:140" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:140"
$as_echo "mat73_compressed_extended_sparse.at:141" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:141"
$as_echo "mat73_compressed_extended_sparse.at:142" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:142"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:143: \$builddir/test_mat -v 7.3 -z -c int32 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c int32 write_complex_sparse" "mat73_compressed_extended_sparse.at:143"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c int32 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:143"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:144: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-int32.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_extended_sparse.at:144"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-int32.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:144"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1212
#AT_START_1213
at_fn_group_banner 1213 'mat73_compressed_extended_sparse.at:148' \
  "Write 2D sparse complex uint32 array" "           " 23
at_xfail=no
(
  $as_echo "1213. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_extended_sparse.at:149" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:149"
$as_echo "mat73_compressed_extended_sparse.at:150" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:150"
$as_echo "mat73_compressed_extended_sparse.at:151" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:151"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:152: \$builddir/test_mat -v 7.3 -z -c uint32 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c uint32 write_complex_sparse" "mat73_compressed_extended_sparse.at:152"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c uint32 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:152"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:153: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint32.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_extended_sparse.at:153"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint32.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:153"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1213
#AT_START_1214
at_fn_group_banner 1214 'mat73_compressed_extended_sparse.at:157' \
  "Write 2D sparse complex int16 array" "            " 23
at_xfail=no
(
  $as_echo "1214. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_extended_sparse.at:158" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:158"
$as_echo "mat73_compressed_extended_sparse.at:159" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:159"
$as_echo "mat73_compressed_extended_sparse.at:160" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:160"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:161: \$builddir/test_mat -v 7.3 -z -c int16 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c int16 write_complex_sparse" "mat73_compressed_extended_sparse.at:161"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c int16 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:161"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:162: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-int16.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_extended_sparse.at:162"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-int16.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:162"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1214
#AT_START_1215
at_fn_group_banner 1215 'mat73_compressed_extended_sparse.at:166' \
  "Write 2D sparse complex uint16 array" "           " 23
at_xfail=no
(
  $as_echo "1215. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_extended_sparse.at:167" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:167"
$as_echo "mat73_compressed_extended_sparse.at:168" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:168"
$as_echo "mat73_compressed_extended_sparse.at:169" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:169"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:170: \$builddir/test_mat -v 7.3 -z -c uint16 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c uint16 write_complex_sparse" "mat73_compressed_extended_sparse.at:170"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c uint16 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:170"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:171: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint16.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_extended_sparse.at:171"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint16.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:171"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1215
#AT_START_1216
at_fn_group_banner 1216 'mat73_compressed_extended_sparse.at:175' \
  "Write 2D sparse complex int8 array" "             " 23
at_xfail=no
(
  $as_echo "1216. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_extended_sparse.at:176" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:176"
$as_echo "mat73_compressed_extended_sparse.at:177" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:177"
$as_echo "mat73_compressed_extended_sparse.at:178" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:178"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:179: \$builddir/test_mat -v 7.3 -z -c int8 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c int8 write_complex_sparse" "mat73_compressed_extended_sparse.at:179"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c int8 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:179"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:180: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-int8.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_extended_sparse.at:180"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-int8.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:180"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1216
#AT_START_1217
at_fn_group_banner 1217 'mat73_compressed_extended_sparse.at:184' \
  "Write 2D sparse complex uint8 array" "            " 23
at_xfail=no
(
  $as_echo "1217. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "mat73_compressed_extended_sparse.at:185" >"$at_check_line_file"
(test $EXTENDED_SPARSE -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:185"
$as_echo "mat73_compressed_extended_sparse.at:186" >"$at_check_line_file"
(test $MAT73 -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:186"
$as_echo "mat73_compressed_extended_sparse.at:187" >"$at_check_line_file"
(test $COMPRESSION_ZLIB -ne 1) \
  && at_fn_check_skip 77 "$at_srcdir/mat73_compressed_extended_sparse.at:187"
{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:188: \$builddir/test_mat -v 7.3 -z -c uint8 write_complex_sparse"
at_fn_check_prepare_dynamic "$builddir/test_mat -v 7.3 -z -c uint8 write_complex_sparse" "mat73_compressed_extended_sparse.at:188"
( $at_check_trace; $builddir/test_mat -v 7.3 -z -c uint8 write_complex_sparse
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:188"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/mat73_compressed_extended_sparse.at:189: cp \$srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint8.out expout
          \$builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix"
at_fn_check_prepare_notrace 'an embedded newline' "mat73_compressed_extended_sparse.at:189"
( $at_check_trace; cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint8.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mat73_compressed_extended_sparse.at:189"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1217
#AT_START_1218
at_fn_group_banner 1218 'struct_api.at:27' \
  "Create struct" "                                  " 24
at_xfail=no
(
  $as_echo "1218. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/struct_api.at:29: cp \$srcdir/results/struct_api_create.out expout
          \$builddir/test_mat struct_api_create"
at_fn_check_prepare_notrace 'an embedded newline' "struct_api.at:29"
( $at_check_trace; cp $srcdir/results/struct_api_create.out expout
          $builddir/test_mat struct_api_create
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/struct_api.at:29"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1218
#AT_START_1219
at_fn_group_banner 1219 'struct_api.at:33' \
  "Set struct field" "                               " 24
at_xfail=no
(
  $as_echo "1219. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/struct_api.at:35: cp \$srcdir/results/struct_api_setfield.out expout
          \$builddir/test_mat struct_api_setfield"
at_fn_check_prepare_notrace 'an embedded newline' "struct_api.at:35"
( $at_check_trace; cp $srcdir/results/struct_api_setfield.out expout
          $builddir/test_mat struct_api_setfield
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/struct_api.at:35"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1219
#AT_START_1220
at_fn_group_banner 1220 'struct_api.at:39' \
  "Get struct fieldnames" "                          " 24
at_xfail=no
(
  $as_echo "1220. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/struct_api.at:41: cp \$srcdir/results/struct_api_getfieldnames.out expout
          \$builddir/test_mat struct_api_getfieldnames"
at_fn_check_prepare_notrace 'an embedded newline' "struct_api.at:41"
( $at_check_trace; cp $srcdir/results/struct_api_getfieldnames.out expout
          $builddir/test_mat struct_api_getfieldnames
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/struct_api.at:41"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1220
#AT_START_1221
at_fn_group_banner 1221 'struct_api.at:45' \
  "Add fields to struct" "                           " 24
at_xfail=no
(
  $as_echo "1221. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/struct_api.at:47: cp \$srcdir/results/struct_api_addfield.out expout
          \$builddir/test_mat struct_api_addfield"
at_fn_check_prepare_notrace 'an embedded newline' "struct_api.at:47"
( $at_check_trace; cp $srcdir/results/struct_api_addfield.out expout
          $builddir/test_mat struct_api_addfield
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/struct_api.at:47"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1221
#AT_START_1222
at_fn_group_banner 1222 'struct_api.at:51' \
  "Linearly index a struct" "                        " 24
at_xfail=no
(
  $as_echo "1222. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/struct_api.at:53: cp \$srcdir/results/struct_api_getlinear.out expout
          \$builddir/test_mat struct_api_getlinear"
at_fn_check_prepare_notrace 'an embedded newline' "struct_api.at:53"
( $at_check_trace; cp $srcdir/results/struct_api_getlinear.out expout
          $builddir/test_mat struct_api_getlinear
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/struct_api.at:53"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1222
#AT_START_1223
at_fn_group_banner 1223 'struct_api.at:57' \
  "Index struct via dimension slices" "              " 24
at_xfail=no
(
  $as_echo "1223. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/struct_api.at:59: cp \$srcdir/results/struct_api_get.out expout
          \$builddir/test_mat struct_api_get"
at_fn_check_prepare_notrace 'an embedded newline' "struct_api.at:59"
( $at_check_trace; cp $srcdir/results/struct_api_get.out expout
          $builddir/test_mat struct_api_get
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/struct_api.at:59"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1223
#AT_START_1224
at_fn_group_banner 1224 'cell_api.at:27' \
  "Set cell array elements" "                        " 24
at_xfail=no
(
  $as_echo "1224. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/cell_api.at:29: cp \$srcdir/results/cell_api_set.out expout
          \$builddir/test_mat cell_api_set"
at_fn_check_prepare_notrace 'an embedded newline' "cell_api.at:29"
( $at_check_trace; cp $srcdir/results/cell_api_set.out expout
          $builddir/test_mat cell_api_set
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/cell_api.at:29"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1224
#AT_START_1225
at_fn_group_banner 1225 'cell_api.at:33' \
  "Linearly index cell array" "                      " 24
at_xfail=no
(
  $as_echo "1225. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/cell_api.at:35: cp \$srcdir/results/cell_api_getlinear.out expout
          \$builddir/test_mat  cell_api_getlinear"
at_fn_check_prepare_notrace 'an embedded newline' "cell_api.at:35"
( $at_check_trace; cp $srcdir/results/cell_api_getlinear.out expout
          $builddir/test_mat  cell_api_getlinear
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/cell_api.at:35"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1225
#AT_START_1226
at_fn_group_banner 1226 'cell_api.at:39' \
  "Index cell array via dimension slices" "          " 24
at_xfail=no
(
  $as_echo "1226. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/cell_api.at:41: cp \$srcdir/results/cell_api_getcells.out expout
          \$builddir/test_mat  cell_api_getcells"
at_fn_check_prepare_notrace 'an embedded newline' "cell_api.at:41"
( $at_check_trace; cp $srcdir/results/cell_api_getcells.out expout
          $builddir/test_mat  cell_api_getcells
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/cell_api.at:41"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1226
#AT_START_1227
at_fn_group_banner 1227 'subscript_api.at:27' \
  "Calculate a set of subscripts from a linear index" "" 24
at_xfail=no
(
  $as_echo "1227. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/subscript_api.at:29: cp \$srcdir/results/ind2sub.out expout
          \$builddir/test_mat ind2sub"
at_fn_check_prepare_notrace 'an embedded newline' "subscript_api.at:29"
( $at_check_trace; cp $srcdir/results/ind2sub.out expout
          $builddir/test_mat ind2sub
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/subscript_api.at:29"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1227
#AT_START_1228
at_fn_group_banner 1228 'subscript_api.at:33' \
  "Calculate the linear index from subscript values" "" 24
at_xfail=no
(
  $as_echo "1228. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/subscript_api.at:35: cp \$srcdir/results/sub2ind.out expout
          \$builddir/test_mat sub2ind"
at_fn_check_prepare_notrace 'an embedded newline' "subscript_api.at:35"
( $at_check_trace; cp $srcdir/results/sub2ind.out expout
          $builddir/test_mat sub2ind
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/subscript_api.at:35"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1228
